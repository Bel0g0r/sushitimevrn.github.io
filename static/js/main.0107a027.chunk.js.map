{"version":3,"sources":["panels/catalog/ButtonInCart.js","panels/catalog/OneProduct.js","panels/Cart/PaymentsPage.js","panels/Cart/CartHome.js","StartPageVKapp.js","panels/ProfileUser/UserOrderList.js","panels/ProfileUser/OrderTypeList.js","panels/ProfileUser/OrderShowDeail.js","panels/Notice/index.js","panels/ProfileUser/UserInfo.js","panels/catalog/CatalogProduct.js","panels/catalog/CategoryList.js","panels/Cart/Dilivery.js","panels/Cart/DiliveryAddress.js","panels/Cart/GetOneAddress.js","panels/Cart/GetOneAddressOff.js","panels/Cart/AffiliateList.js","panels/Cart/GetOneAffiliateAddress.js","panels/preorder/index.js","panels/noPreorder/index.js","panels/Cart/NewOrderServer.js","panels/SearchResultProductBlock.js","panels/Persik.js","panels/Nopersik.js","panels/Profile.js","index.js","panels/global/index.js","img/persik.png","panels/catalog/ProductList.js","panels/Cart/FormNewAddress.js"],"names":["ButtonInCart","CartProducts","getInCarts","typeProduct","setCart","onClick","ButOk","id_CartPr","map","data","key","id_Product","type_product","counts","className","getCountButton","getButtonInCartProduct","typeProduct2","setCarts","escapeHtmlDecode","text","replace","OneProduct","product","idCategory","number_format","number","decimals","dec_point","separator","n","isFinite","prec","Math","abs","sep","dec","s","k","pow","round","toFixed","toFixedFix","split","length","Array","join","productList","ClickProduct","setProductModal","ProductCat","idTypeProduct","id","ArrayMod","ListMod","Object","keys","VisualList","datas","src","mod_img","getModyficateBlock","modyficate","href","id_Category","e","preventDefault","alt","title","img","console","log","global","Metrika","Markers","active","ym","marker","Product_Weight","weight","Product_WeightType","weight_type","description","type_info","price_discount","style","fontWeight","fontSize","marginRight","old_price","new_price","price","getPriceProducts","getProductDiv","PaymentsPage","props","state","SalePoints","value2","statusNewOrder","getReloadInfODeliveryPay","this","setState","setStates","options","i","userSystemInfo","dataUser","point","push","value","points","step","min","max","Number","onChange","setPointsDefaultsSale","top","target","String","display","justifyContent","size","stretched","marginLeft","before","sum","sumCart","DataDeliveryInfo","DeliveryPriceItog","priceDelivery","errorOrderFinal","icon","action","minSumOrder","checkTypeDiliveryInfo","listAddressGlobal","listAddressU","DataSetAddress","listAffiliateGlobal","typeOrderDate","checkPreorderActive","DataOrder","DataAddressDelivery","getAddressDelivery","addressDefault","DataAddressAffiliate","getAddressAffiliate","AffiliateDefault","idUserVK","userInfo","typeDelivery","checkedTypeDilivery","AddressDelivery","idAffiliatePickup","PointsSale","DeliverySum","Comments","comments","DopInfo","commentary","typePay","countPerson","cart","DopProductUserSet","Preorder","SelectDatePreorder","SelectTimePreorder","a","b","dateObj","Date","getCountsTimeBonus","addressOrderInfoUser","getDate","getMountsDate","getMonth","getUTCFullYear","PriceInfoVisual","getSumCartItogo","name","defaultChecked","NewOrderServer","bind","DataOrderInfo","getDataOrder","getPageOkOrderSet","setOkNewOrderView","level","activePanel","returnPlaceholderPreorder","checkPreorderType","checkMinSummaCart","React","Component","osName","platform","GetCartHome","popout","LoadDopProduct","LoadStatus","setPopout","PopupLoadDop","PresetsDopProductList","list","ListPresets","count","typeCount","textAlign","overflow","float","width","paddingRight","DopProductList","ListDopProduct","getButtonDopProduct","setDopProduct","getCountDopProductIcon","paddingBottom","height","minWidth","Prod","alls","idProduct","Buttons","margin","getCartVisual","Products","results","cartProduct","idProducts","marginBottom","clear","color","bottom","getButtonNavigation","typeNav","ButtonBlock","data-to","IOS","header","ProductList","GetPresetsVisual","theme","getOneStepCart","DopProductListVisual","Dilivery","getUserSystemInfo","setAddressDefault","setAffiliateDefault","setTypeDilivery","setComment","setDeliveryDataItogs","getDeliveryDataPriceItogAffiliate","showModal","hideModals","DataDeliveryInfoPay","require","App","parseQueryString","string","slice","queryParam","kvp","reduce","query","AudioInfo","ReloadBasket","Audio","countReloadBasket","Notice","CountNotice","CountNoticeNoView","typeOrderGetText","typeOrderGet","numberOrderShow","listOrderUser","ParamStart","products","loadingCatalog","activeStory","activePanelOrders","loadingPage","user","error","countCartProduct","dopPresets","imgListPresets","activeModal","formNewAddressData","formEditAddressData","minSumFreeDelivery","DeliveryAddressOKCity","newOrderStats","StatusLoadSlide","slideHeaderArray","slideIndex","StatusNotification","CityListBind","settingsFilterSearch","typeSearch","activeHashPageProduct","activeProductHash","activeCategoryHash","onStoryChange","search","axios","method","url","ApiKey","responseType","then","ListCitySelect","catch","err","idUsers","CountNoticeNoCheck","result","type","idNotice","getNotice","getCartDB","as","bs","currentTarget","dataset","story","aa","sumCartItog","CPr","getSumCartOnDiscount","SumDopsProduct","document","cookie","vk_platform","headers","typeSlide","getTypeSlideGet","setSlideArray","listSlide","ArraySlide","status","StatusReloadBasketData","JSON","stringify","ArraySlides","Bullets","AutoPlays","SliderVisual","maxWidth","autoplay","slideWidth","bullets","getSlideHeaderArray","setTimeout","reloadSlideHeaderSetTime","connect","sendPromise","response","is_allowed","PushClick","AllNotice","setNotice","setNoticeServer","DeleteNotifi","OffPushNotyfication","OnPushNotyfication","getStatusNotificate","setUser","getCityUser","MetrikaAction","fetchData","setInterval","getIntervalCart","setHashDataReload","dataOld","dataNew","ListProduct","setCountCartVisal","ListDopPresets","listPresetProduct","imgPresetProduct","id_user","loading","ia","listProduct","errorInfo","ListOld","ListNew","ListPresetsOld","ListPresetsNew","DopPresetsData","statusBasket","statusPresets","ReloadBasketDataFN","PlayInfoAudio","ListDopOld","ListDopNew","ReloadBasketDataDopPresets","audio","stop","play","setUserSystem","JsonBasket","basketJson","tE","countPlus","setcountCartProduct","noAdd","cartProducts","setcountCartProductVar","splice","setDataServer","btoa","encodeURI","setCartServer","HashParam","window","location","hash","newHeight","screen","send","setHashNew","setPageModalProductHash","ProductArray","def","some","queryParams","modal","onClose","setModal","right","dynamicContentHeight","caption","actions","getFilterBlockModal","osname","countNoticeView","tabbar","selected","data-story","label","getInfoSearchStatus","getSuccesOrderPage","userData","setTypeOrderList","left","addon","setOrderShowNumber","listOrderUserSet","idOrderDetail","OrderDatas","ProductsLists","sliderHeader","getSliderGalery","asideContent","after","arrayProduct","varSearch","noShadow","getDeliveryDataPriceItog","setTypeOrderDate","getNotificationPage","go","dataUsers","setStatusNotification","setShowUserOrderList","UserOrderList","loadOrders","getAllGroups","OrderTypeList","getOrderUserSystem","countOrder","Pr","reduceRight","arr","last","index","coll","concat","typeNumber","iconsD","countOrders","ListOrder","ReverceList","dataOrder","keyOrder","CurrentOrder","statusY","status_order","delete_order","summaOrders","sum_order","date","time","id_order","getOrderType","getNowOrder","getOldOrder","getCancelledOrder","getOneTypeOrders","OrderShowDetail","ststusReturn","statusOld","statusReal","ststusReturns","Order","pre_order","date_pre_order","m","sale_price","product_price","Price_sales","discount_amount","Discount","indicator","cost","product_title","price_product","title_product","title_gift_product","dilivery","dilivery_type","Address","dilivery_adres","PriceDeli","dilivery_price","TextDel","affiliate","affiliate_info","promo_status","PromoInfo","promo_code","promo_info","point_out","point_in","OrderId","padding","setRepeatOrder","alert","StatusIcon","getStatusIconText","detailText","getStatusOrderReal","getStatusOrderText","status_order_real","payment","type_pay","getPerson","person","getInfoPointsOrder","getInfoPreorderBlock","getInfoPromokod","promo","getOrderComposition","getOrderDopComposition","dopProductList","getOrderGiftComposition","giftProductList","getOrderDeliveryInfo","getComment","Comment","getRepeatOrder","statusView","Data","setNoticeData","getImagesNotice","dangerouslySetInnerHTML","__html","NoteNotice","UserInfo","them","fetchedUser","photo_200","city","first_name","last_name","getInfoUserNoneAuth","checked","textDecoration","linkSocSeti","getPanelProfil","CatalogProduct","OPT","useEffect","CategoryList","hndlClick","aP","productModal","setActiveCategory","ActiveCategory","panelCategory","searchProduct","getHashProductPageActive","DataKombo","AllProduct","res","ArrK","d","dp","ip","arrp","marginTop","multiline","FeaturesData","defs","getFeaturesData","Features","getWeightProduct","ModalProductInfo","Loadings","ClickBack","ProductInfo","position","komboPoduct","getKomboProductData","getFeaturesBlock","featuresProduct","GetCategorys","background","ClickCategory","ShowCategory","Title","onClickProduct","productsLists","idCategorys","nameCategory","GetBrandPanels","imgCategory","phonenumberCollVisual","phonenumberColl","classNameDivCategory","blueBackground","backgroundColor","UserCard","phone","email","CheckSMSCode","phoneValue","codeValue","resultVerificationCode","tooltip","snackbar","showBTNNewAddress","showFormNewAddress","openBase","phone_number","getPhoneUserVK","layout","fill","phoneVerification","VerificationCode","event","types","values_count","placeholder","getValueInputCode","checkVerificationCode","defaultValue","getValueInputPhone","setVerificationPhone","getButtonTypeOrder","DataInfos","getButtonTypeDilivery","getListAddress","getListAffiliate","getPreorderBlock","getCountPersonInput","getCommentsTextarea","setShowBTNNewAddress","showModals","getCommentsData","Param","getNoneCartProduct","getInfoUserAuth","getOkListAddress","DiliveryAddress","listAddress","listAddressOff","addressOk","dataAddress","getAddressUserSystem","AddressEdit","delUpdate","id_UserVK","getFormNewAddress","ListAddressNoDelivery","listAddressGlobalOff","getAddressUsers","street","home","diliveryData","priceDilivery","min_sum_order","min_sum_free_dilivery","setDataDiliveryPrice","setAddressInfoUsers","keyId","setDataDeliveryPrice","setAddressEdit","AddresInfo","NumberAddress","dataAddressOff","dataAddress2","keyId2","getListAddressVisual","GetOneAddress","AddressN","closePopout","comment","addressInfo","result_add","autoclose","deletedAddress","podezd","etaj","kvartira","openDefault","getAddressFull","getAddressTitle","defaultCheckedR","GetOneAddressOff","disabled","AffiliateList","listAffiliate","addressAffiliateOk","dataAffiliate","id_City","listOffAffiliate","GetOneAffiliateAddress","operating_mode","loadBlockPreorder","listDatePreorder","onChangeS","getDateList","ListDate","getSelectTime","ListTimes","timeList","ListTime","times","false","getSelectDate","getBlockPreorder","NoPreorder","loadBlockOrder","getBlocknoPreorder","SearchResultProductBlock","clrStatus","getArrayCategoryProduct","statusText","undefined","paddingTop","getStatusSearch","getProductSearchResult","ProfileUserPage","useState","setActivePanel","to","setActivePanels","ReactDOM","render","getElementById","accounts","clickmap","trackLinks","accurateTrackBounce","webvisor","version","CityIdSystem","ii","module","exports","ReverceCatalog","SearchProductTitle","DSr","Objs","retr","forEach","oneProduct","array","testInput","SearchProductDescription","SearchProductType","ListIdProduct","re","mod","testType","str","toLowerCase","compare","comparePrice","sort","ArrayProducts","ClickProductF","ReverceStatus","SearchText","CatalogLists","ArrayPr","ShowProductCategory","nameCategorys","resGetSets","GetSets","SearchState","names","GetSushi","GetRoli","GetNoneCat","ResPrVal","ResultCategoryReturn","FormNewAddress","streetSearch","entrance","flat","streetCityVisual","streetName","streetList","pauseLoadStreet","addressItems","statusChech","minValue","valPls","onInput","getStreetList","setStreetList","S","idC","nameStreet","city_users_id","params","idCity","ListCityOrigin","listCity","ListCitys","ListOption","Localitytype","LocalityName","LocalityId","typeStreet","minHeight","setStreetCityAdres","typeLocality","idLocality","saveNewAddress","saveEditAddress","getOkStreetNameValue","getFormSetStreetName","getOkStreetNameValueEdit","getFormSetStreetNameEdit","getEditForm","getNulledForm"],"mappings":"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","file":"static/js/main.0107a027.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n\r\n\r\nexport default function ButtonInCart({CartProducts,typeProduct2,setCarts}){\r\n\r\n    function getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {setCart(typeProduct);}}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    function getButtonInCartProduct(typeProduct,setCart){\r\n       // console.log(CartProducts,'---0---',typeProduct,setCart);\r\n        if(!!CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            CartProducts.map((data,key)=>{\r\n                //console.log(data.id_Product,typeProduct.id_Product, data.type_product,typeProduct.type_product,'++++++++++++++++++');\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  getCountButton(typeProduct,CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return(getButtonInCartProduct(typeProduct2,setCarts));\r\n\r\n}\r\n","import React from 'react';\r\nimport { Div } from '@vkontakte/vkui';\r\n//import {Initializer as YM} from 'react-yandex-metrika';\r\nimport ym from 'react-yandex-metrika';\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nexport default function OneProduct({product,idCategory, ClickProduct, setCart, setProductModal, getButtonInCartProduct}) {\r\n// console.log('ут должна функция должна быть',ClickProduct);\r\n    // const ArrayProducts = product.map(oneProduct =>\r\n    //     //<OneProduct key={oneProduct.id} product={oneProduct} />\r\n    //     <Div className=\"blockProduct\" key={\"id_product_\"+oneProduct.id_Product}>\r\n    //         <Div className=\"imgPrewieProduct\"><img alt={oneProduct.title} src={oneProduct.img}/></Div><Div className=\"titleProduct\">{oneProduct.title}</Div><Div className=\"DescrProduct\">{oneProduct.description}</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">{oneProduct.price} руб.</span></Div>\r\n    //     </Div>\r\n    // );\r\n\r\n    // console.log(key);\r\n\r\n    function escapeHtml(text) {\r\n        var map = {\r\n            '&': '&amp;',\r\n            '<': '&lt;',\r\n            '>': '&gt;',\r\n            '\"': '&quot;',\r\n            \"'\": '&#039;'\r\n        };\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n\r\n    function number_format(number, decimals, dec_point, separator ) {\r\n        number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n        var n = !isFinite(+number) ? 0 : +number,\r\n            prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n            sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n            dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n            s = '',\r\n            toFixedFix = function(n, prec) {\r\n                var k = Math.pow(10, prec);\r\n                return '' + (Math.round(n * k) / k)\r\n                    .toFixed(prec);\r\n            };\r\n        // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n        s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n            .split('.');\r\n        if (s[0].length > 3) {\r\n            s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n        }\r\n        if ((s[1] || '')\r\n            .length < prec) {\r\n            s[1] = s[1] || '';\r\n            s[1] += new Array(prec - s[1].length + 1)\r\n                .join('0');\r\n        }\r\n        return s.join(dec);\r\n    }\r\n\r\n    function getWeightProduct(Product_Weight,Product_WeightType){\r\n        if(Product_WeightType != 'л'){\r\n            return(\r\n                number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n            );\r\n        }else{\r\n            return(\r\n                Product_Weight+' '+Product_WeightType\r\n            );\r\n        }\r\n    }\r\n\r\n    function getModyficateBlock(ArrayMod){\r\n        var ListMod = Object.keys(ArrayMod);\r\n        if(ListMod.length <=0){\r\n            return \"\";\r\n        }else{\r\n            var VisualList = ListMod.map((datas,keys)=>{\r\n                return (<div key={keys} className=\"ModyficateProduct\"><img src={ArrayMod[datas].mod_img} /></div>);\r\n            });\r\n            return(\r\n                <div className=\"ModyficateBlock\">{VisualList}</div>\r\n            );\r\n        }\r\n    }\r\n\r\n    function getProductDiv(productList,idCategory,ClickProduct,setCart,setProductModal ,getButtonInCartProduct){\r\n\r\n         //console.log(ClickProduct,'в корзину функция');\r\n        var ProductCat = productList;\r\n\r\n        const WeightProduct = '';\r\n\r\n\r\n\r\n        const ArrayProducts = ProductCat.map((typeProduct,idTypeProduct) =>\r\n            <Div\r\n                key={\"blockProducts_\"+typeProduct.id_Product+\"_\"+idTypeProduct}\r\n                className=\"blockProduct\"\r\n                id={\"id_product_\"+typeProduct.id_Product+\"_type_\"+typeProduct.type_product}\r\n            >\r\n                {getModyficateBlock(typeProduct.modyficate)}\r\n                <Div className=\"imgPrewieProduct\">\r\n                    <a href={\"//vk.com/app7785654_328965469#getPageProduct&idCategory=\"+typeProduct.id_Category+\"&idProduct=\"+typeProduct.id_Product+\"\"} onClick={(e) => e.preventDefault()}>\r\n                        <img\r\n                            alt={typeProduct.title}\r\n                            src={typeProduct.img}\r\n                            onClick={() => {\r\n                                ClickProduct('Panels_Product');\r\n                                setProductModal([typeProduct]);\r\n                                console.log('Нажали на фотку', ProductCat, idTypeProduct);\r\n                                try {\r\n                                    if (global.Metrika.Markers[3].active == '1') {\r\n                                        ym('reachGoal', global.Metrika.Markers[3].marker);\r\n                                    }\r\n                                }catch (e) {\r\n\r\n                                }\r\n                                //console.log('reachGoal',global.Metrika.Markers[3].marker);\r\n                                // {ym(global.Metrika.idCounter, 'reachGoal', global.Metrika.Markers[3].marker)}\r\n                            }\r\n                            }\r\n                        />\r\n                    </a>\r\n                </Div>\r\n                <Div className=\"titleProduct\">\r\n                    {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                    <span className=\"titleProductOne\">{escapeHtmlDecode(typeProduct.title)}</span>\r\n                    <span className=\"redTextP\">\r\n                        {getWeightProduct(typeProduct.weight,typeProduct.weight_type)}\r\n                    </span>\r\n                    <div className=\"clr\"></div>\r\n                </Div>\r\n                <Div className=\"DescrProduct\">\r\n                    {escapeHtmlDecode(typeProduct.description)}\r\n                    <div>\r\n                    </div>\r\n                    {typeProduct.type_info != '' ?\r\n                        <div className=\"WeightBlock\">\r\n                            {typeProduct.type_info}\r\n                        </div>\r\n                        :\r\n                        \"\"\r\n                    }\r\n                </Div>\r\n                <Div className=\"priceProductBig\">\r\n\r\n                        {getPriceProducts(typeProduct)}\r\n\r\n                    {getButtonInCartProduct(typeProduct,setCart)}\r\n                </Div>\r\n            </Div>\r\n        );\r\n\r\n\r\n        return ArrayProducts;\r\n    }\r\n\r\n    function getPriceProducts(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (<span className=\"priceProduct\">\r\n                {number_format(typeProduct.price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }else{\r\n            return(\r\n                <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{number_format(typeProduct.price_discount.old_price,'0','.',' ')} ₽</s>\r\n                    {number_format(typeProduct.price_discount.new_price,'0','.',' ')} ₽\r\n                </span>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        getProductDiv(product,idCategory,ClickProduct, setCart , setProductModal, getButtonInCartProduct)\r\n    );\r\n}","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport NewOrderServer from './NewOrderServer';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Info from '@vkontakte/icons/dist/24/info';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Flash from '@vkontakte/icons/dist/24/flash';\r\n\r\nclass PaymentsPage extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            SalePoints:this.props.SalePoints,\r\n            value2:0,\r\n            statusNewOrder:'11'\r\n        }\r\n\r\n        this.props.getReloadInfODeliveryPay();\r\n    }\r\n\r\n    setPointsDefaultsSale(SalePoints){\r\n        SalePoints = SalePoints*1;\r\n        this.setState({SalePoints});\r\n        this.props.setStates({SalePoints:SalePoints});\r\n    }\r\n\r\n    options () {\r\n        let options = [];\r\n        for (let i = 0; i <= this.props.userSystemInfo.dataUser.point*1; i += 1) {\r\n            options.push(<option value={`${i}`} key={`${i}`}>{i}</option>)\r\n        }\r\n        return options;\r\n    }\r\n\r\n    getCountsTimeBonus(){\r\n        var points = this.props.userSystemInfo.dataUser.point*1;\r\n        if(points >0){\r\n            return(\r\n                <div>\r\n                        <Div>Доступно таймов для списания: <b>{points}</b></Div>\r\n                    <FormLayout>\r\n                        <Slider\r\n                            step={1}\r\n                            min={0}\r\n                            max={points}\r\n                            value={Number(this.state.SalePoints)}\r\n                            onChange={(SalePoints)=> this.setPointsDefaultsSale(SalePoints)}\r\n                            top=\"Списать в оплату\"\r\n                        />\r\n                        <Select onChange={e => this.setPointsDefaultsSale(e.target.value)} value={String(this.state.SalePoints)}>\r\n                            {this.options()}\r\n                        </Select>\r\n\r\n                    <div style={{display: 'none',justifyContent:'center'}}>\r\n                        <Button size=\"l\" stretched style={{marginRight: 10}}>Выбранное кол-во</Button>\r\n                        <Button size=\"l\" stretched style={{marginLeft: 10}}>Списать все</Button>\r\n                    </div>\r\n                    </FormLayout>\r\n                </div>);\r\n        }else{\r\n            return(<Cell className=\"IconColorOrange\" before={<Icon24Coins />}> К сожалению у Вас <b>0</b> таймов</Cell>);\r\n        }\r\n    }\r\n\r\n    getSumCartItogo(){\r\n        var sum = this.props.sumCart-this.props.SalePoints;\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog) {\r\n            sum = sum + (this.props.DataDeliveryInfo.priceDelivery * 1);\r\n        }\r\n        if(sum<0){sum = 0;}\r\n        return (sum);\r\n    }\r\n\r\n\r\n    checkMinSummaCart(){\r\n        if(this.props.DataDeliveryInfo.errorOrderFinal){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={false}\r\n\r\n                >\r\n                    <h2>Сумма минимального заказа {this.props.DataDeliveryInfo.minSumOrder} рублей</h2>\r\n                    <p>Мы не можем принять Ваш заказ, так как сумма Вашей покупки, меньше необходимой</p>\r\n                </Placeholder>\r\n            );\r\n        }else{\r\n            return(\r\n                this.checkTypeDiliveryInfo()\r\n            );\r\n        }\r\n    }\r\n\r\n    PriceInfoVisual(){\r\n        if(this.props.DataDeliveryInfo.DeliveryPriceItog){\r\n            return(\r\n                <Cell before={<Icon24Info />}> Стоимость доставки: <b>{this.props.DataDeliveryInfo.priceDelivery} ₽</b></Cell>\r\n            );\r\n        }else{\r\n            return('');\r\n        }\r\n    }\r\n\r\n    getAddressDelivery(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAddressGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAddressGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAddressGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getAddressAffiliate(e){\r\n        if(Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal).length>0){\r\n            var listAddressU = Object.keys(this.props.DataDeliveryInfo.listAffiliateGlobal);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.props.DataDeliveryInfo.listAffiliateGlobal[listAddressU[e]];\r\n        }else{\r\n            var DataSetAddress = {id:\"error\"}\r\n        }\r\n\r\n        return DataSetAddress;\r\n\r\n    }\r\n\r\n    getDataOrder(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === true) {\r\n            var checkPreorderActive = false;\r\n        }else{\r\n            var checkPreorderActive = true;\r\n        }\r\n        var DataOrder = {};\r\n\r\n        var DataAddressDelivery = this.getAddressDelivery(this.props.DataDeliveryInfo.addressDefault);\r\n        var DataAddressAffiliate = this.getAddressAffiliate(this.props.DataDeliveryInfo.AffiliateDefault);\r\n\r\n        DataOrder.idUserVK = this.props.userInfo.id;\r\n        DataOrder.typeDelivery = this.props.DataDeliveryInfo.checkedTypeDilivery;\r\n        DataOrder.AddressDelivery = {\"Info\":DataAddressDelivery,\"idAddress\":DataAddressDelivery.id};\r\n        DataOrder.idAffiliatePickup = {\"Info\":DataAddressAffiliate,\"idAffiliate\":DataAddressAffiliate.id};\r\n        DataOrder.PointsSale = this.props.SalePoints;\r\n        DataOrder.DeliverySum = this.props.DataDeliveryInfo.DeliveryPriceItog ? this.props.DataDeliveryInfo.priceDelivery : 0;\r\n        DataOrder.Comments = this.props.DataDeliveryInfo.comments;\r\n        DataOrder.DopInfo = this.props.DataDeliveryInfo.commentary;\r\n        DataOrder.typePay = this.props.DataDeliveryInfo.typePay;\r\n        DataOrder.countPerson = this.props.DataDeliveryInfo.countPerson;\r\n        DataOrder.cart = this.props.DataDeliveryInfo.cart;\r\n        DataOrder.DopProductUserSet = this.props.DataDeliveryInfo.DopProductUserSet;\r\n        DataOrder.Preorder = {\"active\":checkPreorderActive,\"datePreorder\":this.props.DataDeliveryInfo.SelectDatePreorder+'T'+this.props.DataDeliveryInfo.SelectTimePreorder};\r\n        return DataOrder;\r\n    }\r\n\r\n    getMountsDate(a,b = null){\r\n        if(b){\r\n            a = a+1;\r\n            if(a<10){return '0'+a;}\r\n        }else {\r\n            switch (a) {\r\n                case 0:\r\n                    return 'Января';\r\n                    break;\r\n                case 1 :\r\n                    return 'Февраля';\r\n                    break;\r\n                case 2 :\r\n                    return 'Марта';\r\n                    break;\r\n                case 3 :\r\n                    return 'Апреля';\r\n                    break;\r\n                case 4 :\r\n                    return 'Мая';\r\n                    break;\r\n                case 5 :\r\n                    return 'Июня';\r\n                    break;\r\n                case 6 :\r\n                    return 'Июля';\r\n                    break;\r\n                case 7 :\r\n                    return 'Августа';\r\n                    break;\r\n                case 8 :\r\n                    return 'Сенятбря';\r\n                    break;\r\n                case 9 :\r\n                    return 'Октября';\r\n                    break;\r\n                case 10 :\r\n                    return 'Ноября';\r\n                    break;\r\n                case 11 :\r\n                    return 'Декабря';\r\n                    break;\r\n                default:\r\n                    return a;\r\n            }\r\n        }\r\n    }\r\n\r\n    returnPlaceholderPreorder(a){\r\n        switch(a){\r\n            case true:\r\n                var dateObj = new Date(this.props.DataDeliveryInfo.SelectDatePreorder);\r\n                //var formated_date = dateObj.format(\"dd.mm.YYYY\");\r\n\r\n\r\n                return(<div>\r\n                        <Group title=\"Оплата бонусными баллами\">\r\n                            {this.getCountsTimeBonus()}\r\n\r\n                        </Group>\r\n                        <Group title=\"Итоговые данные по заказу\">\r\n                            <List>\r\n                                <Cell\r\n                                    before={<Icon24Place />}\r\n                                    description={<span>\r\n                                      <i>{this.props.DataDeliveryInfo.addressOrderInfoUser}</i>\r\n                                  </span>}\r\n                                    size=\"l\">\r\n                                    {this.props.checkedTypeDilivery === 0 ? \" Доставка курьером\" : \" Заберу заказ сам\"}\r\n                                </Cell>\r\n                                <Cell\r\n                                before={<Icon24Flash />}\r\n                                description={this.props.DataDeliveryInfo.typeOrderDate ? <i> В ближайшее время</i> :\r\n                                    <i> {dateObj.getDate()+' '+this.getMountsDate(dateObj.getMonth(),false)+' '+dateObj.getUTCFullYear()+'г. к '+this.props.DataDeliveryInfo.SelectTimePreorder}</i>\r\n                                }\r\n                                >\r\n                                    Время получения заказа\r\n                                </Cell>\r\n                                <Cell before={<Icon24Coins />}> Списано таймов: <b>{this.props.SalePoints}</b></Cell>\r\n                                {this.PriceInfoVisual()}\r\n                                <Cell before={<Icon24MoneyCircle />}> К оплате: <b className=\"OrangeColor\">{this.getSumCartItogo()} ₽</b></Cell>\r\n                            </List>\r\n                        </Group>\r\n                        <Group title=\"Способ оплаты\">\r\n                            <List>\r\n                                <Cell>\r\n                                    <Radio name=\"typePayments\" value=\"1\"\r\n                                           description=\"Оплата наличными при получении\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 1 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:1})}}>Наличные</Radio>\r\n                                    <Radio name=\"typePayments\" value='2' description=\"Оплата банковской картой, по терминалу\"\r\n                                           defaultChecked={this.props.DataDeliveryInfo.typePay === 2 ? true : false}\r\n                                           onClick={() => {this.props.setStates({typePay:2})}}>Терминал</Radio>\r\n\r\n                                </Cell>\r\n                                <Cell>\r\n                                    <Div>\r\n                                        <NewOrderServer setStates={this.setState.bind(this)}\r\n                                                        userInfo={this.props.userInfo}\r\n                                                        DataOrderInfo={this.getDataOrder()}\r\n                                                        getPageOkOrderSet={this.props.setStates.bind(this)}\r\n                                                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                                        />\r\n                                    </Div>\r\n                                </Cell>\r\n                            </List>\r\n                        </Group>\r\n                    </div>\r\n                );\r\n                break;\r\n            default:\r\n                return(\r\n                    <Placeholder\r\n                        icon={<Icon56ErrorOutline />}\r\n                        action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Указать вариант получения</Button>}\r\n\r\n                    >\r\n                        <h2>Не указана дата и время получения</h2>\r\n                        <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите дату получения заказа.</p>\r\n                    </Placeholder>\r\n                );\r\n        }\r\n    }\r\n\r\n    checkPreorderType(){\r\n        if(this.props.DataDeliveryInfo.typeOrderDate === false) {\r\n            if(this.props.DataDeliveryInfo.SelectDatePreorder === null){\r\n                return this.returnPlaceholderPreorder(false);\r\n            }else{\r\n                if(this.props.DataDeliveryInfo.SelectTimePreorder === null){\r\n                    return this.returnPlaceholderPreorder(false);\r\n                }else{\r\n                    return this.returnPlaceholderPreorder(true);\r\n                }\r\n            }\r\n\r\n        }else{\r\n            return this.returnPlaceholderPreorder(true);\r\n        }\r\n    }\r\n\r\n\r\n    checkTypeDiliveryInfo(){\r\n        if(this.props.checkedTypeDilivery === 0 && this.props.addressDefault === null){\r\n            return(\r\n                <Placeholder\r\n                    icon={<Icon56ErrorOutline />}\r\n                    action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.action({activePanel: \"dilivery\"});}}>Выбрать адрес</Button>}\r\n\r\n                >\r\n                <h2>Вы не выбрали адрес доставки</h2>\r\n                    <p>Пожалуйста, вернитесь на вкладку \"Оформление\" и укажите адрес доставки, либо адрес точки самовывоза, откуда Вам будет удобно забрать заказ.</p>\r\n                </Placeholder>\r\n\r\n            );\r\n        }else{\r\n            return (this.checkPreorderType());\r\n        }\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.checkMinSummaCart()\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaymentsPage;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\nimport Dilivery from \"./Dilivery\";\r\n\r\nimport './styleCart.css';\r\n\r\nimport ButtonCart from \"../catalog/ButtonInCart\";\r\nimport PaymentsPage from \"./PaymentsPage\";\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass GetCartHome extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null,\r\n            LoadDopProduct:this.props.LoadDopProduct\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    componentDidMount() {\r\n        async function PopupLoadDop(LoadStatus,setPopout){\r\n            if(LoadStatus === true) {\r\n                setPopout();\r\n            }else {\r\n                setPopout(null);\r\n            }\r\n        }\r\n\r\n        PopupLoadDop(this.state.LoadDopProduct,this.setPopout.bind(this));\r\n    }\r\n\r\n\r\n    ReloadDeliveryPay(){\r\n\r\n    }\r\n\r\n    GetPresetsVisual(){\r\n        if(Object.keys(this.props.PresetsDopProductList.list).length >0){\r\n            const ListPresets = this.props.PresetsDopProductList.list.map((datas,number)=>{\r\n                return(\r\n                    <div key={number+'PresetsTitle'}>{datas.title} -  {datas.count} {datas.typeCount}</div>\r\n                );\r\n            });\r\n            return(\r\n                <Group\r\n                title=\"В заказ так же входит\"\r\n                    style={{textAlign:\"center\",overflow: \"hidden\"}}>\r\n                    <img src={this.props.PresetsDopProductList.img}\r\n                         style={{\r\n                             float: \"left\",\r\n                             width: \"35%\",\r\n                             marginLeft:\"3%\",\r\n                             marginRight:\"3%\"\r\n                         }}\r\n                    />\r\n                    <Div style={{textAlign:\"left\",\"lineHeight\":\"2.1em\",paddingRight:\"0\"}}>{ListPresets}</Div>\r\n                </Group>\r\n            );\r\n        }else{\r\n            //console.log('oo',Object.keys(this.props.PresetsDopProductList.list).length);\r\n            return('');\r\n        }\r\n    }\r\n\r\n    DopProductListVisual(){\r\n        //console.log('Запускаемся');\r\n        if(Object.keys(this.props.DopProductList).length > 0) {\r\n            const ListDopProduct = Object.keys(this.props.DopProductList).map(\r\n                (datas,number) => {\r\n                    return (\r\n                        <div className=\"BlockOneDopProductCart\" key={datas}>\r\n                            <div className=\"imgDopProductBlock\">\r\n                                <img src={\"//суши-тайм.рф\"+this.props.DopProductList[datas].img} />\r\n                            </div>\r\n                            <div className=\"titleDopProductBlock\">\r\n                                {this.props.DopProductList[datas].title}\r\n                            </div>\r\n                            <div className=\"priceDopProductBlock WeightFontBold\">\r\n                                {this.props.DopProductList[datas].price} ₽\r\n                            </div>\r\n                            <div className=\"buttonDopProductBlock\">\r\n                                {this.getButtonDopProduct(\r\n                                    this.props.DopProductList[datas].id,\r\n                                    this.props.setDopProduct.bind(this),\r\n                                    this.getCountDopProductIcon(\r\n                                        this.props.DopProductList[datas].id,\r\n                                        this.props.DopProductUserSet\r\n                                    ),\r\n                                    this.props.DopProductList[datas].price\r\n                                )}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                }\r\n            );\r\n\r\n            return (\r\n                <Group title=\"Добавить к заказу\">\r\n                    <HorizontalScroll>\r\n                        <div key=\"AllDopProductBlock\"\r\n                             style={{display:\"flex\",paddingBottom:\"20px\"}}\r\n                        >{ListDopProduct}\r\n                            <div style={{display:\"block\",width:\"20px\",height:\"2px\",minWidth:\"2px\"}}></div>\r\n                        </div>\r\n                        <div className=\"clr\"></div>\r\n                    </HorizontalScroll>\r\n\r\n                </Group>\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    getCountDopProductIcon(Prod,alls){\r\n        //console.log(Prod,alls);\r\n        if(Prod in alls){\r\n            return alls[Prod].count;\r\n        }else{\r\n            return 0;\r\n        }\r\n    }\r\n\r\n    getButtonDopProduct(idProduct,setCart,counts = 0,price){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\" style={{float:\"none\",margin:\"auto\",display:\"block\",width:\"132px\"}}>\r\n                <div className=\"minus\" onClick={() => {\r\n                this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'-',price);\r\n                }}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {\r\n                    this.setState({\"LoadDopProduct\":true});\r\n                    setCart(idProduct,'+',price);}\r\n                }>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    setPopout(e){\r\n        if(e === ''){\r\n            // useState(<ScreenSpinner size='large' />);\r\n            this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n        }else{\r\n            // useState(e);\r\n            this.setState({popout: e});\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        function setPopout(e){\r\n            if(e === ''){\r\n                // useState(<ScreenSpinner size='large' />);\r\n                this.setState({popout: '<ScreenSpinner size=\\'large\\' />'});\r\n            }else{\r\n                // useState(e);\r\n                this.setState({popout: e});\r\n            }\r\n        }\r\n\r\n       function go(e){\r\n         setActivePanel(e);\r\n         // setActivePanel(e.currentTarget.dataset.to);\r\n       };\r\n\r\n       function setActivePanel(e){\r\n           // useState(e);\r\n          // this.setState({activePanel: e});\r\n           this.ActivePanels(e);\r\n       }\r\n\r\n       function  getCartVisual(id, Products,setCart){\r\n           //setPopout(null);\r\n            if(Products.length<=0){\r\n                return(<div style={{\"textAlign\":\"center\",\"padding\":\"5px 10px\",\"marginTop\":\"30px\"}}><h2>Корзина пуста</h2><p>К сожалению, для того чтобы что-то заказать, Вам нужно положить этот товар в корзину!</p></div>);\r\n            }else {\r\n\r\n                var results = Products.map((cartProduct,idProducts) =>\r\n                    <div className=\"ProductInCartBlock\" key={\"blockProducts_\"+idProducts}>\r\n                        <div\r\n\r\n                        className=\"blockProduct\"\r\n                        style={{\r\n                            \"width\": \" 100%\",\r\n                            \"margin\": \"5% 0\",\r\n                            \"padding\": \"0%\",\r\n                            \"float\":\"none\",\r\n                            marginBottom:10\r\n                        }}\r\n                        >\r\n                            <div className=\"imgPrewieProduct\">\r\n                                <img src={cartProduct.img}/>\r\n                            </div>\r\n                            <div className=\"titleProduct\">\r\n                                {/*{escapeHtmlDecode(typeProduct.title)}*/}\r\n                                {cartProduct.title} <span className=\"redTextP\">{cartProduct.type_info}</span>\r\n                            </div>\r\n                            <div className=\"DescrProduct2\">\r\n                                {cartProduct.description}\r\n                            </div>\r\n                            <div style={{clear:\"both\"}}>\r\n                                {/*Товаров: {cartProduct.count} <br/>*/}\r\n                                <span className=\"priceProduct\">Сумма: {getPriceProducts(cartProduct)}</span>\r\n                                <div className=\"priceProductBig\"style={{width:\"100%\",bottom:-8}}><ButtonCart CartProducts={Products} typeProduct2={cartProduct}\r\n                                                                             setCarts={setCart.bind(this)}/></div>\r\n                            </div>\r\n                        </div>\r\n                        <Separator style={{ margin: '20px 0' }} />\r\n                    </div>\r\n                );\r\n\r\n                return(<div className=\"CartBlockProducts\">{results}</div>);\r\n\r\n            }\r\n        }\r\n\r\n        function getDiliveryData(){\r\n            return (<div><h2>Доставка</h2></div>);\r\n        }\r\n\r\n\r\n        function getPriceProducts(cartProduct){\r\n          // console.log(cartProduct);\r\n            if(!(\"price_discount\" in cartProduct) || cartProduct.price_discount === false){\r\n                return (<span className=\"WeightFontBold\">\r\n                {cartProduct.count * cartProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"WeightFontBold\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\",color:\"#c2c2c2\"}}>{cartProduct.count * cartProduct.price_discount.old_price} ₽</s>\r\n                        {cartProduct.count * cartProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n\r\n        function getButtonNavigation(typeNav, action){\r\n\r\n           switch(typeNav){\r\n               case\"1\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button className=\"activeButons\" onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"2\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>;break;\r\n               case\"3\": var ButtonBlock = <div className=\"ButtonPanelNavigation\"><button onClick={()=> {action({activePanel: \"home\"});}}>В корзине</button> <button onClick={()=> {action({activePanel: \"dilivery\"});}} data-to=\"dilivery\">Оформление</button> <button className=\"activeButons\" onClick={()=> {action({activePanel: \"order\"});}}>Оплата</button></div>; break;\r\n           }\r\n\r\n           return(\r\n               <HorizontalScroll>\r\n                   {ButtonBlock}\r\n               </HorizontalScroll>\r\n           );\r\n        }\r\n\r\n        function getOneStepCartNone(){\r\n           return(\r\n               <Panel id=\"home\">\r\n\r\n                   <Placeholder\r\n                       icon={<Icon56MarketOutline />}\r\n                       action={false}\r\n\r\n                   >\r\n                       <h2>Корзина пуста</h2>\r\n                       <p>Для совершения заказа, положите в нее хотя-бы 1 товар</p>\r\n                   </Placeholder>\r\n\r\n               </Panel>\r\n           );\r\n        }\r\n\r\n        function getOneStepCart(ProductList,setCart,sumCart,setState,GetPresetsVisual,DopProductList){\r\n           return (\r\n               <Panel id=\"home\" >\r\n               <PanelHeader theme=\"light\"> {getButtonNavigation('1', setState.bind(this))}</PanelHeader>\r\n               <Group title=\"Товары\">\r\n                <Div className=\"CartBlockProductsOneStep\">\r\n                {getCartVisual(\"homes\", ProductList, setCart.bind())}\r\n            <div style={{clear:\"both\"}}></div>\r\n            </Div>\r\n        </Group>\r\n                   {GetPresetsVisual}\r\n                   {DopProductList}\r\n        <Group>\r\n            <Div className=\"SumItogOneSTepCart\">Сумма итого: <span className=\"OrangeColor\">{sumCart} ₽</span></Div>\r\n        </Group>\r\n        <Div><Button size=\"xl\" onClick={()=> {setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button></Div>\r\n               </Panel>\r\n        );\r\n        }\r\n\r\n\r\n\r\n        return(\r\n            <View\r\n                activePanel={this.state.activePanel}\r\n                className={\r\n                    osName === IOS ?\r\n                        \"IOSCLASSCSS\"\r\n                        :\r\n                        \"AndroidCLASSCSS\"\r\n                }\r\n                popout={this.state.popout}\r\n                header={this.props.ProductList.length<=0\r\n                    ?\r\n                    false\r\n                    :\r\n                    true\r\n                }\r\n            >\r\n\r\n\r\n                    {this.props.ProductList.length<=0 ? getOneStepCartNone() :\r\n\r\n                        getOneStepCart(this.props.ProductList, this.props.setCart.bind(),this.props.sumCart, this.setState.bind(this),this.GetPresetsVisual(),this.DopProductListVisual())\r\n                    }\r\n\r\n                <Panel id=\"dilivery\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('2', this.setState.bind(this))}</PanelHeader>\r\n                    <Dilivery\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        getUserSystemInfo={this.props.getUserSystemInfo.bind()}\r\n\r\n                        addressDefault={this.props.addressDefault}\r\n                        setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n\r\n                        AffiliateDefault={this.props.AffiliateDefault}\r\n                        setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        setTypeDilivery={this.props.setTypeDilivery.bind(this)}\r\n\r\n                        commentary={this.props.commentary}\r\n                        setComment={this.props.setComment.bind(this)}\r\n\r\n                        countPerson={this.props.countPerson}\r\n\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                        getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                        /*Для вычисления суммы бесплатной доставки*/\r\n                        sumCart={this.props.sumCart}\r\n\r\n                        setPopout={this.setState.bind(this)}\r\n                        ProductList={this.props.ProductList}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this)}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" stretched level=\"secondary\"  style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"home\"});}}>В корзину</Button>\r\n                        <Button size=\"l\" stretched className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"order\"});}}>К оплате</Button>\r\n                    </Div>\r\n                </Panel>\r\n                <Panel id=\"order\">\r\n                    <PanelHeader theme=\"light\">{getButtonNavigation('3', this.setState.bind(this))}</PanelHeader>\r\n                    <PaymentsPage\r\n                        userSystemInfo={this.props.userSystemInfo}\r\n                        userInfo={this.props.userInfo}\r\n                        SalePoints={this.props.SalePoints}\r\n                        setStates={this.props.setStates.bind(this)}\r\n                        sumCart={this.props.sumCart}\r\n                        checkedTypeDilivery={this.props.checkedTypeDilivery}\r\n                        addressDefault={this.props.addressDefault}\r\n\r\n                        DataDeliveryInfo={this.props.DataDeliveryInfoPay}\r\n\r\n                        getReloadInfODeliveryPay={this.props.checkedTypeDilivery ? this.props.getDeliveryDataPriceItogAffiliate.bind(this) : this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n\r\n                        action={this.setState.bind(this)}\r\n\r\n                        setOkNewOrderView={this.props.setOkNewOrderView.bind(this)}\r\n                    />\r\n                    <Div style={{display: 'flex'}}>\r\n                        <Button size=\"l\" level=\"secondary\" stretched style={{ marginRight: 8 }} className=\"activeButons\" onClick={()=> {this.setState({activePanel: \"dilivery\"});}} data-to=\"dilivery\">К оформлению</Button>\r\n\r\n                    </Div>\r\n                </Panel>\r\n            </View>\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default GetCartHome;","import React, {useState} from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport {platform, IOS, Group, Cell, ModalRoot,Radio, ModalPage, ModalPageHeader, HeaderButton, Placeholder, Button, Gallery, Switch} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\n\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Icon56CheckCircleOutline from '@vkontakte/icons/dist/56/check_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport UserOrderList from './panels/ProfileUser/UserOrderList';\r\nimport OrderTypeList from './panels/ProfileUser/OrderTypeList';\r\nimport OrderShowDeail from './panels/ProfileUser/OrderShowDeail';\r\n\r\n\r\nimport Notice from './panels/Notice/index';\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\n\r\nimport ButtonCart from  \"./panels/catalog/ButtonInCart\";\r\n\r\n\r\nimport {Div, Epic, Tabbar, TabbarItem, Panel, PanelHeader, Search} from '@vkontakte/vkui';\r\n//import Icon28Messages from '@vkontakte/icons/dist/28/messages';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport Icon28Notifications from '@vkontakte/icons/dist/28/notifications';\r\nimport Icon28User from '@vkontakte/icons/dist/28/user';\r\nimport Icon28MarketOutline from '@vkontakte/icons/dist/28/market_outline';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport AppHome from \"./panels/Profile\";\r\nimport CatalogProduct from \"./panels/catalog/CatalogProduct\";\r\nimport SearchResultProductBlock from './panels/SearchResultProductBlock';\r\n\r\nimport './panels/catalog/product.css';\r\nimport GetCartHome from \"./panels/Cart/CartHome\";\r\n\r\nimport ym from 'react-yandex-metrika';\r\n\r\nrequire('./panels/global/index.js');\r\n\r\nclass App extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            AudioInfo:{\r\n                ReloadBasket: new Audio('//суши-тайм.рф/audio/ReloadBasketInfo2.mp3')\r\n            },\r\n\r\n            countReloadBasket:0,\r\n\r\n            Notice:[],\r\n            CountNotice:0,\r\n            CountNoticeNoView:null,\r\n\r\n            typeOrderGetText:'Текущие заказы',\r\n            typeOrderGet:'now',\r\n            numberOrderShow:0,\r\n            listOrderUser:[],\r\n\r\n            ParamStart:false,\r\n            products:[],\r\n            DopProductList:[],\r\n            DopProductUserSet:{},\r\n            LoadDopProduct:false,\r\n            loadingCatalog:false,\r\n            activeStory: 'catalog',\r\n            activePanelOrders:\"ListTypeOrder\",\r\n            loadingPage: true,\r\n            user:[],\r\n            userSystemInfo:{error:true,dataUser:\"\"},\r\n            cart:[],\r\n            countCartProduct:'',\r\n\r\n            dopPresets: [],\r\n            imgListPresets: false,\r\n\r\n            addressDefault:null,\r\n            AffiliateDefault:0,\r\n            checkedTypeDilivery:0,\r\n            commentary:\"\",\r\n            typePay:1,\r\n            countPerson:1,\r\n            SalePoints:0,\r\n            sumCart:0,\r\n            activeModal:null,\r\n            formNewAddressData:'',\r\n            formEditAddressData:'',\r\n\r\n            listAddressGlobal:[],\r\n            listAffiliateGlobal:[],\r\n\r\n            priceDelivery:0,\r\n            minSumOrder:1,\r\n            minSumFreeDelivery:0,\r\n\r\n            //Если сумма корзины меньше необходимой для заказа\r\n            errorOrderFinal:false,\r\n            //Если сумма корзины меньше бесплатной доставки\r\n            DeliveryPriceItog:false,\r\n\r\n            //Доставка на адрес возможна, сли false, то не возможна\r\n            DeliveryAddressOKCity:true,\r\n\r\n            //Адрес, для отображения в последнем блоке корзины\r\n            addressOrderInfoUser:'',\r\n            newOrderStats:false,\r\n\r\n            StatusLoadSlide:false,\r\n            slideHeaderArray:[],\r\n            slideIndex: 0,\r\n\r\n            StatusNotification:false,\r\n\r\n            CityListBind:[],\r\n\r\n            typeOrderDate:true,\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null,\r\n\r\n            settingsFilterSearch:{\r\n                typeSearch: global.settingsFilterSearch.typeSearch\r\n            },\r\n\r\n            activeHashPageProduct:false,\r\n            activeProductHash:{},\r\n            activeCategoryHash:\"38\"\r\n\r\n        };\r\n        this.onStoryChange = this.onStoryChange.bind(this);\r\n        this.onChange = this.onChange.bind(this);\r\n    }\r\n\r\n    onChange (e) {\r\n        this.setState({ search: e});\r\n    }\r\n\r\n\r\n\r\n    getCityUser(){\r\n        axios({\r\n            method:'get',\r\n            url:'https://суши-тайм.рф/api/getCity&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n\r\n                }else{\r\n                    this.state.ListCitySelect = data.list;\r\n                    global.CityListBind = data.list;\r\n                    console.log('Установили города',global.CityListBind);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения городов',err);\r\n            });\r\n    }\r\n\r\n    getNotice(idUsers){\r\n        axios({\r\n            method:'get',\r\n            url:'https://суши-тайм.рф/api/getNotice&idUserVK='+idUsers+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    //console.log('Получили уведомления',data);\r\n                    this.state.CountNotice = null;\r\n                    this.state.CountNoticeNoView = null;\r\n                    this.state.Notice = [];\r\n                }else{\r\n                    if((this.state.CountNoticeNoView !== data.CountNoticeNoCheck) || (this.state.CountNotice !== data.CountNotice)) {\r\n                        this.state.Notice = data.result;\r\n                        this.state.CountNotice = data.CountNotice;\r\n                        this.state.CountNoticeNoView = data.CountNoticeNoCheck;\r\n                        console.log('Получили уведомления', this.state.Notice);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n\r\n    setNoticeServer(type,idNotice){\r\n        var idUsers = this.state.user.id;\r\n        axios({\r\n            method:'get',\r\n            url:'https://суши-тайм.рф/api/setNoticeStatus&idUserVK='+idUsers+'&idNotice='+idNotice+'&typeSet='+type+'&apiKey='+global.ApiKey,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log('Получили уведомления',data);\r\n                }else{\r\n                    this.getNotice(idUsers);\r\n                    console.log('Получили уведомления',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения уведомлений', err);\r\n            });\r\n    }\r\n\r\n    getInfoSearchStatus(){\r\n        if(global.settingsFilterSearch.typeProduct === false){\r\n            return \"\";\r\n        }else{\r\n            return \"вкл\";\r\n        }\r\n    }\r\n\r\n    parseQueryString = (string) => {\r\n        return string.slice(1).split('&')\r\n            .map((queryParam) => {\r\n                let kvp = queryParam.split('=');\r\n                return {key: kvp[0], value: kvp[1]}\r\n            })\r\n            .reduce((query, kvp) => {\r\n                query[kvp.key] = kvp.value;\r\n                return query\r\n            }, {})\r\n    };\r\n\r\n\r\n    setOkNewOrderView(){\r\n        console.log('Показать окно');\r\n        if(this.state.newOrderStats) {\r\n            this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n            this.setState({activeStory: 'newOrderInfo',\r\n                typeOrderDate:true,\r\n                SelectDatePreorder:null,\r\n                SelectTimePreorder:null,\r\n                DopProductUserSet:{}\r\n            });\r\n            this.getUserSystemInfo(this.state.user.id);\r\n        }else{\r\n            console.log('Ну не совсем');\r\n        }\r\n    }\r\n\r\n    setShowUserOrderList(){\r\n        this.setState({activeStory: 'UserOrderList'});\r\n    }\r\n\r\n    setTypeOrderList(as,bs){\r\n        this.setState({\r\n            typeOrderGetText:as,\r\n            typeOrderGet:bs,\r\n            activePanelOrders: 'OrdersListUserType'\r\n        });\r\n    }\r\n\r\n\r\n    getSuccesOrderPage(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56CheckCircleOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.setState({\r\n                             typeOrderGetText:\"Текущие заказы\",\r\n                             typeOrderGet:\"now\",\r\n                             activePanelOrders: 'OrdersListUserType',\r\n                             activeStory: 'UserOrderList'\r\n                         });}}>Узнать статус заказа</Button>}\r\n\r\n            >\r\n                <h2>Ваш заказ принят</h2>\r\n                <p>Мы приняли Ваш заказ и отправили его в производство. Узнать детали заказа Вы можете по ссылке</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    getDeliveryDataPriceItog(){\r\n        if(this.state.minSumOrder < this.state.sumCart){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.minSumFreeDelivery <= this.state.sumCart){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет ',this.state.minSumFreeDelivery+' < '+this.state.sumCart);\r\n    }\r\n\r\n\r\n    getDeliveryDataPriceItogAffiliate(){\r\n        this.setState({\r\n            priceDelivery: 0,\r\n            minSumOrder: 1,\r\n            minSumFreeDelivery: 0\r\n        });\r\n\r\n        if(this.state.sumCart > 1){\r\n            this.setState({errorOrderFinal:false});\r\n            if(this.state.sumCart > 0){\r\n                // ##Доставка бесплатная\r\n                this.setState({DeliveryPriceItog:false});\r\n            }else{\r\n                // Доставка платная\r\n                this.setState({DeliveryPriceItog:true});\r\n            }\r\n        }else{\r\n            this.setState({errorOrderFinal:true});\r\n        }\r\n        //console.log('Выполнили перерасчет на самовывоз');\r\n    }\r\n\r\n    onStoryChange (e) {\r\n        this.setState({ activeStory: e.currentTarget.dataset.story })\r\n    }\r\n\r\n    setcountCartProduct(e,aa = false){\r\n        if(e == 0){e = '';}\r\n        if(aa === false) {\r\n            this.setState({\r\n                countCartProduct: e\r\n            });\r\n        }\r\n\r\n        var sumCartItog = 0;\r\n        this.state.cart.map((CPr)=>{\r\n                sumCartItog += this.getSumCartOnDiscount(CPr);\r\n            }\r\n        );\r\n\r\n        var SumDopsProduct = 0;\r\n        if(Object.keys(this.state.DopProductUserSet).length > 0){\r\n\r\n            Object.keys(this.state.DopProductUserSet).map((id,n)=>{\r\n                    SumDopsProduct += this.state.DopProductUserSet[id].count*(this.state.DopProductUserSet[id].price*1)\r\n            });\r\n        }\r\n\r\n        //console.log(SumDopsProduct);\r\n        this.setState({sumCart:sumCartItog+SumDopsProduct});\r\n\r\n        document.cookie = \"cart = \"+this.state.cart;\r\n    }\r\n\r\n    getSumCartOnDiscount(typeProduct){\r\n        if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n            return (typeProduct.price*typeProduct.count);\r\n        }else{\r\n            return(typeProduct.price_discount.new_price*typeProduct.count);\r\n        }\r\n    }\r\n\r\n    setComment(e){\r\n        this.setState({\r\n            commentary:e\r\n        });\r\n    }\r\n\r\n    setUser(e){\r\n        this.setState({user:e});\r\n    }\r\n\r\n    setUserSystem(e){\r\n        this.setState({userSystemInfo:{error:false,dataUser:e}});\r\n    }\r\n\r\n    getTypeSlideGet(){\r\n        switch(this.state.ParamStart.vk_platform){\r\n            case\"desktop_web\": return \"desktop\";break;\r\n            default: return \"mobile\";\r\n        }\r\n    }\r\n\r\n\r\n    getSlideHeaderArray(){\r\n        if(this.state.ParamStart === false){\r\n\r\n        }else {\r\n            //console.log(this.state.ParamStart);\r\n            axios('https://суши-тайм.рф/api/getSlideHeader&apiKey='+global.ApiKey,\r\n                {\r\n                    method: 'POST',\r\n                    headers: {'Content-Type': 'application/x-www-form-urlencoded'},\r\n                    data: {\r\n                        typeSlide: this.getTypeSlideGet(),\r\n                    },\r\n                    responseType: 'text'\r\n                })\r\n                .then(({data}) => {\r\n                    if (\"error\" in data) {\r\n                        this.setSlideArray([], false);\r\n                        // console.log(data.error, '|', data.errorInfo);\r\n                    } else {\r\n                        //console.log(data.listSlide);\r\n                        this.setSlideArray(data.listSlide, true);\r\n                    }\r\n                })\r\n                .catch(({err}) => {\r\n                    console.log(\"ERROR: ---Получение слайдов---  \", err);\r\n                });\r\n        }\r\n    }\r\n\r\n    setSlideArray(ArraySlide,status){\r\n        if(status === true) {\r\n            var ststusSlideData = this.StatusReloadBasketData(JSON.stringify(this.state.slideHeaderArray),JSON.stringify(ArraySlide));\r\n            if(ststusSlideData === true) {\r\n                this.setState({slideHeaderArray: ArraySlide});\r\n                if (this.state.StatusLoadSlide === false) {\r\n                    this.setState({StatusLoadSlide: true});\r\n                }\r\n            }\r\n\r\n        }else{\r\n            if (this.state.StatusLoadSlide === true) {\r\n                this.setState({StatusLoadSlide: false});\r\n            }\r\n        }\r\n    }\r\n\r\n    getSliderGalery(){\r\n        var ArraySlides = Object.keys(this.state.slideHeaderArray);\r\n        var Bullets = \"dark\";\r\n        var AutoPlays = \"7000\";\r\n        var countNumber = ArraySlides.length;\r\n        if(ArraySlides.length <= 1){Bullets = false;AutoPlays = false;}\r\n        if(this.state.StatusLoadSlide === true & ArraySlides.length > 0) {\r\n            var SliderVisual = ArraySlides.map((datas,keys) => {\r\n                //console.log(datas);\r\n                return (<img key={keys} src={this.state.slideHeaderArray[datas].img} style={{maxWidth:\"100%\"}}/>);\r\n            });\r\n\r\n            return (\r\n                <Gallery\r\n                    autoplay={AutoPlays}\r\n                    //slideIndex={this.state.slideIndex}\r\n                    //onEnd={()=>{this.setState({\"slideIndex\":0})}}\r\n                    slideWidth=\"100%\"\r\n                    style={{width:\"100%\",height: \"auto\"}}\r\n                    bullets={Bullets}\r\n                >\r\n                    {SliderVisual}\r\n                </Gallery>\r\n            );\r\n        }else{\r\n            return(\r\n                \"\"\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    reloadSlideHeaderSetTime(){\r\n        this.getSlideHeaderArray();\r\n        setTimeout(this.reloadSlideHeaderSetTime.bind(this),5000);\r\n    }\r\n\r\n\r\n\r\n\r\n    ///////Уведомления PUSH\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n            });\r\n    }\r\n\r\n    setStatusNotification(e){\r\n        this.setState({StatusNotification:e});\r\n    }\r\n\r\n    DeleteNotifi(idNotice){\r\n        // this.Notice[idNotice]\r\n        delete this.state.Notice[idNotice];\r\n        // Object.keys(this.state.Notice).splice(idNotice, 1);\r\n    }\r\n\r\n\r\n    getNotificationPage(){\r\n        return(\r\n            <Notice\r\n                StatusNotification={this.state.StatusNotification}\r\n                PushClick={this.PushClick.bind(this)}\r\n                setState={this.setState.bind(this)}\r\n\r\n                AllNotice={this.state.Notice}\r\n\r\n                setNotice={this.setNoticeServer.bind(this)}\r\n                DeleteNotifi={this.DeleteNotifi.bind(this)}\r\n            />\r\n        );\r\n    }\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n            })\r\n            .catch((err)=> {\r\n                    this.setState({StatusNotification: false});\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    ///////\r\n\r\n    componentDidMount() {\r\n        this.getCityUser();\r\n        this.getStatusNotificate();\r\n        async function fetchData(setUser,getCartDB,getUserSystemInfo,getNotice,countReloadBasket) {\r\n            const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            setUser(user);\r\n            //setPopout(null);\r\n            //setModal(MODAL_CARD_MONEY_SEND);\r\n            //console.log('...','Получили данные пользователя',user.id);\r\n            getCartDB(user.id,countReloadBasket);\r\n            getNotice(user.id);\r\n            getUserSystemInfo(user.id);\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            // url:'https://суши-тайм.рф/test.json',\r\n            // url:'https://суши-тайм.рф/test2.json',\r\n            url:'https://суши-тайм.рф/api/Catalog&apiKey='+global.ApiKey+'&idCategoryKeyArray=true&idProductKeyArray=true',\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data.list);\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                products: data.list,\r\n                Metrika: data.MetrikaAction,\r\n                loadingCatalog:true\r\n            });\r\n            global.Metrika = data.MetrikaAction;\r\n            //console.log(this.state.Metrika);\r\n            console.log(global.Metrika);\r\n        })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n\r\n        fetchData(this.setUser.bind(this),this.getCartDB.bind(this),this.getUserSystemInfo.bind(this),this.getNotice.bind(this),this.state.countReloadBasket);\r\n        this.reloadSlideHeaderSetTime();\r\n            setInterval(function() {this.getIntervalCart(1)}.bind(this), 3000);\r\n            setInterval(function() {this.getNotice(this.state.user.id)}.bind(this), 3000);\r\n            this.setHashDataReload(this);\r\n    }\r\n\r\n    getIntervalCart(i){\r\n        this.getCartDB(this.state.user.id,this.state.countReloadBasket);\r\n        // console.log('Запустили получение корзины '+i);\r\n        i++;\r\n        // setTimeout(function() {this.getIntervalCart(i)}.bind(this), 3000);\r\n    }\r\n\r\n    StatusReloadBasketData(dataOld,dataNew){\r\n        if(dataOld === dataNew){return false;}else{return true;}\r\n    }\r\n\r\n\r\n    ReloadBasketDataFN(ListProduct){\r\n       // console.log('Обновили корзину');\r\n        this.setState({\r\n            // products: data.list[0].ProductList\r\n            cart: ListProduct,\r\n            loadingPage: false\r\n        });\r\n        this.setCountCartVisal();\r\n    }\r\n\r\n\r\n    ReloadBasketDataDopPresets(ListDopPresets){\r\n        if(ListDopPresets !== false){\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: ListDopPresets.listPresetProduct,\r\n                imgListPresets: ListDopPresets.imgPresetProduct\r\n            });\r\n        }else{\r\n            this.setState({\r\n                // products: data.list[0].ProductList\r\n                dopPresets: [],\r\n                imgListPresets: false\r\n            });\r\n        }\r\n    }\r\n\r\n    getCartDB(id_user,countReloadBasket = 0){\r\n\r\n        if(countReloadBasket>0){\r\n           // console.log('Ну вроде как работает, но нет');\r\n        }else {\r\n            if (this.state.loading === false) {\r\n                this.setState({loading: true});\r\n                var ia = this.state.countReloadBasket+1;\r\n                this.setState({countReloadBasket:ia});\r\n               // console.log('АХАХАХ блять ',ia);\r\n            }\r\n\r\n        }\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://суши-тайм.рф/api/getBasketVK&apiKey='+global.ApiKey+'&updateBasket=1minute&id_user_vk='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n                data.listProduct = [];\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }\r\n\r\n            if(data.listProduct === null){\r\n                data.listProduct = [];\r\n            }\r\n\r\n            var ListOld = JSON.stringify(this.state.cart);\r\n            var ListNew = JSON.stringify(data.listProduct);\r\n            var ListPresetsOld = JSON.stringify(this.state.dopPresets);\r\n\r\n            var ListPresetsNew = JSON.stringify(data.DopPresetsData);\r\n            if(ListPresetsNew == 'false'){\r\n                ListPresetsNew = '[]';\r\n            }else{\r\n                ListPresetsNew = JSON.stringify(data.DopPresetsData.listPresetProduct)\r\n            }\r\n\r\n            var statusBasket = this.StatusReloadBasketData(ListOld,ListNew);\r\n            var statusPresets = this.StatusReloadBasketData(ListPresetsOld,ListPresetsNew);\r\n\r\n            if(statusBasket === true) {\r\n                this.ReloadBasketDataFN(data.listProduct);\r\n                this.PlayInfoAudio('ReloadBasket');\r\n            }\r\n\r\n            if(\"DopProductList\" in data) {\r\n                var ListDopOld = JSON.stringify(this.state.DopProductList);\r\n                var ListDopNew = JSON.stringify(data.DopProductList);\r\n\r\n                var statusDopProduct = this.StatusReloadBasketData(ListDopOld,ListDopNew);\r\n\r\n                if(statusDopProduct === true) {\r\n                    this.setState({\"DopProductList\": data.DopProductList});\r\n                    //console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }else{\r\n                   // console.log(ListDopOld,ListDopNew,'|||||',data.DopProductList);\r\n                }\r\n            }\r\n\r\n            if(statusPresets === true || ListPresetsNew ===false) {\r\n                this.ReloadBasketDataDopPresets(data.DopPresetsData);\r\n                //console.log('АХАХАХ блять ',ListPresetsNew,' -|-|-|- ',ListPresetsOld);\r\n            }\r\n\r\n\r\n\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n\r\n    }\r\n\r\n    PlayInfoAudio(a){\r\n            if (this.audio) {\r\n                // this.audio.pause();\r\n                this.audio.stop();\r\n            }\r\n            switch (a) {\r\n                case\"ReloadBasket\":\r\n                   // this.audio = this.state.AudioInfo.ReloadBasket;\r\n                    this.state.AudioInfo.ReloadBasket.play();\r\n                    //alert('Запуск звука');\r\n                    break;\r\n            }\r\n    }\r\n\r\n\r\n    getUserSystemInfo(id_user){\r\n        this.setState({loading: true});\r\n\r\n        axios({\r\n            method:'get',\r\n            url:'https://суши-тайм.рф/api/Users&apiKey='+global.ApiKey+'&updateUserSystemInfo=one&idUserVK='+id_user,\r\n            responseType:'text'\r\n        }).then(({ data }) => {\r\n            //console.log(\"Пришли данные \",data);\r\n            if(\"error\" in data){\r\n\r\n                console.log(data.error,'|',data.errorInfo);\r\n            }else{\r\n                this.setUserSystem(data.list[0]);\r\n            }\r\n\r\n            this.setState({\r\n                loadingPage: false\r\n            });\r\n            //console.log(\"userSystemInfo\",this.state.userSystemInfo);\r\n        })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ------  \",err);\r\n            });\r\n        //setUserSystem(e);\r\n    }\r\n\r\n\r\n    setCartServer(id_user,JsonBasket){\r\n        //console.log(JsonBasket,'___А_А_АА_А_А_А_');\r\n        axios('https://суши-тайм.рф/api/setBasketVK&apiKey='+global.ApiKey+'&id_user_vk='+id_user,\r\n            {\r\n            method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n            data: {\r\n                basketJson: JsonBasket,\r\n            },\r\n            responseType:'text'\r\n        })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Отправка корзины---  \",err);\r\n            });\r\n    }\r\n\r\n    setCart(e,tE = '+'){\r\n        //console.log('Товар в корзине, вот этот ',e);\r\n        //this.setState({cart:e});\r\n        const counts = this.state.cart.length;\r\n        if(tE == '+'){\r\n            //Добавляем товар\r\n            if(counts<=0) {\r\n               // console.log('Добавляем Новый товар в корзину');\r\n                this.state.cart.push(e);\r\n                const countPlus = counts;\r\n                this.state.cart[countPlus].count = 1;\r\n                this.setcountCartProduct(1);\r\n            }else{\r\n               // console.log('В принципи верно, но цикл не тот', counts);\r\n                var noAdd = true;\r\n\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Добавляем еще такой же товар');\r\n                        this.state.cart[key].count = this.state.cart[key].count + 1;\r\n                        setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                        noAdd =false;\r\n                    }\r\n                    }\r\n                );\r\n\r\n                if(noAdd === true){\r\n                   // console.log('Добавляем новый товар, так как тагого же нет');\r\n                    this.state.cart.push(e);\r\n                    const countPlus = counts;\r\n                    this.state.cart[countPlus].count = 1;\r\n                    setcountCartProductVar++;\r\n                }\r\n\r\n            }\r\n        }else{\r\n            //Удаляем товар\r\n            if(counts<=0) {\r\n\r\n            }else{\r\n                var noAdd = true;\r\n                this.state.cart.map((cartProducts,key)=>\r\n                    {if(cartProducts.id_Product === e.id_Product && cartProducts.type_product===e.type_product){\r\n                       // console.log('Удаляем товар 1 товар с этим id и типом');\r\n                        if( this.state.cart[key].count<=1){\r\n                            // delete this.state.cart[key];\r\n                            this.state.cart.splice(key, 1);\r\n                        }else{\r\n                            this.state.cart[key].count = this.state.cart[key].count - 1;\r\n                            setcountCartProductVar = setcountCartProductVar+this.state.cart[key].count;\r\n                            noAdd =false;\r\n                        }\r\n                    }\r\n                    }\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n        {setcountCartProductVar = setcountCartProductVar+CPr.count}\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n        var setDataServer = btoa(encodeURI(JSON.stringify(this.state.cart)));\r\n       // console.log('Вот это отправляем на сервер',setDataServer);\r\n        this.setCartServer(this.state.user.id,setDataServer);\r\n    }\r\n\r\n    setDopProduct(id,type = '+',price){\r\n        const counts = this.state.DopProductUserSet.length;\r\n        switch(type){\r\n            case \"+\":\r\n                if(counts<=0){\r\n                    this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        this.state.DopProductUserSet[id].count++;\r\n                    }else{\r\n                        this.state.DopProductUserSet[id] = {\"count\":1,\"price\":price};\r\n                    }\r\n                }\r\n                break;\r\n            case \"-\":\r\n                if(counts<=0){\r\n\r\n                }else{\r\n                    if(id in this.state.DopProductUserSet) {\r\n                        if(this.state.DopProductUserSet[id].count == 1){\r\n                            //this.state.DopProductUserSet.splice(id, 1);\r\n                            delete this.state.DopProductUserSet[id];\r\n                        }else{\r\n                            this.state.DopProductUserSet[id].count--;\r\n                        }\r\n                    }\r\n                }\r\n                break;\r\n        }\r\n        console.log(this.state.DopProductUserSet);\r\n\r\n        this.setcountCartProduct(0,true);\r\n\r\n        if(!(id in this.state.DopProductUserSet) || this.state.DopProductUserSet[id].count <=0){\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return 0;\r\n        }else{\r\n            this.setState({\"LoadDopProduct\":false});\r\n            return this.state.DopProductUserSet[id].count;\r\n        }\r\n\r\n\r\n        //this.setState({\"DopProductUserSet\":a});\r\n    }\r\n\r\n\r\n    setCountCartVisal(){\r\n       // this.getCartDB(this.state.user.id);\r\n        var setcountCartProductVar = 0;\r\n        this.state.cart.map((CPr)=>\r\n            {setcountCartProductVar = setcountCartProductVar+CPr.count;\r\n            }\r\n        );\r\n        this.setcountCartProduct(setcountCartProductVar);\r\n    }\r\n\r\n    setTypeDilivery(e){\r\n        this.setState({checkedTypeDilivery:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setTypeOrderDate(e){\r\n        this.setState({typeOrderDate:e});\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setAddressDefault(e){\r\n        if(e === 'del'){\r\n            e = 0;\r\n        }\r\n        this.setState({addressDefault:e});\r\n        //console.log('По дефолту адрес теперь ',e);\r\n        //Обновляем условия доставки на 3  шаг корзины\r\n    }\r\n\r\n    setAffiliateDefault(e){\r\n        this.state.AffiliateDefault = e;\r\n       // console.log('По дефолту адрес теперь ',e);\r\n    }\r\n\r\n    setModal(e){\r\n        this.setState({activeModal:e});\r\n    }\r\n\r\n    setOrderShowNumber(a){\r\n        this.setState({numberOrderShow:a,\r\n            activePanelOrders:'OrderShowDetails'});\r\n    }\r\n\r\n    listOrderUserSet(a){\r\n       // console.log(a,'Ну блин');\r\n        this.setState({listOrderUser:a});\r\n    }\r\n\r\n    setHashDataReload(){\r\n\r\n      const HashParam =  this.parseQueryString(window.location.hash);\r\n      // const ParthParam =  this.parseQueryString(window.location.url);\r\n      //   const queryParams = this.parseQueryString(window.location.search);\r\n       // const queryParams =  new URLSearchParams(window.location.search);\r\n      //   const queryParams = this.getURLParams();\r\n      //   console.log('Парметры приняты - - - - -',HashParam);\r\n\r\n\r\n\r\n        var height=window.screen.height;\r\n        var newHeight = height*0.7;\r\n        //console.log('Какого хрена',newHeight);\r\n\r\n        connect.send(\"VKWebAppResizeWindow\", {\"height\": newHeight});\r\n\r\n        if('noticePageReload' in HashParam){\r\n            this.state.loadingCatalog = false;\r\n            this.setHashNew('notifications');\r\n        }\r\n\r\n\r\n        if('getPageProduct' in HashParam){\r\n            // this.state.loadingCatalog = false;\r\n            // this.setHashNew('notifications');\r\n            console.log('Показать модалку товара - ',HashParam.idProduct, 'из категории - ',HashParam.idCategory);\r\n\r\n            this.state.loadingCatalog === true ?\r\n               this.setPageModalProductHash(this.state.products,HashParam.idCategory,HashParam.idProduct)\r\n                :\r\n                setTimeout(()=>{ this.setHashDataReload(this)},300)\r\n\r\n            //setTimeout(()=>{ console.log(this.state.products,' товары тут');},2000)\r\n\r\n        }\r\n    }\r\n\r\n\r\n    setPageModalProductHash(ProductArray,idCategory,idProduct){\r\n\r\n        console.log(this.state.products, ' товары тут');\r\n\r\n        if(idCategory in ProductArray){\r\n            if(\"ProductList\" in ProductArray[idCategory]){\r\n                if(idProduct in ProductArray[idCategory].ProductList) {\r\n                    if(\"0\" in ProductArray[idCategory].ProductList[idProduct]){\r\n                        console.log(ProductArray[idCategory].ProductList[idProduct][0]);\r\n                        this.setState({\r\n                            activeHashPageProduct:true,\r\n                            activeProductHash:ProductArray[idCategory].ProductList[idProduct],\r\n                            activeCategoryHash:idCategory}\r\n                            )\r\n                    }else{\r\n                        console.log('Тип 0 не найден');\r\n                    }\r\n                }else{\r\n                    console.log('IdProduct не найден');\r\n                }\r\n            }else{\r\n                console.log('ProductList не найден');\r\n            }\r\n        }else{\r\n            console.log('idCategory не найден');\r\n        }\r\n\r\n        console.log('Все шаги пройдены - но какая то лажа');\r\n    }\r\n\r\n    setHashNew(a){\r\n        setTimeout(function() {\r\n            //console.log('Устанавливаем нулевой ХЕШ');\r\n            this.setState({activeStory:a});\r\n            connect.send(\"VKWebAppSetLocation\", {\"location\": \"notice\"});\r\n            this.setState({loadingCatalog:true});\r\n        }.bind(this), 1000);\r\n    }\r\n\r\n    getFilterBlockModal(def){\r\n\r\n        var defs = {0:\"\",1:\"\"};\r\n        defs[def] = \"defaultChecked\";\r\n\r\n        return(\r\n            <div>\r\n                <Group\r\n                    title=\"Искать\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 0 ? true : false}\r\n                            name=\"typeSearch\" value=\"0\"\r\n                            description=\"Поиск по наименованию товара\"\r\n                            onClick={() => {\r\n                                var some = {...this.state.settingsFilterSearch}\r\n                                some.typeSearch = 0;\r\n                                this.setState({some})\r\n                                global.settingsFilterSearch.typeSearch = 0;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >По названиям</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeSearch === 1 ? true : false}\r\n                            name=\"typeSearch\"\r\n                            value=\"1\"\r\n                            description=\"Поиск по описанию товара\"\r\n                                onClick={() => {\r\n                                    var some = {...this.state.settingsFilterSearch}\r\n                                    some.typeSearch = 1;\r\n                                    global.settingsFilterSearch.typeSearch = 1;\r\n                                    this.setState({some})\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >По составу</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group\r\n                    title=\"Тип товара\"\r\n                >\r\n                    <Cell>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === false ? true : false}\r\n                            name=\"typeSearchProduct\" value=\"0\"\r\n                            onClick={() => {\r\n                                global.settingsFilterSearch.typeProduct = false;\r\n                                // console.log(some);\r\n                                //console.log(global.settingsFilterSearch);\r\n                            }}\r\n                        >Все</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"new\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"new\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"new\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Новинки</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"hot\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"hot\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"hot\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Горячие</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"burn\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"burn\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"burn\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Острые</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"vegan\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"vegan\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"vegan\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Вегетарианские</Radio>\r\n                        <Radio\r\n                            defaultChecked={global.settingsFilterSearch.typeProduct === \"sweet\" ? true : false}\r\n                            name=\"typeSearchProduct\"\r\n                            value=\"sweet\"\r\n                                onClick={() => {\r\n                                    global.settingsFilterSearch.typeProduct = \"sweet\";\r\n                                    //console.log(global.settingsFilterSearch);\r\n                                }}\r\n                        >Десерт</Radio>\r\n                    </Cell>\r\n                </Group>\r\n                <Group>\r\n                <Cell></Cell>\r\n                </Group>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    stateRadio(a){\r\n        var some = {...this.state.settingsFilterSearch}\r\n        some.typeSearch = a;\r\n        this.setState({some});\r\n    }\r\n\r\n    render () {\r\n        const queryParams = this.parseQueryString(window.location.search);\r\n        const hashParams = this.parseQueryString(window.location.hash);\r\n\r\n        //this.setHashDataReload(hashParams);\r\n        //console.log(hashParams);\r\n        // console.log(noticePage);\r\n\r\n        if(this.state.ParamStart === false) {\r\n            //console.log(\"State = false, но \", queryParams);\r\n        }\r\n\r\n        if(this.state.ParamStart === false) {\r\n            this.state.ParamStart = queryParams;\r\n        }\r\n\r\n        // this.setState({\"ParamStart\":this.parseQueryString(window.location.search)});\r\n        // console.log('Параметры запуска ',this.state.ParamStart,' А URL такой ',window.location.search);\r\n\r\n        const modal = (\r\n            <ModalRoot activeModal={this.state.activeModal}>\r\n                <ModalPage\r\n                    id=\"MODAL_NEWADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Добавить адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Добавление адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formNewAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_EditADDRESS\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Отмена</HeaderButton>}\r\n                        >\r\n                            Редактировать адрес\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Редактирование адреса\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.state.formEditAddressData}\r\n                </ModalPage>\r\n\r\n                <ModalPage\r\n                    id=\"MODAL_Filter_Catalog\"\r\n                    onClose={() => this.setModal(null)}\r\n                    header={\r\n                        <ModalPageHeader\r\n                            right={<HeaderButton onClick={()=> {this.setModal(null)}}>Готово</HeaderButton>}\r\n                        >\r\n                            Фильтры\r\n                        </ModalPageHeader>\r\n                    }\r\n                    //icon={<Icon56MoneyTransferOutline />}\r\n                    title=\"Фильтры\"\r\n                    dynamicContentHeight=\"true\"\r\n                    caption=\"\"\r\n                    actions={[{\r\n                        title: '',\r\n                        type: 'primary',\r\n                        action: () => {\r\n                            this.setModal(null);\r\n                        }\r\n                    }]}\r\n                >\r\n                    {this.getFilterBlockModal(this.state.settingsFilterSearch.typeSearch)}\r\n                </ModalPage>\r\n            </ModalRoot>\r\n        );\r\n\r\n        const osname = platform();\r\n\r\n        if(this.state.CountNoticeNoView === 0 || this.state.CountNoticeNoView === null){\r\n            var countNoticeView = '';\r\n        }else{\r\n            var countNoticeView = this.state.CountNoticeNoView;\r\n        }\r\n\r\n        return (\r\n            <Epic activeStory={this.state.activeStory} tabbar={\r\n                <Tabbar>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'catalog'}\r\n                        data-story=\"catalog\"\r\n                        text=\"Каталог\"\r\n                    ><Icon24Note /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'discover'}\r\n                        label={this.getInfoSearchStatus()}\r\n                        data-story=\"discover\"\r\n                        text=\"Поиск\"\r\n                    ><Icon28Search /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'cart'}\r\n                        data-story=\"cart\"\r\n                        label={this.state.countCartProduct}\r\n                        text=\"Корзина\"\r\n                    ><Icon28MarketOutline /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'notifications'}\r\n                        data-story=\"notifications\"\r\n                        label={countNoticeView}\r\n                        text=\"Уведомления\"\r\n                    ><Icon28Notifications /></TabbarItem>\r\n                    <TabbarItem\r\n                        onClick={this.onStoryChange}\r\n                        selected={this.state.activeStory === 'user'}\r\n                        data-story=\"user\"\r\n                        text=\"Профиль\"\r\n                    ><Icon28User /></TabbarItem>\r\n                </Tabbar>\r\n            }>\r\n                <View id=\"newOrderInfo\" activePanel=\"newOrders\" header={false}>\r\n                    <Panel id=\"newOrders\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {this.getSuccesOrderPage()}\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n                <View id=\"UserOrderList\" activePanel={this.state.activePanelOrders} >\r\n                    <Panel id=\"ListTypeOrder\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                        >\r\n                            Мои заказы\r\n                        </PanelHeader>\r\n                        <UserOrderList\r\n                            userData={this.state.user}\r\n                            setTypeOrderList={this.setTypeOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrdersListUserType\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'ListTypeOrder'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {this.state.typeOrderGetText}\r\n                        </PanelHeader>\r\n                        <OrderTypeList\r\n                            userData={this.state.user}\r\n                            typeOrderGet={this.state.typeOrderGet}\r\n                            setOrderShowNumber={this.setOrderShowNumber.bind(this)}\r\n                            listOrderUserSet={this.listOrderUserSet.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                    <Panel id=\"OrderShowDetails\">\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            left={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => this.setState({activePanelOrders: 'OrdersListUserType'})}>Назад</HeaderButton>}\r\n                        >\r\n                            {\"Заказ №\"+ this.state.numberOrderShow}\r\n                        </PanelHeader>\r\n                        <OrderShowDeail\r\n                            idOrderDetail={this.state.numberOrderShow}\r\n                            OrderDatas={this.state.listOrderUser[this.state.numberOrderShow]}\r\n                            userData={this.state.user}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n\r\n\r\n\r\n                <View id=\"catalog\" activePanel=\"catalog\" header={false} modal={modal}>\r\n                    <Panel id=\"catalog\">\r\n                        {/*<PanelHeader noShadow={true}>Каталог товаров</PanelHeader>*/}\r\n                        {\r\n                            this.state.loadingCatalog\r\n                                ?\r\n                                <CatalogProduct\r\n                                    setCart={this.setCart.bind(this)}\r\n                                    CartProducts={this.state.cart}\r\n                                    ProductsLists={this.state.products}\r\n                                    sliderHeader={this.getSliderGalery.bind(this)}\r\n                                    queryParams={queryParams}\r\n\r\n                                    showModal={this.setModal.bind(this)}\r\n                                    hideModals={this.setModal.bind(this,null)}\r\n\r\n                                    activeProductHash={this.state.activeProductHash}\r\n                                    activeCategoryHash={this.state.activeCategoryHash}\r\n                                    activeHashPageProduct={this.state.activeHashPageProduct}\r\n                                />\r\n                                :\r\n                                <ScreenSpinner />\r\n                        }\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"discover\" activePanel=\"discover\" modal={modal}>\r\n                    <Panel id=\"discover\">\r\n                        <PanelHeader>Поиск товаров</PanelHeader>\r\n                        <Cell\r\n                            className=\"BoxCellSearch\"\r\n                            asideContent={\r\n                                <Icon24Filter\r\n                                    onClick={\r\n                                        ()=>{this.setModal('MODAL_Filter_Catalog');}\r\n                                    }\r\n                                />}\r\n                        >\r\n                            <Search\r\n                                value={this.state.search}\r\n                                onChange={this.onChange}\r\n                                after={null}\r\n                            />\r\n                        </Cell>\r\n                        <SearchResultProductBlock\r\n                            setCart={this.setCart.bind(this)}\r\n                            arrayProduct={this.state.products}\r\n                            varSearch={this.state.search}\r\n                            showModal={this.setModal.bind(this)}\r\n                            hideModals={this.setModal.bind(this,null)}\r\n                            CartProducts={this.state.cart}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"cart\" activePanel=\"cart\" modal={modal}>\r\n                    <Panel id=\"cart\" style={{\"paddingBottom\":\"40px\"}}>\r\n                        <PanelHeader theme=\"light\"\r\n                                     noShadow={false}\r\n                        >\r\n                            Корзина\r\n                        </PanelHeader>\r\n                        <div key=\"Cart_List\" style={{\"paddingBottom\":\"40px\"}}>\r\n                            {/*this.getCartVisual(this.state.cart,this.setCart.bind(this))*/}\r\n                            <GetCartHome\r\n                                ProductList={this.state.cart}\r\n                                DopProductList={this.state.DopProductList}\r\n                                DopProductUserSet={this.state.DopProductUserSet}\r\n                                setDopProduct={this.setDopProduct.bind(this)}\r\n                                LoadDopProduct={this.state.LoadDopProduct}\r\n                                PresetsDopProductList={\r\n                                    {\r\n                                    \"list\": this.state.dopPresets,\r\n                                    \"img\": this.state.imgListPresets\r\n                                    }\r\n                                }\r\n\r\n                                setCart={this.setCart.bind(this)}\r\n                                userSystemInfo={this.state.userSystemInfo}\r\n                                userInfo={this.state.user}\r\n                                getUserSystemInfo={this.getUserSystemInfo.bind(this)}\r\n\r\n                                addressDefault={this.state.addressDefault}\r\n                                setAddressDefault={this.setAddressDefault.bind(this)}\r\n\r\n                                AffiliateDefault={this.state.AffiliateDefault}\r\n                                setAffiliateDefault={this.setAffiliateDefault.bind(this)}\r\n\r\n                                checkedTypeDilivery={this.state.checkedTypeDilivery}\r\n                                setTypeDilivery={this.setTypeDilivery.bind(this)}\r\n\r\n                                commentary={this.state.commentary}\r\n                                setComment={this.setComment.bind(this)}\r\n\r\n                                countPerson={this.state.countPerson}\r\n\r\n                                SalePoints={this.state.SalePoints}\r\n\r\n                                setStates={this.setState.bind(this)}\r\n                                setDeliveryDataItogs={this.getDeliveryDataPriceItog.bind(this)}\r\n                                getDeliveryDataPriceItogAffiliate={this.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n\r\n                                sumCart={this.state.sumCart}\r\n\r\n                                showModal={this.setModal.bind(this)}\r\n                                hideModals={this.setModal.bind(this,null)}\r\n\r\n                                DataDeliveryInfoPay={\r\n                                    {\r\n                                        typeOrderDate:this.state.typeOrderDate,\r\n                                        setTypeOrderDate:this.setTypeOrderDate.bind(this),\r\n\r\n                                        SelectDatePreorder:this.state.SelectDatePreorder,\r\n                                        SelectTimePreorder:this.state.SelectTimePreorder,\r\n\r\n                                        priceDelivery:this.state.priceDelivery,\r\n                                        minSumOrder:this.state.minSumOrder,\r\n                                        minSumFreeDelivery:this.state.minSumFreeDelivery,\r\n\r\n                                        //Если сумма корзины меньше необходимой для заказа\r\n                                        errorOrderFinal:this.state.errorOrderFinal,\r\n                                        //Если сумма корзины меньше бесплатной доставки\r\n                                        DeliveryPriceItog:this.state.DeliveryPriceItog,\r\n\r\n                                        //Доставка на адрес возможна, сли false, то не возможна\r\n                                        DeliveryAddressOKCity:this.state.DeliveryAddressOKCity,\r\n\r\n                                        addressOrderInfoUser:this.state.addressOrderInfoUser,\r\n\r\n                                        checkedTypeDilivery:this.state.checkedTypeDilivery,\r\n                                        AffiliateDefault:this.state.AffiliateDefault,\r\n                                        addressDefault:this.state.addressDefault,\r\n\r\n                                        listAddressGlobal:this.state.listAddressGlobal,\r\n                                        listAffiliateGlobal: this.state.listAffiliateGlobal,\r\n\r\n                                        comments:this.state.commentary,\r\n                                        typePay:this.state.typePay,\r\n                                        countPerson:this.state.countPerson,\r\n                                        cart:this.state.cart,\r\n                                        DopProductUserSet:this.state.DopProductUserSet\r\n\r\n                                    }\r\n                                }\r\n\r\n                                setOkNewOrderView={this.setOkNewOrderView.bind(this)}\r\n\r\n                            />\r\n\r\n                        <div style={{\"clear\":\"both\"}}></div>\r\n                        </div>\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"notifications\" activePanel=\"notifications\">\r\n                    <Panel id=\"notifications\">\r\n                        <PanelHeader>Уведомления</PanelHeader>\r\n                        {this.getNotificationPage()}\r\n                    </Panel>\r\n                </View>\r\n                <View id=\"user\" activePanel=\"user\">\r\n                    <Panel id=\"user\">\r\n                        <PanelHeader>Профиль</PanelHeader>\r\n                        <AppHome\r\n                            id=\"home\"\r\n                            go=\"persik\"\r\n                            dataUsers={this.state.userSystemInfo}\r\n                            setStatusNotification={this.setStatusNotification.bind(this)}\r\n                            setShowUserOrderList={this.setShowUserOrderList.bind(this)}\r\n                        />\r\n                    </Panel>\r\n                </View>\r\n            </Epic>\r\n        )\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, CellButton} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24DoNotDisturb from '@vkontakte/icons/dist/24/do_not_disturb';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Cancel from '@vkontakte/icons/dist/24/cancel';\r\n\r\n\r\nclass UserOrderList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadOrders:false\r\n        }\r\n    }\r\n\r\n\r\n\r\n    getAllGroups(){\r\n        return(\r\n            <Group>\r\n                <CellButton\r\n                before={<Icon24Recent /> }\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Текущие заказы\",\"now\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Текущие заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24DoneOutline />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Завершенные заказы\",\"old\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Завершенные заказы</span>\r\n                </CellButton>\r\n                <CellButton\r\n                before={<Icon24Cancel />}\r\n                onClick={this.props.setTypeOrderList.bind(this,\"Отмененные заказы\",\"cancel\")}\r\n                >\r\n                    <span style={{color:\"#262522\"}}>Отмененные заказы</span>\r\n                </CellButton>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.state.loadOrders\r\n                ?\r\n                <ScreenSpinner />\r\n                :\r\n                this.getAllGroups()\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default UserOrderList;","import React from 'react';\r\n\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\n\r\n\r\nclass OrderTypeList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listOrderUser:[],\r\n            loadOrders:true\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getOrderUserSystem();\r\n    }\r\n\r\n    getOrderUserSystem(){\r\n        this.setState({loadOrders:true});\r\n        axios({\r\n            method:'get',\r\n            url:'https://суши-тайм.рф/api/getOrdersUserVK&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    this.setState({countOrder:0});\r\n                }else{\r\n                    //console.log('Данные по заказам пользователя',data);\r\n                    this.setState({listOrderUser:data.list});\r\n                    this.props.listOrderUserSet(data.list);\r\n                }\r\n                this.setState({loadOrders:false});\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка получения заказов',err);\r\n            });\r\n    }\r\n\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n    getOrderType(type = 'now'){\r\n        var typeNumber = 0;\r\n        var iconsD ='';\r\n        switch(type){\r\n            case 'now': typeNumber = 0; iconsD = <Icon24Recent /> ;break;\r\n            case 'cancel': typeNumber = 3;  iconsD = <Icon24Dismiss /> ;break;\r\n            case 'old': typeNumber = 1;  iconsD = <Icon24DoneOutline /> ;break;\r\n            default:typeNumber =0;\r\n        }\r\n\r\n        //console.log(this.state.listOrderUser)\r\n\r\n        var countOrders = 0;\r\n\r\n        const ListOrder = this.ReverceList(this.state.listOrderUser).map((dataOrder,keyOrder)=>{\r\n            //console.log('Заказ '+dataOrder,'');\r\n            var CurrentOrder = this.state.listOrderUser[dataOrder];\r\n\r\n            var statusY = false;\r\n\r\n\r\n            if(typeNumber === 1){\r\n                if(CurrentOrder.status_order == typeNumber || CurrentOrder.status_order == 6){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }else{\r\n                if(CurrentOrder.status_order == typeNumber){\r\n                    statusY = true;\r\n                }else{\r\n                    statusY = false;\r\n                }\r\n            }\r\n\r\n\r\n            if(CurrentOrder.delete_order == '1'){\r\n                statusY = false;\r\n            }\r\n\r\n            if(statusY === true){\r\n                countOrders++;\r\n                //console.log('Заказ '+dataOrder,' Отмененн');\r\n                var summaOrders = <span>Сумма: <b>{CurrentOrder.sum_order}₽</b></span>;\r\n\r\n                return (\r\n                    <Cell key={\"Orders_\"+dataOrder}\r\n                          before={iconsD}\r\n                          description={<span>{CurrentOrder.date} <i>{CurrentOrder.time}</i> | {summaOrders}</span>}\r\n                          onClick={this.props.setOrderShowNumber.bind(this,CurrentOrder.id_order)}\r\n                    >\r\n                        <b>Заказ №{CurrentOrder.id_order}</b> <span style={{fontSize:\"0.8em\",marginLeft:\"2%\",color:\"#6a97fb\"}}> Подробнее...</span>\r\n                    </Cell>\r\n                );\r\n            }else{\r\n                //console.log('Заказ '+dataOrder,'');\r\n            }\r\n\r\n        });\r\n\r\n        if(countOrders <=0){\r\n            return (\r\n                <Cell key={\"Orders_None\"}\r\n                >\r\n                    Заказы отсутсвуют\r\n                </Cell>\r\n            );\r\n        }\r\n\r\n        return ListOrder;\r\n\r\n    }\r\n\r\n\r\n    getNowOrder(){\r\n        return(\r\n            <Group key=\"ListOrderNow\"\r\n                   title=\"Текущие заказы\"\r\n            >\r\n                {this.getOrderType('now')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOldOrder(){\r\n        return(\r\n            <Group key=\"ListOrderOld\"\r\n                   title=\"Завершенные заказы\"\r\n            >\r\n                {this.getOrderType('old')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCancelledOrder(){\r\n        return(\r\n            <Group key=\"ListOrderCancel\"\r\n                   title=\"Отмененные заказы\"\r\n            >\r\n                {this.getOrderType('cancel')}\r\n            </Group>\r\n        );\r\n    }\r\n\r\n\r\n    getOneTypeOrders(){\r\n        var results = '';\r\n        switch(this.props.typeOrderGet){\r\n            case\"now\": results = this.getNowOrder();break;\r\n            case\"old\": results = this.getOldOrder();break;\r\n            case\"cancel\": results = this.getCancelledOrder();break;\r\n        }\r\n\r\n        return results;\r\n    }\r\n\r\n    getAllGroups(){\r\n        return(\r\n            this.getOneTypeOrders()\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        return(<div> {\r\n                this.state.loadOrders\r\n                    ?\r\n                    <ScreenSpinner/>\r\n                    :\r\n                    this.getAllGroups()\r\n            }\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderTypeList;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\nimport axios from \"axios\";\r\n\r\nimport {Group, Cell, Div, Counter, Button} from '@vkontakte/vkui';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\nimport Icon24DoneOutline from '@vkontakte/icons/dist/24/done_outline';\r\nimport Icon24Error from '@vkontakte/icons/dist/24/error';\r\nimport Icon24MoneyTransfer from '@vkontakte/icons/dist/24/money_transfer';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24User from '@vkontakte/icons/dist/24/user';\r\n\r\nclass OrderShowDetail extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        //console.log('Заказ показать этот: ',this.props.OrderDatas);\r\n    }\r\n\r\n    getStatusOrderText(a){\r\n        var ststusReturn = \"Выполнен\";\r\n\r\n        switch(a){\r\n            case\"0\": ststusReturn = \"Принят\"; break;\r\n            case\"1\": ststusReturn = \"Выполнен\"; break;\r\n            case\"3\": ststusReturn = \"Отменен\"; break;\r\n            case\"6\": ststusReturn = \"Принят\"; break;\r\n        }\r\n        return ststusReturn;\r\n    }\r\n\r\n    getStatusOrderReal(statusOld,statusReal){\r\n        if(statusReal === null){\r\n           // console.log('Нет данных');\r\n            return statusOld;\r\n        }else{\r\n            return statusReal.status;\r\n        }\r\n    }\r\n\r\n    getStatusIconText(a){\r\n        var iconsD = '';\r\n\r\n        var ststusReturns = <Icon24Error />;\r\n\r\n        switch(a){\r\n            case\"0\": iconsD = <Icon24Recent /> ;break;\r\n            case\"1\": iconsD = <Icon24DoneOutline /> ;break;\r\n            case\"3\": iconsD = <Icon24Dismiss /> ;break;\r\n            case\"6\": iconsD = <Icon24Recent /> ;break;\r\n        }\r\n        return ststusReturns;\r\n    }\r\n\r\n\r\n    getInfoPreorderBlock(Order){\r\n        if(Order.pre_order.status === 'none'){\r\n            return \"\";\r\n        }else{\r\n            return (\r\n                <Group title=\"Совершен по предзаказу на дату\">\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.pre_order.date_pre_order}\r\n                    </Cell>\r\n                </Group>\r\n            );\r\n        }\r\n    }\r\n\r\n    escapeHtml(text,type) {\r\n        switch(type){\r\n            case\"decode\":\r\n                var map = {\r\n                    '&amp;': '&',\r\n                    '&lt;': '<',\r\n                    '&gt;': '>',\r\n                    '&quot;': '\"',\r\n                    \"&#039;\": \"'\"\r\n                };\r\n                break;\r\n            case\"encode\":\r\n                var map = {\r\n                    '&': '&amp;',\r\n                    '<': '&lt;',\r\n                    '>': '&gt;',\r\n                    '\"': '&quot;',\r\n                    \"'\": '&#039;'\r\n                };\r\n                break;\r\n        }\r\n\r\n        return text.replace(/[&<>\"']/g, function(m) { return map[m]; });\r\n    }\r\n\r\n    escapeHtmlDecode(text) {\r\n        return text\r\n            .replace(/&amp;/g, \"&\")\r\n            .replace(/&lt;/g, \"<\")\r\n            .replace(/&gt;/g, \">\")\r\n            .replace(/&quot;/g, \"\\\"\")\r\n            .replace(/&#039;/g, \"'\");\r\n    }\r\n\r\n\r\n    getOrderComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (<Group title=\"Состав заказа\">\r\n                <Div>Данные отсутствуют</Div></Group>);\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            if(data.sale_price != data.product_price){\r\n                var Price_sales = <span><s>{data.product_price} ₽</s> <b>{data.sale_price} ₽</b> </span>;\r\n            }else{\r\n                var Price_sales = <span><b>{data.sale_price} ₽</b> </span>;\r\n            }\r\n\r\n            if(data.discount_amount != '0'){\r\n                var Discount = <b>Скидка: {data.discount_amount} ₽</b>\r\n            }else{\r\n                var Discount = '';\r\n            }\r\n\r\n            return (\r\n                <Cell key={\"Product_cell_\"+key}\r\n                    description={<span key={\"prices_product_\"+key}>{Price_sales} - {data.count} шт. <i>{Discount}</i></span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"product_title_\"+key}>{this.escapeHtmlDecode(data.product_title)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n        return (<Group title=\"Состав заказа\">\r\n            {ListProduct}</Group>);\r\n    }\r\n\r\n\r\n    getOrderDopComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Dop_Product_cell_\"+key}\r\n                    description={<span key={\"prices_dop_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"dop_product_title_\"+key}>{this.escapeHtmlDecode(data.title_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Приправы и соусы\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderGiftComposition(Order){\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n        }\r\n\r\n        const ListProduct = Order.map((data,key)=>{\r\n\r\n            var Price_sales = <span><b>{data.price_product} ₽</b> </span>;\r\n\r\n\r\n            return (\r\n                <Cell key={\"Gift_Product_cell_\"+key}\r\n                    description={<span key={\"prices_Gift_product_\"+key}>{Price_sales} - {data.count} шт.</span>}\r\n                    indicator={<Counter>&nbsp;{data.cost} ₽&nbsp;</Counter>}\r\n                >\r\n                    <span key={\"Gift_product_title_\"+key}>{this.escapeHtmlDecode(data.title_gift_product)}</span>\r\n                </Cell>\r\n            );\r\n        });\r\n\r\n        if(ListProduct == '' || ListProduct=== null){\r\n            return (\"\");\r\n        }\r\n\r\n        return (<Group title=\"Подарки\">\r\n            {ListProduct}\r\n        </Group>);\r\n    }\r\n\r\n\r\n    getOrderDeliveryInfo(Order){\r\n\r\n        if(Order.dilivery.dilivery_type == 'Доставка'){\r\n            var Address = Order.dilivery.dilivery_adres;\r\n            var PriceDeli = Order.dilivery.dilivery_price;\r\n            var TextDel = 'Доставка';\r\n        }else{\r\n            var Address = Order.affiliate.affiliate_info;\r\n            var PriceDeli = \" 0 \";\r\n            var TextDel = 'Самовывоз';\r\n        }\r\n\r\n            return (<Group title=\"Получение заказа\">\r\n                <Cell key={\"Deliv_cell\"}\r\n                    description={Address}\r\n                    indicator={<Counter>&nbsp; {PriceDeli} ₽ &nbsp;</Counter>}\r\n                >\r\n                    {TextDel}\r\n                </Cell>\r\n                </Group>\r\n            )\r\n    }\r\n\r\n    getInfoPromokod(Order){\r\n        if(Order.promo_status == 'active'){\r\n            var PromoInfo = <Group title=\"Промокод\">\r\n                <Div><b>{Order.promo_code}</b> {Order.promo_info.title}</Div>\r\n            </Group>\r\n        }else{\r\n            var PromoInfo = '';\r\n        }\r\n\r\n        return PromoInfo;\r\n    }\r\n\r\n    getInfoPointsOrder(Order){\r\n            var Points = <div>\r\n                <Cell before={<Icon24Coins/>} >Списано Таймов: {Order.point_out}</Cell>\r\n                <Cell  before={<Icon24Coins/>} >Начислено Таймов: {Order.point_in}</Cell>\r\n            </div>;\r\n\r\n        return Points;\r\n    }\r\n\r\n    getComment(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            return (\"\");\r\n            Order = 'Отсутствует';\r\n        }\r\n\r\n        return (\r\n            <Group title=\"Комментарий\">\r\n                <Div>{Order}</Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getRepeatOrder(OrderId){\r\n        //console.log(OrderId);\r\n        return (\r\n            <Group style={{textAlign:\"center\",padding:\"10px 0\"}}>\r\n                <Button onClick={()=>{\r\n                    this.setRepeatOrder(OrderId.id_order)\r\n                }}>Повторить</Button>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    setRepeatOrder(OrderId){\r\n        //console.log('Повторяем заказ');\r\n        axios({\r\n            method:'get',\r\n            url:'https://суши-тайм.рф/api/setRepeatOrder&apiKey='+global.ApiKey+'&idUserVK='+this.props.userData.id+'&OrderIdRepeat='+OrderId,\r\n            responseType:'text'\r\n        })\r\n            .then(({data})=>{\r\n                if(\"error\" in data){\r\n                    console.log(data);\r\n                    alert(data.errorInfo);\r\n                }else{\r\n                   console.log('Повторение заказа инфа: ',data);\r\n                }\r\n            })\r\n            .catch((err) =>{\r\n                console.log('Ошибка повторения заказа',err);\r\n            });\r\n    }\r\n\r\n    getPerson(Order) {\r\n\r\n        if(Order == '' || Order === null){\r\n            Order = '1';\r\n        }\r\n\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div>{Order}</Div>\r\n        //     </Group>\r\n        // );\r\n\r\n        return (\r\n            <Cell\r\n                before={<Icon24User />}\r\n            >\r\n                Приборы: {Order}\r\n            </Cell>\r\n        );\r\n    }\r\n\r\n\r\n    render(){\r\n        const Order = this.props.OrderDatas;\r\n        const StatusIcon = this.getStatusIconText(Order.status_order);\r\n        const detailText = <span>Детали заказа</span>;\r\n\r\n        return(\r\n            <div key=\"InfoOrderBlock\" >\r\n                <Group\r\n                    title={detailText}\r\n                >\r\n                    <Cell\r\n                        before={StatusIcon}\r\n                    >\r\n                        {this.getStatusOrderReal(this.getStatusOrderText(Order.status_order),Order.status_order_real)}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24Recent />}\r\n                    >\r\n                        {Order.date} {Order.time}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyTransfer />}\r\n                    >\r\n                        {Order.payment.type_pay}\r\n                    </Cell>\r\n                    <Cell\r\n                        before={<Icon24MoneyCircle />}\r\n                    >\r\n                        {Order.sum_order} ₽\r\n                    </Cell>\r\n                    {this.getPerson(Order.person)}\r\n                    {this.getInfoPointsOrder(Order)}\r\n                </Group>\r\n                    {this.getInfoPreorderBlock(Order)}\r\n                {this.getInfoPromokod(Order.promo)}\r\n                {this.getOrderComposition(Order.productList)}\r\n                {this.getOrderDopComposition(Order.dopProductList)}\r\n                {this.getOrderGiftComposition(Order.giftProductList)}\r\n                {this.getOrderDeliveryInfo(Order)}\r\n                {this.getComment(Order.Comment)}\r\n                {this.getRepeatOrder(Order)}\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default OrderShowDetail;","import React, { useState, useEffect } from 'react';\r\nimport {Div, View, Panel, Separator, PanelHeader, Group, Button, CellButton, HeaderButton, platform, IOS, Tooltip, HorizontalScroll, Placeholder, Cell } from '@vkontakte/vkui';\r\n\r\nimport Icon56MarketOutline from '@vkontakte/icons/dist/56/market_outline';\r\n\r\nimport Icon56NotificationOutline from '@vkontakte/icons/dist/56/notification_outline';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Dismiss from '@vkontakte/icons/dist/24/dismiss';\r\n\r\nconst osName = platform();\r\n\r\n\r\nclass Notice extends React.Component {\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            activePanel:\"home\",\r\n            popout:null\r\n            //popout:\"<ScreenSpinner size='large' />\",\r\n        }\r\n    }\r\n\r\n    ActivePanels(e){\r\n        this.setState({activePanel: e});\r\n    }\r\n\r\n    NoteNotice(){\r\n        return(\r\n            <Placeholder stretched\r\n                         icon={<Icon56NotificationOutline />}\r\n                         action={<Button size=\"l\" level=\"tertiary\" onClick={()=>{this.props.setState({activeStory: 'catalog'});}}>В каталог</Button>}\r\n\r\n            >\r\n                <h2>Уведомлений нет</h2>\r\n                <p>Как только для Вас появятся уведомления, они отобразятся здесь!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n    ReverceList(Pr){\r\n        var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n            // console.log(last, index);\r\n            return (arr = arr.concat(last))\r\n        }, []);\r\n        return res;\r\n    }\r\n\r\n\r\n    setNoticeData(type,idNotice,statusView){\r\n        if(type == 1) {\r\n            this.props.setNotice(type, idNotice);\r\n            this.props.DeleteNotifi(idNotice);\r\n        }else{\r\n            if(statusView === false){\r\n                this.props.setNotice(type, idNotice);\r\n            }\r\n        }\r\n    }\r\n\r\n    getImagesNotice(img){\r\n        if(img === null || img == ''){return (\"\");}else{\r\n            return(\r\n                <img src={img} style={{width:\"100%\"}}/>\r\n            );\r\n        }\r\n    }\r\n\r\n    getNotice(){\r\n\r\n        const NoticeList = this.ReverceList(this.props.AllNotice).map((Data,id)=>{\r\n\r\n            if(this.props.AllNotice[Data]['notice_view'] == '0'){\r\n                var color = '#ff7300';\r\n                var statusView = false;\r\n            }else{\r\n                var color = '';\r\n                var statusView = true;\r\n            }\r\n\r\n            return(<Group\r\n                key={\"Notice_C_\"+Data}\r\n            >\r\n                <Cell\r\n                    before={<Icon24Notification\r\n                        style={{color:color}}\r\n                        onClick={() => {this.setNoticeData(0,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n                    asideContent={<Icon24Dismiss\r\n                        onClick={() => {this.setNoticeData(1,this.props.AllNotice[Data]['id_notification'],statusView)}}\r\n                    />}\r\n\r\n                >\r\n                    {this.props.AllNotice[Data]['title']}\r\n                </Cell>\r\n                {this.getImagesNotice(this.props.AllNotice[Data]['img'])}\r\n                    <Div key={\"Notice_\"+Data} dangerouslySetInnerHTML={{__html: this.props.AllNotice[Data]['text'].replace(/\\n/g, \"<br />\")}}>\r\n                    </Div>\r\n            </Group>);\r\n        });\r\n\r\n        return(\r\n            NoticeList\r\n        );\r\n    }\r\n\r\n    getNotificationPage(){\r\n        if(this.props.StatusNotification === true){\r\n            if(Object.keys(this.props.AllNotice).length<=0){\r\n                return(this.NoteNotice());\r\n            }else{\r\n                return(this.getNotice());\r\n            }\r\n        }else{\r\n            return(\r\n                <Placeholder stretched\r\n                             icon={<Icon56NotificationOutline />}\r\n                             action={<Button size=\"l\" level=\"tertiary\"\r\n                                             onClick={()=>{this.props.PushClick()}}\r\n                             >Включить уведомления</Button>}\r\n                             style={{textAlign:\"center\"}}\r\n                >\r\n                    Для просмотра уведомлений, их нужно включить\r\n                </Placeholder>\r\n            );\r\n        }\r\n    }\r\n\r\n\r\n    render(){\r\n        return(\r\n            this.getNotificationPage()\r\n        );\r\n\r\n    };\r\n\r\n}\r\n\r\nexport default Notice;","import React from 'react';\r\n\r\nimport connect from '@vkontakte/vk-connect';\r\n\r\nimport Group from '@vkontakte/vkui/dist/components/Group/Group';\r\nimport {List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport Avatar from '@vkontakte/vkui/dist/components/Avatar/Avatar';\r\nimport Icon24Notification from '@vkontakte/icons/dist/24/notification';\r\nimport Icon24Note from '@vkontakte/icons/dist/24/note';\r\n\r\nimport Icon24Coins from '@vkontakte/icons/dist/24/coins';\r\nimport Icon24CommentOutline from '@vkontakte/icons/dist/24/comment_outline';\r\n\r\n\r\nclass UserInfo extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            StatusNotification:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getStatusNotificate();\r\n    }\r\n\r\n    getPanelProfil(){\r\n        return(\r\n            <div id={this.props.id} style={{maxWidth:'1200px',margin:'0 auto'}} them='white'>\r\n                {this.props.fetchedUser &&\r\n                    <Group title=\"Ваши данные\r\n    \">\r\n                        <Cell\r\n                            before={this.props.fetchedUser.photo_200 ? <Avatar src={this.props.fetchedUser.photo_200}/> : null}\r\n                            description={this.props.fetchedUser.city && this.props.fetchedUser.city.title ? this.props.fetchedUser.city.title : ''}\r\n                        >\r\n                            {`${this.props.fetchedUser.first_name} ${this.props.fetchedUser.last_name}`}\r\n                        </Cell>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                    <Cell\r\n                        before={<Icon24Note />}\r\n                        description=\"Список совершенных Вами онлайн заказов\"\r\n                        onClick={this.props.setShowUserOrderList.bind()}\r\n                    >\r\n                        Мои заказы\r\n                    </Cell>\r\n                </Group>\r\n\r\n\r\n                {this.props.dataUsers.dataUsers.error ?\r\n                    this.getInfoUserNoneAuth()\r\n                    :\r\n\r\n                    <Group title=\"Активность\">\r\n                        <List>\r\n                            <Cell\r\n                                before={<Icon24Coins />}\r\n                            >\r\n                                Бонус Таймы: {this.props.dataUsers.dataUsers.dataUser.point}\r\n                            </Cell>\r\n                        </List>\r\n                    </Group>\r\n                }\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24Notification />}\r\n                            asideContent={<Switch\r\n                                checked={this.state.StatusNotification}\r\n                                onChange={()=>{this.PushClick()}} />}\r\n                            description=\"Изменение статуса заказа, акциии...\"\r\n                        >\r\n                            PUSH - уведомления\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n                <Group>\r\n                        <Cell\r\n                            before={<Icon24CommentOutline />}\r\n                        >\r\n                            <a style={{color:\"#252622\",textDecoration:\"none\"}}\r\n                               href={global.linkSocSeti} target=\"_blank\">\r\n                                Связаться с нами\r\n                            </a>\r\n                        </Cell>\r\n\r\n                </Group>\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getInfoUserNoneAuth() {\r\n        return (\r\n            <Div>\r\n                Авторизуйтесь по номеру телефона, чтобы просматривать данные!\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getStatusNotificate(){\r\n        connect.sendPromise(\"VKWebAppCallAPIMethod\", {\"method\": \"apps.isNotificationsAllowed\", \"params\": {\"user_id\": \"328965469\",\"v\":\"5.103\",\"access_token\":\"a07170c1a07170c1a07170c1c4a01c7753aa071a07170c1fdf9a8b9585d7876a020ecbf\"}})\r\n            .then((datas)=> {\r\n                this.setState({StatusNotification: datas.response.is_allowed});\r\n                this.props.setStatusNotification(datas.response.is_allowed);\r\n            })\r\n            .catch((err)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            });\r\n    }\r\n\r\n    //defaultChecked\r\n\r\n    PushClick(){\r\n        if(this.state.StatusNotification === true ){\r\n            this.OffPushNotyfication();\r\n        }else{\r\n            this.OnPushNotyfication();\r\n        }\r\n    }\r\n\r\n    OffPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppDenyNotifications\", {})\r\n            .then((datas)=>{\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n            })\r\n            .catch((err)=> {\r\n                this.setState({StatusNotification: false});\r\n                this.props.setStatusNotification(false);\r\n                }\r\n            );\r\n    }\r\n\r\n    OnPushNotyfication(){\r\n        connect.sendPromise(\"VKWebAppAllowNotifications\", {})\r\n            .then((datas)=>{\r\n                this.getStatusNotificate();\r\n            })\r\n            .catch((err)=> {\r\n                    this.getStatusNotificate();\r\n                }\r\n            );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getPanelProfil()\r\n        );\r\n    }\r\n}\r\nexport default UserInfo;\r\n","import React, {useEffect} from 'react';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\n//import ModalProduct from './panels/ModalProduct';\r\nimport CategoryList from './CategoryList';\r\nimport GetCartHome from \"../Cart/CartHome\";\r\n//import App from \"./Profile\";\r\n\r\nconst CatalogProduct = (OPT) => {\r\n    // const [activePanel, setActivePanel] = useState('home');\r\n    // const [fetchedUser, setUser] = useState(null);\r\n    // const [popout, setPopout] = useState(<ScreenSpinner size='large'/>);\r\n\r\n    useEffect(() => {\r\n        // connect.subscribe(({ detail: { type, data }}) => {\r\n        //     if (type === 'VKWebAppUpdateConfig') {\r\n        //         const schemeAttribute = document.createAttribute('scheme');\r\n        //         schemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n        //         document.body.attributes.setNamedItem(schemeAttribute);\r\n        //     }\r\n        // });\r\n        async function fetchData() {\r\n            // const user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n            // setUser(user);\r\n            // setPopout(null);\r\n           // console.log(OPT.ProductsLists,'--- ВОТ');\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    return (\r\n            <CategoryList\r\n                setCart={OPT.setCart.bind(this)}\r\n                CartProducts={OPT.CartProducts}\r\n                ProductsLists={OPT.ProductsLists}\r\n                sliderHeader={OPT.sliderHeader.bind(this)}\r\n                queryParams={OPT.queryParams}\r\n\r\n                showModal={OPT.showModal.bind(this)}\r\n                hideModals={OPT.hideModals.bind(this,null)}\r\n\r\n                activeProductHash={OPT.activeProductHash}\r\n                activeCategoryHash={OPT.activeCategoryHash}\r\n                activeHashPageProduct={OPT.activeHashPageProduct}\r\n            />\r\n    );\r\n\r\n};\r\n\r\nexport default CatalogProduct;\r\n\r\n","import React from 'react';\r\nimport {Div, View, Panel, PanelHeader, Group, Search,Cell, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport ProductList from \"./ProductList\";\r\n\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nimport ym from 'react-yandex-metrika';\r\nrequire('../../panels/global/index.js');\r\n\r\n\r\nfunction escapeHtmlDecode(text) {\r\n    return text\r\n        .replace(/&amp;/g, \"&\")\r\n        .replace(/&lt;/g, \"<\")\r\n        .replace(/&gt;/g, \">\")\r\n        .replace(/&quot;/g, \"\\\"\")\r\n        .replace(/&#039;/g, \"'\");\r\n}\r\n\r\nclass CategoryList extends React.Component {\r\n\r\n    constructor (props) {\r\n        super(props);\r\n        this.state = {\r\n            loadingPage: true,\r\n            activePanel: 'brand',\r\n            products: [],\r\n            panelCategory: '',\r\n            ActiveCategory: 0,\r\n            productModal:[{\"title\":\"Название товара\",\"description\":\"Описание товара\",\"typeproduct\":\"0\",\"price\":\"1000\"}],\r\n            search: global.searchProduct\r\n        };\r\n        this.onChange = this.onChange.bind(this);\r\n        //console.log('Обновился каталог');\r\n        //console.log('А вот и перезагрузка');\r\n    }\r\n\r\n    getHashProductPageActive(){\r\n        if(this.props.activeHashPageProduct === true){\r\n            console.log('Запускаем страницу с товаром');\r\n\r\n            this.setActiveCategory(this.props.activeCategoryHash);\r\n            this.setProductModal(this.props.activeProductHash);\r\n            this.hndlClick('Panels_Product');\r\n        }else{\r\n            console.log('Не получилось, ждем повторения');\r\n            setTimeout(()=>{\r\n                this.getHashProductPageActive();\r\n            },800);\r\n        }\r\n    }\r\n\r\n    onChange (e) {\r\n        this.setState({ search: e});\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        //console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP });\r\n        //global.settingsFilterSearch.typeProduct = false;\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n       // console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n       // console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {\r\n                setCart(typeProduct);\r\n                try {\r\n                    if (global.Metrika.Markers[1].active == '1') {\r\n                        ym('reachGoal', global.Metrika.Markers[1].marker);\r\n                    }else{\r\n                     //   console.log('Цель отключена');\r\n                    }\r\n                }catch (e) {\r\n                   // console.log(e,global.Metrika);\r\n                }\r\n            }}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loading: true});\r\n        this.setState({products:this.props.ProductsLists,loadingPage: false});\r\n        //console.log('Передали: ',this.props.ProductsLists);\r\n        this.getHashProductPageActive();\r\n            }\r\n\r\n    classNameDivCategory(){\r\n        //console.log(this.props.queryParams.vk_platform);\r\n        if(this.props.queryParams.vk_platform == \"desktop_web\"){\r\n            return \"GroupBlockCategory DivBlockDesctopCategoys\";\r\n        }else{\r\n            return \"GroupBlockCategory\";\r\n        }\r\n    }\r\n\r\n    getKomboProductData(DataKombo,AllProduct){\r\n        //console.log(DataKombo);\r\n        const res = Object.keys(DataKombo).map( (data,id,ArrK) => {\r\n            const res1 = Object.keys(AllProduct).map((d,i,arr)=>{\r\n                       const res2 = Object.keys(AllProduct[d].ProductList).map((dp,ip,arrp)=>{\r\n                            if(dp === data){\r\n                                return(\r\n                                    <Cell key={data} className=\"komboProducts\"\r\n                                          before={<img\r\n                                              src={AllProduct[d].ProductList[data][0]['img']}\r\n                                              style={{width:\"80px\",marginRight:\"15px\",marginTop:\"10px\"}}\r\n                                          />\r\n                                          }\r\n                                          asideContent={DataKombo[data]['count']+'шт'}\r\n                                          // bottomContent={\r\n                                          //     <span style={{fontSize:\"0.75em\"}}>\r\n                                          //         {AllProduct[d].ProductList[data][0]['weight']+' '+AllProduct[d].ProductList[data][0]['weight_type']}\r\n                                          //     </span>\r\n                                          // }\r\n                                          size=\"l\"\r\n                                          description={AllProduct[d].ProductList[data][0]['description']}\r\n                                          multiline={true}\r\n                                    >\r\n                                        {AllProduct[d].ProductList[data][0]['title']}\r\n                                    </Cell>\r\n                                )\r\n                            }else{\r\n                                return '';\r\n                            }\r\n                       });\r\n                       return res2;\r\n                    //{console.log(d,i,arr)}\r\n                });\r\n            return res1;\r\n            });\r\n        return(\r\n            <div style={{marginBottom:\"10px\"}}>{res}</div>\r\n        );\r\n    }\r\n\r\n    getFeaturesBlock(FeaturesData){\r\n\r\n        const res = Object.keys(FeaturesData).map((d,i,arr)=>{\r\n            if(FeaturesData[d]['show'] == 'show' & (\"features\" in FeaturesData[d])){\r\n                var defs = this.getFeaturesData(FeaturesData[d]['features']);\r\n                if(defs === false){\r\n\r\n                }else {\r\n                    return (\r\n                        <Group\r\n                            key={d}\r\n                            title={FeaturesData[d]['title']}\r\n                        >\r\n                            {defs}\r\n                        </Group>\r\n                    );\r\n                }\r\n            }\r\n        });\r\n\r\n        return (\r\n            res\r\n        );\r\n    }\r\n\r\n    getFeaturesData(Features){\r\n        var defs = false;\r\n        const res = Object.keys(Features).map((d,i,arr)=>{\r\n            if(Features[d]['text'] != ''){\r\n                defs = true;\r\n                return(\r\n                    <Cell key={d}\r\n                          asideContent={Features[d]['text']+' '+Features[d]['unit']}\r\n                          // before={}\r\n                    >\r\n                        {Features[d]['title']}\r\n                    </Cell>\r\n                );\r\n            }\r\n        });\r\n        if(defs === true) {\r\n            return (res);\r\n        }else{\r\n            return false;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    render () {\r\n        function getWeightProduct(Product_Weight,Product_WeightType){\r\n            if(Product_WeightType != 'л'){\r\n                return(\r\n                    number_format(Product_Weight,'0','.', ' ')+' '+Product_WeightType\r\n                );\r\n            }else{\r\n                return(\r\n                    Product_Weight+' '+Product_WeightType\r\n                );\r\n            }\r\n        }\r\n\r\n        function number_format(number, decimals, dec_point, separator ) {\r\n            number = (number + '').replace(/[^0-9+\\-Ee.]/g, '');\r\n            var n = !isFinite(+number) ? 0 : +number,\r\n                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),\r\n                sep = (typeof separator === 'undefined') ? ',' : separator ,\r\n                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,\r\n                s = '',\r\n                toFixedFix = function(n, prec) {\r\n                    var k = Math.pow(10, prec);\r\n                    return '' + (Math.round(n * k) / k)\r\n                        .toFixed(prec);\r\n                };\r\n            // Фиксим баг в IE parseFloat(0.55).toFixed(0) = 0;\r\n            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n))\r\n                .split('.');\r\n            if (s[0].length > 3) {\r\n                s[0] = s[0].replace(/\\B(?=(?:\\d{3})+(?!\\d))/g, sep);\r\n            }\r\n            if ((s[1] || '')\r\n                .length < prec) {\r\n                s[1] = s[1] || '';\r\n                s[1] += new Array(prec - s[1].length + 1)\r\n                    .join('0');\r\n            }\r\n            return s.join(dec);\r\n        }\r\n\r\n        //Модалка продукта\r\n        function ModalProductInfo(OPT){\r\n            if(OPT.Loadings === false){\r\n               // console.log(OPT);\r\n                return(\r\n                    <div\r\n                        className=\"blockProduct maxWidths\"\r\n                        style={{\"margin\":\"0\",\"textAlign\":\"left\"}}\r\n                    >\r\n                        <PanelHeader\r\n                            theme=\"light\"\r\n                            noShadow={false}\r\n                            left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                                <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                            addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                        >\r\n                            {escapeHtmlDecode(OPT.ProductInfo[0].title)}\r\n                        </PanelHeader>\r\n                        <Group\r\n                            id={'product_type_'+OPT.ProductInfo[0].type_info}\r\n                        >\r\n                            <Div style={{position:\"relative\"}}>\r\n                            <div className=\"imgPrewieProduct\"><img src={OPT.ProductInfo[0].img} alt={OPT.ProductInfo[0].title}/></div>\r\n                            <div className=\"titleProduct\">\r\n                                <span className=\"titleProductOne\">{escapeHtmlDecode(OPT.ProductInfo[0].title)}</span>\r\n                                <span className=\"redTextP\">\r\n                                    {getWeightProduct(OPT.ProductInfo[0].weight,OPT.ProductInfo[0].weight_type)}\r\n                                </span>\r\n                                <div className=\"clr\"></div>\r\n                            </div>\r\n\r\n\r\n                                <Div className=\"DescrProduct\">\r\n                                    {escapeHtmlDecode(OPT.ProductInfo[0].description)}\r\n                                    <div>\r\n                                    </div>\r\n                                    {OPT.ProductInfo[0].type_info != '' ?\r\n                                        <div className=\"WeightBlock\">\r\n                                            {OPT.ProductInfo[0].type_info}\r\n                                        </div>\r\n                                        :\r\n                                        \"\"\r\n                                    }\r\n                                </Div>\r\n\r\n                            <div className=\"priceProductBig\">{getPriceProducts(OPT.ProductInfo[0])}\r\n                                {OPT.getButtonInCartProduct(OPT.ProductInfo[0],OPT.setCart)}\r\n                            </div>\r\n                            </Div>\r\n                        </Group>\r\n\r\n                        {OPT.ProductInfo[0].komboPoduct.length <= 0 ?\r\n                            \"\"\r\n                            :\r\n                            <Group\r\n                            title=\"В набор входят\"\r\n                            >\r\n                                {OPT.getKomboProductData(OPT.ProductInfo[0].komboPoduct,OPT.AllProduct)}\r\n                            </Group>\r\n                        }\r\n\r\n                        {OPT.getFeaturesBlock(OPT.ProductInfo[0].featuresProduct)}\r\n                        <div style={{clear:\"both\",height:\"60px\",width:\"100%\"}}></div>\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <div>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickBack('Panels_38')}>Назад</HeaderButton>}\r\n                    >Ошибка</PanelHeader>\r\n                        <div style={{\"textAlign\":\"center\",\"padding\":\"5% 0\"}}>Ошибка, вернитесь назад</div>\r\n                    </div>\r\n                );\r\n            }\r\n        }\r\n\r\n        function getPriceProducts(typeProduct){\r\n            if(!(\"price_discount\" in typeProduct) || typeProduct.price_discount === false){\r\n                return (<span className=\"priceProduct\">\r\n                {typeProduct.price} ₽\r\n                </span>\r\n                );\r\n            }else{\r\n                return(\r\n                    <span className=\"priceProduct\">\r\n                    <s className=\"old_price_style\" style={{fontWeight:\"460\",fontSize:\"0.9em\",marginRight:\"5px\"}}>{typeProduct.price_discount.old_price} ₽</s>\r\n                        {typeProduct.price_discount.new_price} ₽\r\n                </span>\r\n                );\r\n            }\r\n        }\r\n\r\n\r\n        function GetCategorys(OPT){\r\n            //console.log('Грузим каталог');\r\n            if(OPT.Loadings === false) {\r\n               // console.log(OPT,'-0-0-0-');\r\n               // console.log('Загрузилось', OPT.CategoryList);\r\n                //console.log('Товары ', OPT.CategoryList[OPT.ShowCategory].ProductList);\r\n                return (<div style={{background:\"#FFFFFF\"}}>\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                        noShadow={false}\r\n                        left={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>{osname === IOS ?\r\n                            <Icon28ChevronBack/> : <Icon24Back/>}</HeaderButton>}\r\n                        addon={<HeaderButton onClick={() => OPT.ClickCategory('brand')}>Назад</HeaderButton>}\r\n                    >\r\n                        {OPT.CategoryList[OPT.ShowCategory].Title}\r\n                    </PanelHeader>\r\n                    <ProductList\r\n                        onClickProduct={OPT.ClickProduct.bind(this)}\r\n                        productsLists={OPT.CategoryList[OPT.ShowCategory].ProductList} key={OPT.CategoryList[OPT.ShowCategory].id_Category}\r\n                        idCategorys={OPT.ShowCategory}\r\n                        nameCategory=\"sets\"\r\n                        setCart={OPT.setCart.bind(this)}\r\n                        getButtonInCartProduct={OPT.getButtonInCartProduct.bind(this)}\r\n                        setProductModal={OPT.setProductModal.bind(this)}\r\n                        searchProduct={OPT.searchProduct}\r\n\r\n                        showModal={OPT.showModal.bind(this)}\r\n                        hideModals={OPT.hideModals.bind(this,null)}\r\n                    />\r\n                    </div>\r\n                );\r\n            }else{\r\n                //console.log('Не загрузилось', OPT.CategoryList);\r\n                return (\r\n                    <PanelHeader>Ошибка</PanelHeader>\r\n                );\r\n            }\r\n\r\n        }\r\n\r\n        function GetBrandPanels(OPT,Loadings){\r\n           // console.log(OPT,' - - - категории грузим',OPT.Loadings);\r\n            global.settingsFilterSearch.typeProduct = false;\r\n\r\n\r\n            if(CategoryList.length === 0){\r\n                return '';\r\n            }else {\r\n                if(OPT.Loadings === false) {\r\n                    //ProductObject = Object.keys(OPT.CategoryList);\r\n                    //console.log('Преобразовали',ProductObject);\r\n                    // const ArrayBrands = Object.keys(OPT.CategoryList).map((CategoryProdcuts, key) =>\r\n                    const ArrayBrands = Object.keys(OPT.CategoryList).map((idCategorys, key) =>\r\n                        OPT.CategoryList[idCategorys].ProductList !== null ?\r\n                            <Div\r\n                                style={{\"background\":\"linear-gradient( rgba(0, 0, 0, 0.4), rgba(0, 0, 0, 0.4) ), url(//суши-тайм.рф/images/API_IMG/\"+OPT.CategoryList[idCategorys].imgCategory+\")\",\"backgroundSize\":\"100%\"}}\r\n                                className=\"DivCategoryBlock\"\r\n                                key={key+'_'+idCategorys}\r\n                                onClick={\r\n                                    () => {\r\n                                        OPT.ActiveCategory(idCategorys);\r\n                                        OPT.ClickCategory('Panels_38');\r\n                                    }\r\n                                }\r\n                            >{console.log('Выводим категорию')}\r\n                                {OPT.CategoryList[idCategorys].Title}\r\n                            </Div> :\r\n                         \"\"\r\n\r\n                    );\r\n                    return ArrayBrands;\r\n                }\r\n                else {\r\n                    return 'Loading ...';\r\n                }\r\n                // return '';\r\n            }\r\n\r\n        }\r\n\r\n\r\n\r\n        const osname = platform();\r\n\r\n        return (\r\n            <View activePanel={this.state.activePanel}>\r\n                <Panel id=\"brand\">\r\n                    <PanelHeader\r\n                        theme=\"light\"\r\n                    >\r\n                        Категории\r\n                    </PanelHeader>\r\n                    <Group>\r\n                        <Div className=\"logoBlock\">\r\n                            <img src=\"//суши-тайм.рф/images/API_IMG/logo_susshi_time.png\"/>\r\n                            {this.props.queryParams.vk_platform == \"desktop_web\"\r\n                                ?\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a>{global.phonenumberCollVisual}</a>\r\n                                </Div>\r\n                                :\r\n                                <Div className=\"PhoneDiv\">\r\n                                    <a href={global.phonenumberColl}>Позвонить</a>\r\n                                </Div>\r\n                            }\r\n                        </Div>\r\n                        <div id=\"SliderHeader\">\r\n                            {this.props.sliderHeader()}\r\n                        </div>\r\n                    </Group>\r\n                        <Group\r\n                            //title=\"Выбери категорию\"\r\n                            className={this.classNameDivCategory()} >\r\n                        <GetBrandPanels key=\"BrandPanels\" CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)} ActiveCategory={this.setActiveCategory.bind(this)}/>\r\n                    </Group>\r\n                </Panel>\r\n                {/*{this.state.loadingPage ? <Panel id=\"Panels_38\" />  : <Panel id=\"Panels_38\" ><PanelHeader >Суши</PanelHeader></Panel> && <GetCategory CategoryList={this.state.products} Loadings={this.state.loadingPage} ClickCategory={this.hndlClick.bind(this)}/>}*/}\r\n                <Panel id=\"Panels_38\">\r\n                    <Cell\r\n                        className=\"BoxCellSearch\"\r\n                        asideContent={\r\n                            <Icon24Filter\r\n                                onClick={\r\n                                    ()=>{this.props.showModal('MODAL_Filter_Catalog');}\r\n                                }\r\n                            />}\r\n                    >\r\n                        <Search\r\n                            value={this.state.search}\r\n                            onChange={this.onChange}\r\n                            after={null}\r\n                        />\r\n                    </Cell>\r\n                    <GetCategorys\r\n                        CategoryList={this.state.products}\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickCategory={this.hndlClick.bind(this)}\r\n                        ClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                        setProductModal={this.setProductModal.bind(this)}\r\n                        ShowCategory={this.state.ActiveCategory}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                        searchProduct={this.state.search}\r\n\r\n                        showModal={this.props.showModal.bind(this)}\r\n                        hideModals={this.props.hideModals.bind(this,null)}\r\n\r\n                    />\r\n                </Panel>\r\n                <Panel id=\"Panels_Product\">\r\n\r\n                    <ModalProductInfo\r\n                        Loadings={this.state.loadingPage}\r\n                        ClickBack={this.hndlClick.bind(this)}\r\n                        ProductInfo={this.state.productModal}\r\n                        AllProduct={this.state.products}\r\n                        setCart={this.props.setCart.bind(this)}\r\n                        getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                        getKomboProductData={this.getKomboProductData.bind(this)}\r\n                        getFeaturesBlock={this.getFeaturesBlock.bind(this)}\r\n                    />\r\n                </Panel>\r\n                {/*<Panel id=\"Panels_38\" />*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}*/}\r\n                {/*    >*/}\r\n                {/*        Cуши*/}\r\n                {/*    </PanelHeader>*/}\r\n\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sushi\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"light2\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Роллы*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"roli\" />*/}\r\n                {/*</Panel>*/}\r\n                {/*<Panel id=\"Panels_38\">*/}\r\n                {/*    <PanelHeader*/}\r\n                {/*        theme=\"light\"*/}\r\n                {/*        noShadow={true}*/}\r\n                {/*        left={<HeaderButton onClick={() => this.hndlClick('brand')}>{osname === IOS ? <Icon28ChevronBack /> : <Icon24Back />}</HeaderButton>}*/}\r\n                {/*        addon={<HeaderButton onClick={() => this.hndlClick('brand')}>Назад</HeaderButton>}>*/}\r\n                {/*        Сеты*/}\r\n                {/*    </PanelHeader>*/}\r\n                {/*    <ProductList productsLists={this.state.products} nameCategory=\"sets\" idCategorys=\"0\"/>*/}\r\n                {/*</Panel>*/}\r\n            </View>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nexport default CategoryList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Placeholder, Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar,Textarea, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport Icon16Clear from '@vkontakte/icons/dist/16/clear';\r\nimport DiliveryAddress from \"./DiliveryAddress\";\r\nimport AffiliateList from \"./AffiliateList\";\r\nimport Icon56ErrorOutline from '@vkontakte/icons/dist/56/error_outline';\r\nimport Preorder from \"../preorder\";\r\nimport NoPreorder from \"../noPreorder\";\r\n\r\n\r\nconst orangeBackground = {\r\n    backgroundImage: 'linear-gradient(135deg, #ffb73d, #ffa000)'\r\n};\r\n\r\nconst blueBackground = {\r\n    backgroundColor: '#ffffff'\r\n};\r\n\r\nclass Dilivery extends React.Component{\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            UserCard:{phone:\"\",email:\"\"},\r\n            CheckSMSCode:false,\r\n            phoneValue:\"\",\r\n            codeValue:\"\",\r\n            resultVerificationCode:true,\r\n            tooltip: true,\r\n            snackbar: null,\r\n            showBTNNewAddress:false,\r\n            showFormNewAddress:false\r\n        };\r\n\r\n        this.openBase = this.openBase.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        //this.openBase();\r\n\r\n        async function getPhoneUserVK(setState){\r\n            connect.sendPromise(\"VKWebAppGetPhoneNumber\",{\"sign\":\"T3in3QPDby8GsRNAfsEnEoYmVt7Se2dy0XUOhnCSlSw\"})\r\n                .then((data ) => {\r\n                    //console.log(data,\"Данные пользователя\");\r\n                    setState({ UserCard:{phone: data.phone_number} });\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ------  \",err);\r\n                });\r\n        }\r\n\r\n        //console.log(\"Получаем телефон\");\r\n        {this.props.userSystemInfo.error === true && getPhoneUserVK(this.setState.bind(this));}\r\n    }\r\n\r\n\r\n    openBase (e = null) {\r\n        if (this.state.snackbar) return;\r\n        this.setState({ snackbar:\r\n                <Snackbar\r\n                    layout=\"vertical\"\r\n                    onClose={() => this.setState({ snackbar: null })}\r\n                    before={<Avatar size={24} style={blueBackground}><Icon16Clear fill=\"#ff0000\" width={16} height={16} /></Avatar>}\r\n                >\r\n                    {e===null && <span>Проверочный код введен не верно, повторите попытку!</span>}\r\n                    {e!==null && e}\r\n                </Snackbar>\r\n        });\r\n    }\r\n\r\n\r\n    setVerificationPhone(){\r\n        //console.log('Отправили запрос на верификацию');\r\n        axios('https://суши-тайм.рф/api/VerificationPhone&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_SMS\"){\r\n                        //console.log('СМС отправлено, выводим поле для ввода кода');\r\n                        this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase('Номер телефона введен не верно!');\r\n                    }\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    checkVerificationCode(){\r\n        //console.log('Отправили запрос на проверку кода',this.props.userInfo.id);\r\n        axios('https://суши-тайм.рф/api/VerificationCode&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    phoneVerification: this.state.UserCard.phone,\r\n                    VerificationCode: this.state.codeValue,\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.status === \"OK_CODE_V\"){\r\n                        //console.log('Данные сохранены, можно обновить приложение, пользователь авторизован');\r\n                        this.props.getUserSystemInfo(this.props.userInfo.id);\r\n                        //this.setState({CheckSMSCode:true});\r\n                    }else{\r\n                        //console.log('Ошибка ',data);\r\n                        this.openBase();\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    getValueInputPhone(event){\r\n        this.setState({UserCard:{phone: event.target.value}});\r\n        //console.log(this.state.UserCard.phone);\r\n    }\r\n\r\n    getValueInputCode(event){\r\n        this.setState({codeValue: event.target.value});\r\n    }\r\n\r\n    getCommentsData(e){\r\n        this.props.setComment(e.target.value);\r\n    }\r\n\r\n    getDataCountPerson(types){\r\n        var values_count = this.props.countPerson;\r\n        switch(types){\r\n            case '-': values_count -= 1; break;\r\n            case '+': values_count += 1; break;\r\n            default: console.log('Нет параметра');\r\n        }\r\n\r\n        if(values_count<=0){ values_count = 1;}\r\n        if(values_count === ''){ values_count = 1;}\r\n        if(values_count >9){ values_count = 9;}\r\n\r\n        this.props.setStates({countPerson: values_count});\r\n    }\r\n\r\n    getCountPersonInput(){\r\n        return \"\";\r\n        // return (\r\n        //     <Group title=\"Кол-во приборов\">\r\n        //         <Div style={{display: 'flex',justifyContent:'center'}}>\r\n        //             <Button size=\"l\" stretched style={{marginRight: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'-')}>-</Button>\r\n        //             <Input type=\"number\" style={{maxWidth:80,textAlign:\"center\"}} value={this.props.countPerson} readOnly=\"readOnly\"/>\r\n        //             <Button size=\"l\" stretched style={{marginLeft: 10,maxWidth:50,background:\"#ff7300\"}} onClick={this.getDataCountPerson.bind(this,'+')}>+</Button>\r\n        //         </Div>\r\n        //     </Group>\r\n        // );\r\n    }\r\n\r\n    getInfoUserNoneAuth(){\r\n        return(<Group>\r\n            <FormLayout>\r\n                {this.state.CheckSMSCode === true && <FormLayoutGroup top=\"Введите одноразовый код из СМС\">\r\n\r\n                    <Input type=\"number\" placeholder=\"1234\" onChange={this.getValueInputCode.bind(this)} />\r\n\r\n\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={()=> {\r\n                                //console.log(this.state.codeValue);\r\n                                this.checkVerificationCode()\r\n                                }\r\n                            }\r\n                    >Подтвердить\r\n                    </Button>\r\n                    <Button level=\"secondary\" style={{\"float\":\"right\"}} onClick={() => {this.setState({CheckSMSCode:false})}}>Выслать повторно</Button>\r\n                </FormLayoutGroup>}\r\n\r\n                {this.state.CheckSMSCode === false && <FormLayoutGroup top=\"Подтвердите номер телефона\">\r\n                    <Input type=\"number\" placeholder=\"79876543210\" defaultValue={this.state.UserCard.phone} onChange={this.getValueInputPhone.bind(this)}/>\r\n                    <Button level=\"commerce\" style={{\"background\":\"#ff7300\"}}\r\n                            onClick={\r\n                                () => {\r\n                                    this.setVerificationPhone();\r\n                                    //console.log(this.state.UserCard.phone)\r\n                                }\r\n                            }\r\n                    >\r\n                        Получить код\r\n                    </Button>\r\n                    <Button onClick={() => {this.setState({CheckSMSCode:true})}} level=\"secondary\" style={{\"float\":\"right\"}}>Уже есть код</Button>\r\n                </FormLayoutGroup>}\r\n            </FormLayout>\r\n            {this.state.snackbar}\r\n        </Group>);\r\n    }\r\n\r\n    getButtonTypeDilivery(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"0\"}}>\r\n            <Button size=\"l\" stretched style={{marginRight: 8}} level={this.props.checkedTypeDilivery === 1 ? \"secondary\" : \"commerce\"} onClick={()=>{this.props.setTypeDilivery(0)}}>Доставка</Button>\r\n            <Button size = \"l\" stretched level={this.props.checkedTypeDilivery === 0 ? \"secondary\" : \"commerce\"}  onClick={()=>{this.props.setTypeDilivery(1)}}>Самовывоз</Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n    getButtonTypeOrder(){\r\n        return(<Div style={{display: 'flex',\"paddingBottom\":\"20\",\"paddingTop\":\"0\"}}>\r\n                <Button size=\"l\" stretched style={{marginRight: 8}}\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"commerce\" : \"secondary\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(true);}}\r\n                >\r\n                    Ближайшее\r\n                </Button>\r\n                <Button size = \"l\" stretched\r\n                        level={this.props.DataDeliveryInfo.typeOrderDate ? \"secondary\" : \"commerce\"}\r\n                        onClick={()=>{this.props.DataDeliveryInfo.setTypeOrderDate(false);}}\r\n                >\r\n                    Ко времени\r\n                </Button>\r\n            </Div>\r\n        );\r\n    }\r\n\r\n\r\n    getPreorderBlock(){\r\n        return(\r\n            <Group\r\n                title=\"Время получение заказа\"\r\n            >\r\n                {this.getButtonTypeOrder()}\r\n                {\r\n                    this.props.DataDeliveryInfo.typeOrderDate\r\n                        ?\r\n                        <NoPreorder\r\n                            typeDelivery={this.props.DataDeliveryInfo.checkedTypeDilivery}\r\n                        />\r\n                        :\r\n                        <Preorder\r\n                            DataInfos={this.props.DataDeliveryInfo}\r\n                            setStates={this.props.setStates.bind(this)}\r\n                            key=\"Preorders\"\r\n                        />\r\n                }\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getInfoUserAuth(){\r\n        //console.log('По дефолту адрес ',this.props.addressDefault)\r\n        return(\r\n            <div>\r\n                {this.getButtonTypeDilivery()}\r\n                {this.props.checkedTypeDilivery === 0 ?\r\n                    this.getListAddress()\r\n                    :\r\n                    this.getListAffiliate()\r\n                }\r\n                {this.getPreorderBlock()}\r\n                {this.getCountPersonInput()}\r\n                {this.getCommentsTextarea()}\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getNoneCartProduct(){\r\n        return(\r\n            <Placeholder\r\n                icon={<Icon56ErrorOutline />}\r\n                action={false}\r\n\r\n            >\r\n                <h2>В корзине отсутствуют товары</h2>\r\n                <p>Для совершения заказа, нужно положить хотябы 1 товар в корзину!</p>\r\n            </Placeholder>\r\n        );\r\n    }\r\n\r\n\r\n    getListAddress(){\r\n        //console.log(this.state.showBTNNewAddress);\r\n        return(\r\n            <Group\r\n                className=\"GroupBlockListAddress\"\r\n                title=\"Адреса доставки\"\r\n                   description={this.state.showBTNNewAddress ?\r\n                       <Button\r\n                           size=\"l\"\r\n                           level=\"secondary\"\r\n                           style={{ background: '#FF7300',color:\"#FFFFFF\" }}\r\n                           // onClick={()=>{this.setState({showFormNewAddress:true})}}\r\n                           onClick={()=>{\r\n                               this.props.showModal('MODAL_NEWADDRESS');\r\n                           }}\r\n                       >Добавить адрес</Button>\r\n                       :\r\n                       \"\"}\r\n            >\r\n                <DiliveryAddress\r\n                    userInfo={this.props.userInfo}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    setShowBTNNewAddress={this.setState.bind(this)}\r\n                    showFormNewAddress={this.state.showFormNewAddress}\r\n                    setStates={this.props.setStates.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n\r\n                    showModals={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this)}\r\n                />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getListAffiliate(){\r\n        return (\r\n            <Group title=\"Адреса самовывоза\">\r\n            <AffiliateList\r\n                userInfo={this.props.userInfo}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                getDeliveryDataPriceItogAffiliate={this.props.getDeliveryDataPriceItogAffiliate.bind(this)}\r\n                setStates={this.props.setStates.bind(this)}\r\n            />\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getCommentsTextarea () {\r\n        return (\r\n            <Group title=\"Комментарий к заказу\">\r\n                <Div>\r\n                <Textarea value={this.props.commentary} onChange={this.getCommentsData.bind(this)} placeholder=\"Ваш комментарий\"/>\r\n                </Div>\r\n            </Group>\r\n        );\r\n    }\r\n\r\n    getOkListAddress(Param){\r\n        return(\r\n            Param <=0 ? this.getNoneCartProduct() : this.getInfoUserAuth()\r\n        )\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <div>\r\n                {this.props.userSystemInfo.error === true &&\r\n                    this.getInfoUserNoneAuth()\r\n                }\r\n\r\n                {this.props.userSystemInfo.error === false &&\r\n                    this.getOkListAddress(this.props.ProductList.length)\r\n                }\r\n\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\n\r\n\r\nexport default Dilivery;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAddress from \"./GetOneAddress\";\r\nimport GetOneAddressOff from \"./GetOneAddressOff\";\r\nimport OneProduct from \"../catalog/OneProduct\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nimport FormNewAddress from './FormNewAddress';\r\n\r\nclass DiliveryAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAddress:[],\r\n            listAddressOff:[],\r\n            addressOk:false,\r\n            dataAddress:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getAddressUserSystem();\r\n        this.props.setStates({formNewAddressData: <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n    }\r\n\r\n    setAddressEdit(e){\r\n        //console.log(this.state.listAddress);\r\n        this.props.setStates({formEditAddressData: <FormNewAddress AddressEdit={this.state.listAddress[e]} setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)} hideModals={this.props.hideModals.bind(this)} />});\r\n        this.props.showModals('MODAL_EditADDRESS');\r\n    }\r\n\r\n\r\n    getAddressUserSystem(delUpdate = false){\r\n        axios('https://суши-тайм.рф/api/getAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_UserVK: this.props.userInfo.id,\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                    if(data.error === 'Address not found'){\r\n                        console.log('Нужно вывести форму для создания первого адреса пользователя');\r\n                        this.getFormNewAddress();\r\n                    }else{\r\n\r\n                    }\r\n                }else{\r\n                   // console.log(data);\r\n                    this.setState({listAddress:data.listAddress});\r\n                    this.props.setStates({listAddressGlobal:data.listAddress});\r\n\r\n                    this.setState({listAddressOff:data.ListAddressNoDelivery});\r\n                    this.props.setStates({listAddressGlobalOff:data.ListAddressNoDelivery});\r\n\r\n                    if(delUpdate === true){\r\n                        this.getAddressUsers(this.state.listAddress,true);\r\n                    }else{\r\n                        this.getAddressUsers(this.state.listAddress);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    setAddressInfoUsers(e,type=0){\r\n            if (type === 0) {\r\n                var listAddressU = Object.keys(this.state.listAddress);\r\n                if(listAddressU.length > 0) {\r\n                    // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n                    // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n                    var DataSetAddress = this.state.listAddress[listAddressU[e]];\r\n                    this.props.setStates({\r\n                        addressOrderInfoUser: 'г. ' + DataSetAddress.city + ', ул. ' + DataSetAddress.street + ', д. ' + DataSetAddress.home\r\n                    });\r\n                }\r\n            }\r\n    }\r\n\r\n    getFormNewAddress(){\r\n        this.props.setAddressDefault(null);\r\n        this.state.dataAddress = <FormNewAddress setPopout={this.props.setPopout.bind(this)} userInfo={this.props.userInfo} getAddressUserSystem={this.getAddressUserSystem.bind(this)} setAddressDefault={this.props.setAddressDefault.bind(this)}/>;\r\n        this.setState({addressOk:true});\r\n        this.props.setShowBTNNewAddress({showBTNNewAddress:false});\r\n\r\n    }\r\n\r\n    setDataDiliveryPrice(n,ee = 'Дефолт 0'){\r\n        var listAddressU = Object.keys(this.state.listAddress);\r\n        // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n        // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n        if(listAddressU.length <= 0){\r\n            console.log('Адресов нет, должны вернуть только не доступные адреса');\r\n            this.props.setAddressDefault(null);\r\n            //return this.getAddressUsers(this.state.listAddress, true);\r\n        }else {\r\n            if (listAddressU[n] in this.state.listAddress) {\r\n                //console.log('Все ок, продолжаем по адресам');\r\n            } else {\r\n               // console.log('Адреса такого нет, ставим в дефаулт');\r\n                this.props.setAddressDefault(0);\r\n               // console.log('Должны переустановить дефаултный адрес на 0, адреса есть');\r\n                return this.getAddressUsers(this.state.listAddress, true);\r\n            }\r\n        }\r\n\r\n        if(listAddressU.length <= 0){\r\n           // console.log('Адресов нет, но продолжаем');\r\n           //  console.log('Установили значения стоимости доставки ', ee);\r\n        }else {\r\n            var DataSetAddress = this.state.listAddress[listAddressU[n]].diliveryData;\r\n            this.props.setStates({\r\n                priceDelivery: DataSetAddress.priceDilivery,\r\n                minSumOrder: DataSetAddress.min_sum_order,\r\n                minSumFreeDelivery: DataSetAddress.min_sum_free_dilivery\r\n            });\r\n           // console.log('Установили значения стоимости доставки ', ee);\r\n        }\r\n\r\n    }\r\n\r\n    getAddressUsers(listAddress,delUpdate = false) {\r\n        if(this.props.addressDefault === null & Object.keys(listAddress).length > 0){\r\n          //  console.log('Устанавливаем дефаултное значение адреса на 0','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(0);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n        if(this.props.addressDefault !== null & Object.keys(listAddress).length <= 0){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0 с условием что адресов нет','Длинна массива ',Object.keys(listAddress).length);\r\n            this.props.setAddressDefault(null);\r\n            this.setDataDiliveryPrice(0);\r\n        }\r\n\r\n        if(delUpdate === true){\r\n           // console.log('Устанавливаем дефаултное значение адреса на 0');\r\n            this.props.setAddressDefault(0);\r\n            this.getAddressUsers(listAddress,false);\r\n            this.setDataDiliveryPrice(0);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }else{\r\n            this.state.dataAddress = Object.keys(listAddress).map((dataAddress, keyId) =>\r\n                <GetOneAddress\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId}\r\n                    AddresInfo={listAddress[dataAddress]}\r\n                    NumberAddress={keyId}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n\r\n            this.state.dataAddressOff = Object.keys(this.state.listAddressOff).map((dataAddress2, keyId2) =>\r\n                <GetOneAddressOff\r\n                    setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n                    setDeliveryDataItogs={this.props.setDeliveryDataItogs.bind(this)}\r\n                    setDataDeliveryPrice={this.setDataDiliveryPrice.bind(this)}\r\n                    getAddressUserSystem={this.getAddressUserSystem.bind(this)}\r\n                    setPopout={this.props.setPopout.bind(this)}\r\n                    userInfo={this.props.userInfo}\r\n                    setAddressEdit={this.setAddressEdit.bind(this)}\r\n                    key={'Address_'+keyId2}\r\n                    AddresInfo={this.state.listAddressOff[dataAddress2]}\r\n                    NumberAddress={keyId2}\r\n                    addressDefault={this.props.addressDefault}\r\n                    setAddressDefault={this.props.setAddressDefault.bind(this)}\r\n                />\r\n            );\r\n            this.setState({addressOk:true});\r\n            this.props.setShowBTNNewAddress({showBTNNewAddress:true});\r\n            this.setDataDiliveryPrice(this.props.addressDefault, 'На '+this.props.addressDefault);\r\n            this.props.setDeliveryDataItogs();\r\n            this.setAddressInfoUsers(this.props.addressDefault);\r\n        }\r\n\r\n    }\r\n\r\n    getListAddressVisual(){\r\n        return(\r\n            <div>\r\n                {this.state.dataAddress}\r\n                {this.state.dataAddressOff}\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    render() {\r\n        return (this.state.addressOk === false ? <div>Загрузка адресов доставки <ScreenSpinner/></div> : this.getListAddressVisual()\r\n            );\r\n    };\r\n}\r\n\r\nexport default DiliveryAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n            axios('https://суши-тайм.рф/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:{id:a},\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            this.props.setAddressDefault('del');\r\n                           // console.log('Обновляем адреса',data);\r\n                            this.props.getAddressUserSystem(true);\r\n                            this.props.setPopout({ popout:null});\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    openDefault (a) {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Отмена',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }, {\r\n                        title: 'Удалить',\r\n                        autoclose: true,\r\n                        action: () => this.deletedAddress(a),\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Удаление адреса</h2>\r\n                    <p>Вы уверены что хотите удалить адрес?</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n    getAddressFull(n){\r\n        return(<div>\r\n                <span style={{width:\"75%\",float:\"left\"}}>\r\n                 г. {this.props.AddresInfo.city}, ул. {this.props.AddresInfo.street}, д. {this.props.AddresInfo.home}, подъезд {this.props.AddresInfo.podezd}, этаж {this.props.AddresInfo.etaj}, кв. {this.props.AddresInfo.kvartira}\r\n                </span>\r\n                <span style={{width:\"24%\",float:\"right\"}}><Icon28EditOutline\r\n                    onClick={\r\n                        ()=>{\r\n                            // console.log('Редактируем адрес ',n);\r\n                            this.props.setAddressEdit(this.props.AddresInfo.id);\r\n                        }\r\n                    }\r\n                    style={{float:\"left\",marginRight:\"10px\"}}/> <Icon28CancelCircleOutline style={{float:\"left\"}}\r\n                                                                                           onClick={\r\n                                                                                               ()=>{\r\n                                                                                                   // console.log('Удаляем адрес ');\r\n                                                                                                   this.openDefault(this.props.AddresInfo.id);\r\n                                                                                               }\r\n                                                                                           }\r\n                /></span>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} defaultChecked onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n,'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={this.getAddressFull(n)} onClick={() => {this.props.setAddressDefault(n);this.props.setDataDeliveryPrice(n, 'На нужный');this.props.setDeliveryDataItogs();this.props.setAddressInfoUsers(n);}}>{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddress;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert,Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport Icon28EditOutline from '@vkontakte/icons/dist/28/edit_outline';\r\nimport Icon28CancelCircleOutline from '@vkontakte/icons/dist/28/cancel_circle_outline';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport axios from \"axios\";\r\n\r\nclass GetOneAddressOff extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n    }\r\n\r\n    getAddressTitle(){\r\n        var title = '';\r\n\r\n        if(this.props.AddresInfo.comment !== ''){\r\n            title = this.props.AddresInfo.comment;\r\n        }else{\r\n            title = <span>{this.props.AddresInfo.street} {this.props.AddresInfo.home}</span>;\r\n        }\r\n\r\n        return(\r\n            <span>\r\n                {title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    deletedAddress(a){\r\n        this.props.setPopout({ popout:<ScreenSpinner />});\r\n\r\n        axios('https://суши-тайм.рф/api/deletedAddressUser&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    addressInfo:{id:a},\r\n                    idUserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(data.result.result_add === true){\r\n                        this.props.setAddressDefault('del');\r\n                        //console.log('Обновляем адреса',data);\r\n                        this.props.getAddressUserSystem(true);\r\n                        this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n            });\r\n    }\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'К сожалению мы не можем осуществить доставку на этот адрес.'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio disabled name=\"DiliveryAddress\" value={this.props.AddresInfo.id} description={'К сожалению мы не можем осуществить доставку на этот адрес.'} >{this.getAddressTitle()}</Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.addressDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAddressOff;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport GetOneAffiliateAddress from \"./GetOneAffiliateAddress\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass AffiliateList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            listAffiliate:[],\r\n            addressAffiliateOk:false,\r\n            dataAffiliate:\"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        axios('https://суши-тайм.рф/api/getAffiliate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    id_City: 1,\r\n                    id_UserVK:this.props.userInfo.id\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo,'Самовывоз');\r\n                }else{\r\n                    //console.log(data,'Самовывоз');\r\n                    if(Object.keys(data.listOffAffiliate).length>0){\r\n                       // console.log('Есть запрещенные точки, проводим цикл');\r\n                        Object.keys(data.listOffAffiliate).map((datas,keys)=>\r\n                            {\r\n                                if(this.props.AffiliateDefault === keys){\r\n                                    //console.log('Точка самовывоза по умолчанию совпадает с запрещенной, ставим нуль ', keys);\r\n                                    this.props.setAffiliateDefault(0);\r\n                                }else{\r\n                                   // console.log('Точка по умолчанию не совпадает с запрещенной, ничего не делаем ',keys);\r\n                                }\r\n                            }\r\n                        );\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }else{\r\n                        this.setState({listAffiliate:data.list});\r\n                        this.getAddressAffiliate(this.state.listAffiliate);\r\n                        this.props.setStates({listAffiliateGlobal:data.list});\r\n                    }\r\n\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    setAddressInfoUsers(e,type=1){\r\n        if(type===1){\r\n            var listAddressU = Object.keys(this.state.listAffiliate);\r\n            // console.log(listAddressU,\"Адреса после обработки\");\r\n\r\n            // console.log('Установим данные для адреса ',this.state.listAddress[listAddressU[0]].diliveryData.priceDilivery);\r\n\r\n            var DataSetAddress = this.state.listAffiliate[listAddressU[e]];\r\n            this.props.setStates({\r\n                addressOrderInfoUser: DataSetAddress.title\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    getAddressAffiliate(listAddress) {\r\n        this.props.getDeliveryDataPriceItogAffiliate();\r\n        this.setAddressInfoUsers(this.props.AffiliateDefault);\r\n        this.state.dataAffiliate = Object.keys(listAddress).map((dataAffiliate, keyId) =>\r\n            <GetOneAffiliateAddress\r\n                key={'Affiliate_'+keyId}\r\n                AddresInfo={listAddress[dataAffiliate]}\r\n                NumberAddress={keyId}\r\n                AffiliateDefault={this.props.AffiliateDefault}\r\n                setAffiliateDefault={this.props.setAffiliateDefault.bind(this)}\r\n                setAddressInfoUsers={this.setAddressInfoUsers.bind(this)}\r\n            />\r\n        );\r\n       this.setState({addressAffiliateOk:true});\r\n        //this.state.addressOk:true;\r\n        //return ArrayPr;\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            this.state.addressAffiliateOk === false ? <div><h3>Ареса самовывоза</h3> <ScreenSpinner/> <p></p></div> : this.state.dataAffiliate\r\n        );\r\n    };\r\n}\r\n\r\nexport default AffiliateList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div,Radio,Input,FormLayout,FormLayoutGroup,Button,Snackbar,Avatar, View, Panel, PanelHeader, Group, CellButton, HeaderButton, platform, IOS, Tooltip } from '@vkontakte/vkui';\r\n\r\nclass GetOneAffiliateAddress extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            AddressN:''\r\n        }\r\n    }\r\n\r\n    getAddressTitle(){\r\n        return(\r\n            <span>\r\n               {this.props.AddresInfo.title}\r\n            </span>\r\n        );\r\n    }\r\n\r\n    getAddressFull(){\r\n        return(\r\n            <span style={{\"color\":\"#ffae6b\"}} dangerouslySetInnerHTML={{__html: this.props.AddresInfo.operating_mode}}>\r\n\r\n            </span>\r\n        );\r\n    }\r\n\r\n    defaultCheckedR(e,n){\r\n        if(e === n){\r\n            return (\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    defaultChecked onClick={() => {\r\n                        this.props.setAffiliateDefault(n);\r\n                    ;this.props.setAddressInfoUsers(n);\r\n                    }\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }else{\r\n            return(\r\n                <Radio\r\n                    name=\"AffiliateAddress\"\r\n                    value={this.props.AddresInfo.id}\r\n                    description={this.getAddressFull()}\r\n                    onClick={() => {\r\n                        this.props.setAffiliateDefault(n)}\r\n                    }\r\n                >{\r\n                    this.getAddressTitle()\r\n                }\r\n                </Radio>\r\n            );\r\n        }\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            this.defaultCheckedR(this.props.AffiliateDefault,this.props.NumberAddress)\r\n        );\r\n    };\r\n}\r\n\r\nexport default GetOneAffiliateAddress;","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch, Select, FormLayout} from '@vkontakte/vkui/';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Preorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockPreorder:false,\r\n            listDatePreorder:[],\r\n            SelectDatePreorder:null,\r\n            SelectTimePreorder:null\r\n        }\r\n\r\n        this.onChangeS = this.onChangeS.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockPreorder:true});\r\n        this.getDateList();\r\n        this.setState({\r\n            SelectDatePreorder:this.props.DataInfos.SelectDatePreorder,\r\n            SelectTimePreorder:this.props.DataInfos.SelectTimePreorder\r\n        });\r\n        console.log(this.props.DataInfos.SelectDatePreorder);\r\n    }\r\n\r\n    getDateList(){\r\n        axios('https://суши-тайм.рф/api/getPreorderDate&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    this.setState({listDatePreorder:data.list});\r\n                    console.log(data.list);\r\n                }\r\n            })\r\n            .catch(({err}) => {\r\n                console.log(\"ERROR: ---Запрос СМС---  \",err);\r\n            });\r\n    }\r\n\r\n    onChangeS(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n        this.props.setStates({[name]: value});\r\n        if(name === 'SelectDatePreorder'){\r\n            this.setState({SelectTimePreorder: null});\r\n            this.props.setStates({SelectTimePreorder: null});\r\n        }\r\n        //console.log(this.state);\r\n    }\r\n\r\n    getSelectDate(){\r\n        const ListDate = Object.keys(this.state.listDatePreorder).map((data,n)=>{\r\n            return(\r\n                <option key={data+\"preorderDates\"} value={data}>{this.state.listDatePreorder[data].title}</option>\r\n            );\r\n        });\r\n        return (\r\n            <div>\r\n            <Cell>\r\n                <Select\r\n                    top=\"Дата получения заказа\"\r\n                    key=\"datePreorder\"\r\n                    placeholder=\"Дата получения\"\r\n                    name=\"SelectDatePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectDatePreorder}\r\n            >{ListDate}</Select>\r\n            </Cell>\r\n            <Cell>\r\n                {this.getSelectTime()}\r\n            </Cell>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    getSelectTime(){\r\n        if(this.state.SelectDatePreorder in this.state.listDatePreorder) {\r\n            var ListTimes = this.state.listDatePreorder[this.state.SelectDatePreorder].timeList;\r\n            const ListTime = Object.keys(ListTimes).map((times, n) => {\r\n                if(ListTimes[times].false === true){\r\n                    return ('');\r\n                }else {\r\n                    return (\r\n                        <option key={times + \"preorderTimes\"}\r\n                                value={times}\r\n                        >\r\n                            {ListTimes[times].title}\r\n                        </option>\r\n                    );\r\n                }\r\n            });\r\n            return (\r\n                    <Select\r\n                    top=\"Время получения заказа\"\r\n                    key=\"datePreorderTime\"\r\n                    placeholder=\"Время получения\"\r\n                    name=\"SelectTimePreorder\"\r\n                    onChange={this.onChangeS}\r\n                    defaultValue={this.props.DataInfos.SelectTimePreorder}\r\n                >{ListTime}</Select>\r\n            );\r\n        }else{\r\n            return ('');\r\n        }\r\n    }\r\n\r\n    getBlockPreorder(){\r\n        return(\r\n                <Div key=\"DivPreorder\">\r\n                    {\r\n                        this.state.loadBlockPreorder ?\r\n                            this.getSelectDate()\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Div>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlockPreorder()\r\n        );\r\n    }\r\n}\r\nexport default Preorder;\r\n","import React from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Div, Group, List,Cell, Switch} from '@vkontakte/vkui/';\r\nimport Icon24Place from '@vkontakte/icons/dist/24/place';\r\nimport Icon24Recent from '@vkontakte/icons/dist/24/recent';\r\n\r\n\r\nclass NoPreorder extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loadBlockOrder:false\r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.setState({loadBlockOrder:true});\r\n    }\r\n\r\n    getBlocknoPreorder(){\r\n        return(\r\n                <Cell\r\n                    before={<Icon24Recent />}\r\n                    style={{paddingBottom:\"10px\"}}\r\n                >\r\n                    {\r\n                        this.state.loadBlockOrder ?\r\n                            <div>{this.props.typeDelivery ? \"Забрать в ближайшее время\" : \"Доставить в ближайшее время\"}</div>\r\n                            :\r\n                            \"Загрузка блока выбора даты\"\r\n                    }\r\n                </Cell>\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            this.getBlocknoPreorder()\r\n        );\r\n    }\r\n}\r\nexport default NoPreorder;\r\n","import React, { useState, useEffect } from 'react';\r\nimport axios from \"axios\";\r\nimport {Div,Radio, Input,FormLayout,Group,Button, List, Cell, Snackbar,Avatar,Textarea, View, Panel, PanelHeader, CellButton, HeaderButton, platform, IOS, Tooltip, Slider, Select, Placeholder } from '@vkontakte/vkui';\r\nimport ym from 'react-yandex-metrika';\r\n\r\nclass NewOrderServer extends React.Component{\r\n\r\n    constructor (props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n\r\n    }\r\n\r\n    setDataServer(){\r\n        this.props.setStates({statusNewOrder:'Запрос прошел'});\r\n        axios('https://суши-тайм.рф/api/setNewOrder&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    idUserVK: this.props.userInfo.id,\r\n                    dataOrder:this.props.DataOrderInfo\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                   // console.log('Ответ сервера ',data);\r\n                    if(data.status == \"OK\"){\r\n                        this.props.getPageOkOrderSet({newOrderStats:true});\r\n                        this.props.setOkNewOrderView();\r\n                        try{\r\n                            if(global.Metrika.Markers[4].active == '1') {\r\n                                ym('reachGoal', global.Metrika.Markers[4].marker);\r\n                            }\r\n                        }catch (e) {\r\n\r\n                        }\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Запрос Адресов---  \",err);\r\n            });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Button size=\"xl\" onClick={()=>{this.setDataServer()}} className=\"WeightFontBold\">Завершить заказ</Button>\r\n        );\r\n    };\r\n}\r\n\r\nexport default NewOrderServer;","import React, {useState} from 'react';\r\n\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport {Div,PanelHeader,HeaderButton, IOS,platform,Placeholder} from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\nimport ProductList from \"./catalog/ProductList\";\r\nimport Icon28Search from '@vkontakte/icons/dist/28/search';\r\nimport ym from 'react-yandex-metrika';\r\n\r\nrequire('./global/index.js');\r\n\r\nclass SearchResultProductBlock extends React.Component {\r\n    constructor (props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            arrayProduct:this.props.arrayProduct,\r\n            settingsFilterSearch:{\r\n                typeSearch: global.settingsFilterSearch.typeSearch\r\n            }\r\n            ,\r\n            search: global.searchProduct\r\n        }\r\n    }\r\n\r\n    hndlClick = (aP) => {\r\n        //console.log('--- ', 'Нажали на кнопку '+aP);\r\n        this.setState({ activePanel: aP });\r\n        //global.settingsFilterSearch.typeProduct = false;\r\n    };\r\n\r\n    setProductModal = (aP) => {\r\n        // console.log('--- ', 'Установили товар в модалку '+aP+' - - - -XTTT');\r\n        this.setState({ productModal: aP })\r\n    };\r\n\r\n    setActiveCategory = (aP) => {\r\n        // console.log('--- ', 'Установили категорию '+aP);\r\n        this.setState({ ActiveCategory: aP })\r\n    };\r\n\r\n    getCountButton(typeProduct,counts,setCart){\r\n        const Buttons =\r\n            <div className=\"CounterInCart\">\r\n                <div className=\"minus\" onClick={() => {setCart(typeProduct,'-');}}>\r\n                    -\r\n                </div>\r\n                {counts}\r\n                <div className=\"pluse\" onClick={() => {setCart(typeProduct);}}>\r\n                    +\r\n                </div>\r\n            </div>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n\r\n    getButtonInCartProduct(typeProduct,setCart){\r\n        //console.log(this.props.CartProducts,'---0---');\r\n        if(!!this.props.CartProducts){\r\n            var ButOk = false;\r\n            var id_CartPr = '';\r\n            this.props.CartProducts.map((data,key)=>{\r\n                if(data.id_Product === typeProduct.id_Product & data.type_product === typeProduct.type_product){\r\n                    ButOk = true;\r\n                    id_CartPr = key;\r\n                }\r\n            });\r\n\r\n            if(ButOk === true){\r\n                //console.log('Выполняется условие товар есть');\r\n                return  this.getCountButton(typeProduct,this.props.CartProducts[id_CartPr]['count'],setCart);\r\n            }else{\r\n                //console.log('Выполняется условие товара нет');\r\n                return this.getInCarts(typeProduct,setCart);\r\n            }\r\n        }else{\r\n            //console.log('Выполняется условие корзина пуста, вывод просто кнопки');\r\n            return this.getInCarts(typeProduct,setCart);\r\n        }\r\n\r\n\r\n    }\r\n\r\n    getInCarts(typeProduct,setCart){\r\n        // console.log(setCart);\r\n        const Buttons =\r\n            <button onClick={() => {\r\n                setCart(typeProduct);\r\n                try {\r\n                    if (global.Metrika.Markers[1].active == '1') {\r\n                        ym('reachGoal', global.Metrika.Markers[1].marker);\r\n                    }else{\r\n                        //   console.log('Цель отключена');\r\n                    }\r\n                }catch (e) {\r\n                    // console.log(e,global.Metrika);\r\n                }\r\n            }}>\r\n                В корзину\r\n            </button>;\r\n\r\n        return Buttons;\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.arrayProduct);\r\n    }\r\n\r\n    getArrayCategoryProduct(){\r\n        const ArCat = Object.keys(this.state.arrayProduct);\r\n        const ResultProductList =  ArCat.map((data,key)=>{\r\n            //console.log(data,key, 'оророро');\r\n\r\n            var ResultCatsSearch =\r\n                <ProductList\r\n                    onClickProduct={this.hndlClick.bind(this,'Panels_Product')}\r\n                    productsLists={this.state.arrayProduct[data].ProductList}\r\n                    key={this.state.arrayProduct[data].id_Category}\r\n                    idCategorys={data}\r\n                    nameCategory=\"sets\"\r\n                    setCart={this.props.setCart.bind(this)}\r\n                    getButtonInCartProduct={this.getButtonInCartProduct.bind(this)}\r\n                    setProductModal={this.setProductModal.bind(this)}\r\n                    searchProduct={this.props.varSearch}\r\n\r\n                    showModal={this.props.showModal.bind(this)}\r\n                    hideModals={this.props.hideModals.bind(this,null)}\r\n\r\n                    clrStatus={false}\r\n                />;\r\n\r\n            return (ResultCatsSearch);\r\n\r\n        });\r\n        return ResultProductList;\r\n    }\r\n\r\n    getProductSearchResult(OPT) {\r\n\r\n        return (\r\n            this.getArrayCategoryProduct()\r\n        );\r\n    }\r\n\r\n    getStatusSearch(){\r\n        var statusText = false;\r\n        var statusFiltes = false;\r\n\r\n        this.props.varSearch === '' || this.props.varSearch === undefined ? statusText = false : statusText = true;\r\n        global.settingsFilterSearch.typeProduct === false ? statusFiltes = false : statusFiltes = true;\r\n\r\n        if(statusFiltes === true || statusText === true){\r\n            //console.log(statusFiltes,statusText);\r\n            return true;\r\n        }else{\r\n            //console.log(statusFiltes,statusText);\r\n            return false;\r\n        }\r\n\r\n    }\r\n\r\n\r\n    render () {\r\n\r\n        const osname = platform();\r\n\r\n\r\n\r\n\r\n        return (<Div style={{background:\"#FFFFFF\",paddingTop:\"60px\"}}>\r\n            {\r\n                this.getStatusSearch() === false ?\r\n                    <Placeholder\r\n                        icon={<Icon28Search />}\r\n                        header=\"Поиск пуст\"\r\n                    >\r\n                       Начните вводить название товара или выберите фильтр\r\n                    </Placeholder>\r\n                    :\r\n                    this.getProductSearchResult()\r\n            }\r\n        </Div>);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport default SearchResultProductBlock;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { platform, IOS } from '@vkontakte/vkui';\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport persik from '../img/persik.png';\nimport './Persik.css';\n\nconst osName = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { platform, IOS } from '@vkontakte/vkui';\r\nimport Panel from '@vkontakte/vkui/dist/components/Panel/Panel';\r\nimport PanelHeader from '@vkontakte/vkui/dist/components/PanelHeader/PanelHeader';\r\nimport HeaderButton from '@vkontakte/vkui/dist/components/HeaderButton/HeaderButton';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Div from '@vkontakte/vkui/dist/components/Div/Div';\r\nimport { View, Group, List, Cell } from '@vkontakte/vkui';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport persik from '../img/persik.png';\r\nimport './Persik.css';\r\n\r\nconst osName = platform();\r\n\r\nconst Persik = props => (\r\n    <Panel id={props.id}>\r\n        <PanelHeader\r\n            left={<HeaderButton onClick={props.go} data-to=\"home\">\r\n                {osName === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\r\n            </HeaderButton>}\r\n        >\r\n            Persik\r\n        </PanelHeader>\r\n        <Div>\r\n            <h2 size=\"x3\" level=\"1\">Это не совсем персик</h2>\r\n            <View activePanel=\"main\">\r\n                <Panel id=\"main\">\r\n                    <PanelHeader>VKUI</PanelHeader>\r\n                    <Group title=\"Items\">\r\n                        <List>\r\n                            <Cell>Hello</Cell>\r\n                            <Cell>World</Cell>\r\n                        </List>\r\n                    </Group>\r\n                </Panel>\r\n            </View>\r\n        </Div>\r\n        <img className=\"Persik\" src={persik} alt=\"Персик Это Кот\"/>\r\n    </Panel>\r\n);\r\n\r\nPersik.propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    go: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Persik;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport View from '@vkontakte/vkui/dist/components/View/View';\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\nimport '@vkontakte/vkui/dist/vkui.css';\r\n\r\nimport UserInfo from './ProfileUser/UserInfo';\r\nimport Persik from './Persik';\r\nimport NoPersik from './Nopersik';\r\n\r\nconst ProfileUserPage = (dataUsers) => {\r\n\tconst [activePanel, setActivePanel] = useState('homeUsers');\r\n\tconst [fetchedUser, setUser] = useState(null);\r\n\t//const [popout, setPopout] = useState(<ScreenSpinner size='large' />);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\t// connect.subscribe(({ detail: { type, data }}) => {\r\n\t\t// \tif (type === 'VKWebAppUpdateConfig') {\r\n\t\t// \t\tconst schemeAttribute = document.createAttribute('scheme');\r\n\t\t// \t\tschemeAttribute.value = data.scheme ? data.scheme : 'client_light';\r\n\t\t// \t\tdocument.body.attributes.setNamedItem(schemeAttribute);\r\n\t\t// \t}\r\n\t\t// });\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await connect.sendPromise('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\t\t\t//setPopout(null);\r\n\t\t\t//console.log(connect);\r\n\t\t}\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n\tconst go = e => {\r\n\t\tsetActivePanel(e.currentTarget.dataset.to);\r\n\t};\r\n\r\n\r\n\treturn (\r\n\t\t<View activePanel={activePanel}>\r\n\t\t\t<UserInfo\r\n\t\t\t\tid='homeUsers'\r\n\t\t\t\tfetchedUser={fetchedUser}\r\n\t\t\t\tgo={go}\r\n\t\t\t\tdataUsers={dataUsers}\r\n\t\t\t\tsetActivePanels={setActivePanel.bind(this)}\r\n\t\t\t\tsetStatusNotification={dataUsers.setStatusNotification.bind(this)}\r\n\t\t\t\tsetShowUserOrderList={dataUsers.setShowUserOrderList.bind(this)}\r\n\t\t\t/>\r\n\t\t</View>\r\n\t);\r\n}\r\n\r\nexport default ProfileUserPage;\r\n\r\n","import 'core-js/features/map';\r\nimport 'core-js/features/set';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport App from './StartPageVKapp';\r\n// import App from './App2';\r\n// import registerServiceWorker from './sw';\r\nimport { YMInitializer } from 'react-yandex-metrika';\r\n\r\n\r\n// Init VK  Mini App\r\nconnect.send('VKWebAppInit');\r\n\r\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\r\n// расскомментируйте строку с registerServiceWorker();\r\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\r\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT\r\n// registerServiceWorker();\r\n\r\nReactDOM.render(\r\n        <App />\r\n    , document.getElementById('root'));\r\n\r\nReactDOM.render(\r\n    <YMInitializer\r\n        accounts={[56971987]}\r\n        options = { {\r\n            clickmap:true,\r\n            trackLinks:true,\r\n            accurateTrackBounce:true,\r\n            webvisor:true\r\n        } }\r\n        version = \"2\"\r\n    />\r\n    , document.getElementById('Metrickss'));\r\n","// globals/index.js\r\n\r\nglobal.CityIdSystem = '&CityIdSystem=4';\r\n\r\n // global.phonenumberCollVisual = '+7 (4722) 777-498';\r\nglobal.phonenumberCollVisual = '+7 (473) 203-01-28';\r\n // global.phonenumberColl = 'tel:+74722777498';\r\nglobal.phonenumberColl = 'tel:+74732030128';\r\n // global.linkSocSeti = '//vk.com/im?sel=-87074888';\r\nglobal.linkSocSeti = '//vk.com/im?sel=-202333296';\r\n\r\nglobal.ApiKey = '03478f08258a5b0e7f4a1e83dae33da9'+global.CityIdSystem;\r\n\r\nglobal.CityListBind = [];\r\n\r\nglobal.searchProduct = '';\r\n\r\nglobal.settingsFilterSearch = {\r\n    typeSearch:0,\r\n    typeProduct: false\r\n}\r\n\r\nglobal.ii =0;\r\n\r\nglobal.Metrika = {}","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";","import React from 'react';\r\nimport { Div, Search, Cell } from '@vkontakte/vkui';\r\n// import Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\n// import Icon24Back from '@vkontakte/icons/dist/24/back';\r\n// import ModalProduct from '../ModalProduct.js';\r\nimport OneProduct from \"./OneProduct\";\r\nimport ym from 'react-yandex-metrika';\r\n\r\nimport axios from \"axios\";\r\nimport Icon24Filter from '@vkontakte/icons/dist/24/filter';\r\nrequire('../../panels/global/index.js');\r\n\r\nclass ProductList extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            activePanel: 'panel1',\r\n            nameCategory: 'none',\r\n            productsLists: null,\r\n            products:[{\"1\":{\"title\":\"ЕКАРНЫЙ БАБАЙ\"}}]\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        function ReverceCatalog(Pr){\r\n            var res = Object.keys(Pr).reduceRight(function (arr, last, index, coll) {\r\n                // console.log(last, index);\r\n                return (arr = arr.concat(last))\r\n            }, []);\r\n            return res;\r\n        }\r\n\r\n        function SearchProductTitle(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['title'])){\r\n                   retr[keyId] = oneProduct;\r\n                  // console.log(Pr[oneProduct][0]);\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductDescription(Pr,DSr){\r\n            //console.log(Pr);\r\n\r\n            const Objs = Object.keys(Pr);\r\n\r\n            const retr = [];\r\n\r\n           Objs.forEach(function (oneProduct, keyId, array) {\r\n               if(testInput(DSr, Pr[oneProduct][0]['description'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n                }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n\r\n        function SearchProductType(Pr,DSr,ListIdProduct){\r\n            const retr = [];\r\n\r\n            ListIdProduct.forEach(function (oneProduct, keyId, array) {\r\n               if(testType(DSr, Pr[oneProduct][0]['modyficate'])){\r\n                   retr[keyId] = oneProduct;\r\n               }\r\n           }\r\n            );\r\n            return retr;\r\n        }\r\n\r\n        function testType(re,modyficate) {\r\n            var status = false;\r\n            if(modyficate.length <=0){\r\n                status = false;\r\n            }else{\r\n                modyficate.forEach(function(oneProduct, keyId, array){\r\n                    if(oneProduct.mod === re){\r\n                        status = true;\r\n                    }\r\n                });\r\n            }\r\n\r\n            return status;\r\n        }\r\n\r\n        function testInput(re, str) {\r\n            re = re.replace(/\\\\/g,\"\").replace(/ /g,\"_\").replace(/-/g,\"_\").toLowerCase();\r\n            str = str.replace(/\\\\/g,\"\").replace(/ /g,\"_\").replace(/-/g,\"_\").toLowerCase();\r\n\r\n            var midstring;\r\n            if (str.search(re) != -1) {\r\n                midstring = true;\r\n            } else {\r\n                midstring = false;\r\n            }\r\n\r\n            return midstring;\r\n        }\r\n\r\n        function compare(a, b) {\r\n            if (a.price < b.price) {\r\n                return -1;\r\n            }\r\n            if (a.price > b.price) {\r\n                return 1;\r\n            }\r\n            // a должно быть равным b\r\n            return 0;\r\n        }\r\n\r\n        function comparePrice(Pr){\r\n            //console.log(Pr);\r\n            return Object.keys(Pr).sort(compare)\r\n        }\r\n\r\n\r\n        function ArrayProducts(Pr,ClickProductF,setProductModal,setCart, getButtonInCartProduct,ReverceStatus = 0,SearchText = null) {\r\n            var CatalogLists = [];\r\n            if(ReverceStatus === 0){\r\n                CatalogLists = ReverceCatalog(Pr);\r\n            }\r\n            if(ReverceStatus === 1){\r\n                CatalogLists = comparePrice(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 2){\r\n                CatalogLists = Object.keys(Pr);\r\n            }\r\n\r\n            if(ReverceStatus === 3){\r\n                if(global.settingsFilterSearch.typeSearch === 0) {\r\n                    CatalogLists = SearchProductTitle(Pr, SearchText);\r\n                }else{\r\n                    CatalogLists = SearchProductDescription(Pr, SearchText);\r\n                }\r\n                try {\r\n                    if (global.Metrika.Markers[2].active == '1') {\r\n                        ym('reachGoal', global.Metrika.Markers[2].marker);\r\n                    }\r\n                }catch (e) {\r\n\r\n                }\r\n            }\r\n\r\n            if(global.settingsFilterSearch.typeProduct === false){}else{\r\n                CatalogLists = SearchProductType(Pr, global.settingsFilterSearch.typeProduct,CatalogLists);\r\n            }\r\n\r\n\r\n            //console.log('|||||||||||||||||||||||||||||||',CatalogLists.length);\r\n\r\n            const ArrayPr = CatalogLists.map((oneProduct, keyId) =>\r\n                <OneProduct\r\n                    key={'Products_'+keyId}\r\n                    product={Pr[oneProduct]}\r\n                    ClickProduct={ClickProductF.bind(this)}\r\n                    setCart={setCart.bind(this)}\r\n                    setProductModal={setProductModal.bind(this)}\r\n                    getButtonInCartProduct={getButtonInCartProduct.bind(this)}\r\n                />\r\n            );\r\n\r\n            if(ArrayPr.length <=0){\r\n               return false;\r\n            }else{\r\n                return ArrayPr;\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function ShowProductCategory(nameCategorys){\r\n            //console.log('ShowProductCategory ',nameCategorys);\r\n            if(nameCategorys.nameCategorys === 'sets'){\r\n                // console.log('d-d-d-d-',nameCategorys.productsLists[nameCategorys.idCategory]);\r\n                const resGetSets = <GetSets\r\n                    SearchState={nameCategorys.SearchState}\r\n                    key={nameCategorys.key}\r\n                    names={nameCategorys.nameCategorys}\r\n                    ProductArray={nameCategorys.productsLists}\r\n                    ClickProduct={nameCategorys.ClickProduct.bind(this)}\r\n                    setCart={nameCategorys.setCart.bind(this)}\r\n                    setProductModal={nameCategorys.setProductModal.bind(this)}\r\n                    getButtonInCartProduct={nameCategorys.getButtonInCartProduct.bind(this)}\r\n                    clrStatus={nameCategorys.clrStatus}\r\n                />;\r\n                if(resGetSets === false){\r\n\r\n                    return false;\r\n                }else{\r\n                    //console.log(resGetSets);\r\n                    return (resGetSets);\r\n                }\r\n\r\n            }\r\n            if(nameCategorys.nameCategorys === 'sushi'){\r\n                return (<GetSushi names={nameCategorys.nameCategorys}/>);\r\n            }\r\n            if(nameCategorys.nameCategorys === 'roli'){\r\n                return (<GetRoli names={nameCategorys.nameCategorys}/>);\r\n            }else{\r\n                return (<GetNoneCat names={nameCategorys.nameCategorys}/>);\r\n            }\r\n\r\n        }\r\n\r\n\r\n        function GetSets(ArrayPr) {\r\n          // console.log('SearchState ',ArrayPr.SearchState );\r\n            if(ArrayPr.SearchState == '' || ArrayPr.SearchState === false || ArrayPr.SearchState === undefined){\r\n                return (\r\n                    <div>\r\n                        {ArrayPr.clrStatus === true ? <div className=\"clrHeight\"></div> : \"\" }\r\n                        <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                            {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),0)}\r\n                        </Div>\r\n                    </div>\r\n                );\r\n            }else{\r\n\r\n                const ResPrVal = ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,ArrayPr.SearchState);\r\n\r\n                if(ResPrVal === false){\r\n                   //console.log('Нет данных',ResPrVal);\r\n                    return false;\r\n                }else{\r\n                    return (\r\n                        <div>\r\n                        {ArrayPr.clrStatus === true ? <div className=\"clrHeight\"></div> : \"\" }\r\n                            <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                                {ResPrVal}\r\n                            </Div>\r\n                        </div>\r\n                    );\r\n                }\r\n\r\n            }\r\n        }\r\n\r\n\r\n        function SearchFn(ArrayPr,SrText) {\r\n           //console.log('ArrayPr ',ArrayPr);\r\n            return (\r\n                <Div id={\"block_categorys_\"+ArrayPr.names} key={\"block_categorys_\"+ArrayPr.names} className=\"blockCategoryFlex\">\r\n                    {ArrayProducts(ArrayPr.ProductArray,ArrayPr.ClickProduct.bind(this),ArrayPr.setProductModal.bind(this),ArrayPr.setCart.bind(this),ArrayPr.getButtonInCartProduct.bind(this),3,SrText)}\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetSushi(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://суши-тайм.рф/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с креветкой</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://суши-тайм.рф/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://суши-тайм.рф/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши краб</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Суши\" src=\"https://суши-тайм.рф/images/tovars/croppedImg_93445642.png\"/></Div><Div className=\"titleProduct\">Суши копченый лосот</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\">Стоимость <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetRoli(names) {\r\n            return (\r\n                <Div id={names.names} className=\"blockCategoryFlex\">\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://суши-тайм.рф/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с тунцом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://суши-тайм.рф/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл с лососем</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://суши-тайм.рф/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Ролл Филадельфия</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                    <Div className=\"blockProduct\"><Div className=\"imgPrewieProduct\"><img alt=\"Роллы\" src=\"https://суши-тайм.рф/images/tovars/croppedImg_1061187804.jpeg\"/></Div><Div className=\"titleProduct\">Филадельфия с крабом</Div><Div className=\"DescrProduct\">Описание товара</Div><Div className=\"priceProductBig\"> <span className=\"priceProduct\">1 000 руб.</span></Div></Div>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        function GetNoneCat(names){\r\n            return (\r\n                <Div id={names} className=\"blockCategoryFlex\">\r\n                <h1>К сожаление категория пуста!</h1>\r\n                </Div>\r\n            );\r\n        }\r\n\r\n        // function GetModalProduct(product){\r\n        //     return(\r\n        //\r\n        //     )\r\n        // }\r\n\r\n        if(this.props.clrStatus === undefined){\r\n            var clrStatus = true;\r\n        }else{\r\n            var clrStatus = this.props.clrStatus;\r\n        }\r\n\r\n        const ResultCategoryReturn = <ShowProductCategory\r\n            SearchState={this.props.searchProduct}\r\n            productsLists={this.props.productsLists}\r\n            nameCategorys={this.props.nameCategory}\r\n            idCategory={this.props.idCategorys}\r\n            ClickProduct={this.props.onClickProduct.bind(this,'Panels_Product')}\r\n            setCart={this.props.setCart.bind(this)}\r\n            setProductModal={this.props.setProductModal.bind(this)}\r\n            getButtonInCartProduct={this.props.getButtonInCartProduct.bind(this)}\r\n            clrStatus={clrStatus}\r\n        />;\r\n\r\n        if(ResultCategoryReturn === false){\r\n            return (\"\");\r\n        }else{\r\n            //console.log(ResultCategoryReturn);\r\n            return (\r\n                ResultCategoryReturn\r\n            );\r\n        }\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default ProductList;","import React, { useState, useEffect } from 'react';\r\nimport connect from '@vkontakte/vk-connect';\r\nimport {Alert, Div,Input,FormLayout, Button, Select, Search, Footer, Cell } from '@vkontakte/vkui';\r\nimport axios from \"axios\";\r\nimport ScreenSpinner from '@vkontakte/vkui/dist/components/ScreenSpinner/ScreenSpinner';\r\n\r\nclass FormNewAddress extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n                city: '',\r\n                street: '',\r\n                streetSearch: '',\r\n                home: '',\r\n                entrance: '',\r\n                level: '',\r\n                flat: '',\r\n                comment:'',\r\n            streetCityVisual:'',\r\n            streetName:null,\r\n            streetList:{},\r\n            search:'',\r\n            pauseLoadStreet:true\r\n        }\r\n\r\n        this.addressItems = [\r\n            // { label: 'Город', name: 'city', statusChech:'yes', minValue:5, valPls:'' },\r\n            //{ label: 'Название улицы', name: 'street', statusChech:'yes', minValue:4, valPls:'' },\r\n            { label: '№ дома', name: 'home', statusChech:'yes', minValue:0, valPls:'' },\r\n            { label: '№ квартиры/офиса', name: 'flat', statusChech:'', minValue:0, valPls:'' },\r\n            { label: '№ подъезда', name: 'entrance', statusChech:'', minValue:0, valPls:'' },\r\n            { label: 'Этаж', name: 'level', statusChech:'', minValue:0, valPls:''},\r\n            { label: 'Примечание', name: 'comment', statusChech:'', minValue:0, valPls:'Пример: Квартира сестры' }\r\n        ];\r\n\r\n        this.onChange = this.onChange.bind(this);\r\n        this.onInput = this.onInput.bind(this);\r\n        this.openDefault = this.openDefault.bind(this);\r\n\r\n        this.closePopout = this.closePopout.bind(this);\r\n\r\n        if(this.props.AddressEdit){\r\n            this.state = {\r\n                    id:this.props.AddressEdit.id,\r\n                    city: this.props.AddressEdit.city,\r\n                    street: this.props.AddressEdit.street,\r\n                    home: this.props.AddressEdit.home,\r\n                    entrance: this.props.AddressEdit.podezd,\r\n                    level: this.props.AddressEdit.etaj,\r\n                    flat: this.props.AddressEdit.kvartira,\r\n                    comment: this.props.AddressEdit.comment,\r\n                streetCityVisual:this.props.AddressEdit.city+' '+this.props.AddressEdit.street,\r\n                streetName:this.props.AddressEdit.street,\r\n                streetList:{},\r\n                search:this.props.AddressEdit.street,\r\n                }\r\n        }\r\n    }\r\n\r\n    onChange(e) {\r\n        const { name, value } = e.currentTarget;\r\n        // if((value === null || value === '') & name === 'city'){}else {\r\n        //     this.setState({[name]: value});\r\n        // }\r\n        this.setState({[name]: value});\r\n       // console.log(this.state);\r\n    }\r\n\r\n    onInput(e) {\r\n        console.log(e);\r\n        this.setState({ search: e });\r\n        if(e.length >2) {\r\n            this.getStreetList(e, 1);\r\n        }else{\r\n            this.setStreetList({});\r\n        }\r\n        // console.log(e.target.value,'Ввели');\r\n        // this.getStreetList(e.target.value,1)\r\n        // return value;\r\n    }\r\n\r\n\r\n    openDefault () {\r\n        this.props.setPopout({ popout:\r\n                <Alert\r\n                    actions={[{\r\n                        title: 'Исправить',\r\n                        autoclose: true,\r\n                        style: 'cancel'\r\n                    }]}\r\n                    onClose={this.closePopout}\r\n                >\r\n                    <h2>Не все поля адреса заполнены</h2>\r\n                    <p>Внимательно заполните все поля, для сохранения адреса доставки!</p>\r\n                </Alert>\r\n        });\r\n    }\r\n\r\n\r\n\r\n    saveNewAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://суши-тайм.рф/api/setAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    saveEditAddress(){\r\n        if(this.state.city === '' || this.state.street === '' || this.state.home === ''){\r\n            this.openDefault();\r\n        }else{\r\n           // console.log('Все ок, отправлем адрес на сохранение');\r\n            this.props.setPopout({ popout:<ScreenSpinner />});\r\n            //Функция для отправки адреса на сервер.\r\n\r\n            axios('https://суши-тайм.рф/api/editAddressUser&apiKey='+global.ApiKey+'',\r\n                {\r\n                    method: 'POST',\r\n                    headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                    data: {\r\n                        addressInfo:this.state,\r\n                        idUserVK:this.props.userInfo.id\r\n                    },\r\n                    responseType:'text'\r\n                })\r\n                .then(({ data }) => {\r\n                    if(\"error\" in data){\r\n                        console.log(data.error,'|',data.errorInfo);\r\n                    }else{\r\n                        if(data.result.result_add === true){\r\n                            console.log('Обновляем адреса',data);\r\n                                this.props.getAddressUserSystem();\r\n                            this.props.setPopout({ popout:null});\r\n                            //this.props.setAddressDefault(0);\r\n                        }else{\r\n                            console.log('Ошибка ',data);\r\n                        }\r\n                    }\r\n                })\r\n                .catch((err) => {\r\n                    console.log(\"ERROR: ---Запрос Новый Адрес---  \",err);\r\n                });\r\n        }\r\n    }\r\n\r\n    getStreetList(S,idC){\r\n        console.log(S,idC,'Передали');\r\n        this.setState({pauseLoadStreet:true});\r\n       // this.props.setPopout({ popout:<ScreenSpinner />});\r\n        axios('https://суши-тайм.рф/api/getStreetList&apiKey='+global.ApiKey+'',\r\n            {\r\n                method: 'GET',\r\n                headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\r\n                data: {\r\n                    nameStreet:S,\r\n                    city_users_id:idC\r\n                },\r\n                params:{\r\n                    nameStreet:S,\r\n                    city_users_id:idC\r\n                },\r\n                responseType:'text'\r\n            })\r\n            .then(({ data }) => {\r\n                if(\"error\" in data){\r\n                    console.log(data.error,'|',data.errorInfo);\r\n                }else{\r\n                    if(\"result\" in data){\r\n                        console.log('Получили список вариантов',data.result);\r\n                        this.setStreetList(data.result);\r\n                       // this.props.setPopout({ popout:null});\r\n                    }else{\r\n                        console.log('Ошибка ',data);\r\n                    }\r\n                }\r\n            })\r\n            .catch((err) => {\r\n                console.log(\"ERROR: ---Получение списка улиц---  \",err);\r\n            });\r\n    }\r\n\r\n\r\n    closePopout () {\r\n        this.props.setPopout({ popout: null });\r\n    }\r\n\r\n    getCitySelect(idCity,def = null){\r\n        if(idCity in global.CityListBind) {\r\n            const ListCityOrigin = global.CityListBind[idCity].listCity;\r\n            const ListCitys = Object.keys(global.CityListBind[idCity].listCity);\r\n            const ListOption = ListCitys.map((data, key) => {\r\n                return (<option\r\n                    key={key}\r\n                    value={ListCityOrigin[data].title}\r\n                >\r\n                    {\r\n                        ListCityOrigin[data].title\r\n                    }\r\n                </option>);\r\n            });\r\n            return (\r\n                ListOption\r\n            );\r\n        }else{\r\n            return (\"\");\r\n        }\r\n    }\r\n\r\n    setStreetList(list){\r\n        this.setState({streetList : list,pauseLoadStreet:true});\r\n        console.log('прпрпрпр',this.state.streetList);\r\n        this.setState({pauseLoadStreet:false});\r\n    }\r\n\r\n    setStreetCityAdres(Localitytype,LocalityName,LocalityId,typeStreet,streetName) {\r\n        this.setState({\r\n            city: LocalityName,\r\n            street: typeStreet+', '+streetName,\r\n            streetSearch: streetName,\r\n            streetCityVisual: Localitytype+' '+LocalityName+' '+typeStreet + ' ' + streetName,\r\n        });\r\n    }\r\n\r\n\r\n\r\n    getFormSetStreetName(){\r\n        return(\r\n            <div className=\"searckBoxses\">\r\n                <Search value={this.state.search}  onChange={this.onInput} after={null} placeholder=\"Введите улицу\"/>\r\n                <div style={{minHeight:\"400px\"}}>\r\n                {this.state.pauseLoadStreet === true ? \"\" :\r\n                    Object.keys(this.state.streetList).length > 0 ?\r\n                        Object.keys(this.state.streetList).map((number,id) =>\r\n                            <Cell onClick={()=>{this.setStreetCityAdres(this.state.streetList[number].typeLocality,this.state.streetList[number].LocalityName,this.state.streetList[number].idLocality,this.state.streetList[number].typeStreet,this.state.streetList[number].name);}} className=\"streetCellChecker\" key={this.state.streetList[number].id}>\r\n                                <div className=\"nameCity\">{this.state.streetList[number].LocalityName}</div>\r\n                                <div className=\"nameStreet\">{this.state.streetList[number].typeStreet} {this.state.streetList[number].name}</div>\r\n                            </Cell>\r\n                        )\r\n                        :\r\n                        <Cell className=\"streetCellChecker\" key=\"noneStreet\">\r\n                            Ничего не найдено\r\n                        </Cell>\r\n                }\r\n                </div>\r\n                <div style={{padding:\"160px 0\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    getOkStreetNameValue(){\r\n        return(<FormLayout>\r\n            {/*<Select placeholder=\"Город / Населенный пункт\" onChange={this.onChange} name=\"city\" key={\"input_city\"} top=\"Город\">*/}\r\n            {/*    {this.getCitySelect(1)}*/}\r\n            {/*</Select>*/}\r\n            <Input\r\n                type=\"text\"\r\n                name=\"street\"\r\n                key={\"input_street\"}\r\n\r\n                value={\r\n                    this.state.streetCityVisual\r\n                }\r\n                status='valid'\r\n                onClick={()=>{this.setState({search:this.state.streetSearch,street:'',streetSearch:''})}}\r\n            />\r\n            {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                <Input\r\n                    type=\"text\"\r\n                    name={name}\r\n                    key={\"input_\"+name}\r\n                    top={label}\r\n                    onChange={this.onChange}\r\n                    value={\r\n                        this.state[name]\r\n                    }\r\n                    status={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >=minValue  ? 'valid' : 'error'\r\n                                : 'error'\r\n                            : \"\"\r\n                    }\r\n                    bottom={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >=minValue  ? '' : 'Введенные значение не корректно '+this.state[name].length\r\n                                : 'Обязательно к заполнению'\r\n                            : \"\"\r\n                    }\r\n                    placeholder={valPls}\r\n                />\r\n            ))}\r\n            <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveNewAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Подтвердить адрес</Button>\r\n        </FormLayout>);\r\n    }\r\n\r\n\r\n    getFormSetStreetNameEdit(){\r\n        return(\r\n            <div className=\"searckBoxses\">\r\n                <Search value={this.state.search}  onChange={this.onInput} after={null}  placeholder=\"Введите улицу\"/>\r\n                <div style={{minHeight:\"400px\"}}>\r\n                {this.state.pauseLoadStreet === true ? \"\" :\r\n                    Object.keys(this.state.streetList).length > 0 ?\r\n                        Object.keys(this.state.streetList).map((number,id) =>\r\n                            <Cell onClick={()=>{this.setStreetCityAdres(this.state.streetList[number].typeLocality,this.state.streetList[number].LocalityName,this.state.streetList[number].idLocality,this.state.streetList[number].typeStreet,this.state.streetList[number].name);}} className=\"streetCellChecker\" key={this.state.streetList[number].id}>\r\n                                <div className=\"nameCity\">{this.state.streetList[number].LocalityName}</div>\r\n                                <div className=\"nameStreet\">{this.state.streetList[number].typeStreet} {this.state.streetList[number].name}</div>\r\n                            </Cell>\r\n                        )\r\n                        :\r\n                        <Cell className=\"streetCellChecker\" key=\"noneStreet\">\r\n                            Ничего не найдено\r\n                        </Cell>\r\n                }\r\n                </div>\r\n                <div style={{padding:\"160px 0\"}}></div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n\r\n    getOkStreetNameValueEdit(){\r\n        return(<FormLayout>\r\n\r\n            <Input\r\n                type=\"text\"\r\n                name=\"street\"\r\n                key={\"input_street\"}\r\n\r\n                value={\r\n                    this.state.streetCityVisual\r\n                }\r\n                status='valid'\r\n                onClick={()=>{this.setState({search:this.state.streetSearch,street:'',streetSearch:''})}}\r\n            />\r\n\r\n            {this.addressItems.map(({ label, name, statusChech, minValue, valPls }) => (\r\n                <Input\r\n                    type=\"text\"\r\n                    name={name}\r\n                    key={\"input_\"+name}\r\n                    top={label}\r\n                    onChange={this.onChange}\r\n                    status={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >minValue  ? 'valid' : 'error'\r\n                                : 'error'\r\n                            : \"\"\r\n                    }\r\n                    value={this.state[name]}\r\n                    bottom={\r\n                        statusChech ?\r\n                            this.state[name] ?\r\n                                this.state[name].length >minValue  ? '' : 'Введенные значение не корректно'\r\n                                : 'Обязательно к заполнению'\r\n                            : \"\"\r\n                    }\r\n                    placeholder={valPls}\r\n                />\r\n            ))}\r\n            <Button size=\"l\" style={{background:\"#ff7300\"}} onClick={()=>{this.saveEditAddress(); if(this.props.hideModals){this.props.hideModals()}}}>Завершить редактирование</Button>\r\n        </FormLayout>);\r\n    }\r\n\r\n\r\n    getNulledForm(){\r\n        return(\r\n                this.state.street !== '' ? this.getOkStreetNameValue() : this.getFormSetStreetName()\r\n        );\r\n    }\r\n\r\n\r\n    getEditForm(){\r\n        return(\r\n            this.state.street !== '' ? this.getOkStreetNameValueEdit() : this.getFormSetStreetNameEdit()\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Div>\r\n                {this.props.AddressEdit ? this.getEditForm() : this.getNulledForm()}\r\n            </Div>\r\n        );\r\n    };\r\n}\r\n\r\nexport default FormNewAddress;"],"sourceRoot":""}